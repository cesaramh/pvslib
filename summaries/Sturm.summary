
Setting tmp dir to value of environment variable TMPDIR:
  /var/folders/c5/_vh2p4714fggt43wwpxsvmlh0000gp/T/

; file: /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/MetiTarski/metit.lisp
; in: DEFUN TRANSLATE-TO-METITARSKI-GLOBAL-VARIABLE
;     (PVS::METIT-ID-NAME "V")
; 
; caught STYLE-WARNING:
;   undefined function: PVS::METIT-ID-NAME
; 
; compilation unit finished
;   Undefined function:
;     METIT-ID-NAME
;   caught 1 STYLE-WARNING condition

; file: /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/MetiTarski/metit.lisp
; in: DEFMETHOD TRANSLATE-TO-METITARSKI* (NAME-EXPR T)
;     (PVS::METIT-INTERPRETATION PVS:EXPR)
; 
; caught STYLE-WARNING:
;   undefined function: PVS::METIT-INTERPRETATION
; 
; compilation unit finished
;   Undefined function:
;     METIT-INTERPRETATION
;   caught 1 STYLE-WARNING condition

; file: /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/MetiTarski/metit.lisp
; in: DEFMETHOD TRANSLATE-TO-METITARSKI* (APPLICATION T)
;     (PVS::METIT-INTERPRETATION PVS:OPERATOR)
; 
; caught STYLE-WARNING:
;   undefined function: PVS::METIT-INTERPRETATION
; 
; compilation unit finished
;   Undefined function:
;     METIT-INTERPRETATION
;   caught 1 STYLE-WARNING condition

Defining METIT. 
*** 
*** Processing Sturm (0:35:27 6/16/2023)
*** Generated by proveit 7.1.0 (Nov 05, 2020)
*** 
Context changed to /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/Sturm/
Parsing top
top parsed in 0.00 seconds
Typechecking top
Parsing compute_sturm
compute_sturm parsed in 0.05 seconds
compute_sturm is already parsed
Typechecking compute_sturm
Parsing sturm
sturm parsed in 0.02 seconds
sturm is already parsed
Typechecking sturm
Restored theory from /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/structures/pvsbin/for_iterate.bin in 0.34s (load part took 0.00s)
Restored theory from /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/ints/pvsbin/factorial.bin in 0.05s (load part took 0.00s)
Restored theory from /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/reals/pvsbin/real_fun_ops.bin in 0.03s (load part took 0.00s)
Restored theory from /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/reals/pvsbin/sigma.bin in 0.11s (load part took 0.00s)
Restored theory from /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/reals/pvsbin/sigma_swap.bin in 0.05s (load part took 0.00s)
Restored theory from /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/reals/pvsbin/product.bin in 0.12s (load part took 0.00s)
Restored theory from /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/reals/pvsbin/sigma_upto.bin in 0.05s (load part took 0.00s)
Restored theory from /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/reals/pvsbin/sqrt_exists.bin in 0.03s (load part took 0.00s)
Restored theory from /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/reals/pvsbin/sq.bin in 0.04s (load part took 0.00s)
Restored theory from /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/reals/pvsbin/sign.bin in 0.04s (load part took 0.00s)
Restored theory from /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/reals/pvsbin/sqrt.bin in 0.04s (load part took 0.00s)
Restored theory from /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/reals/pvsbin/factorial.bin in 0.07s (load part took 0.00s)
Restored theory from /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/reals/pvsbin/binomial.bin in 0.09s (load part took 0.00s)
Restored theory from /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/reals/pvsbin/sigma_nat.bin in 0.05s (load part took 0.00s)
Restored theory from /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/reals/pvsbin/polynomials.bin in 0.16s (load part took 0.00s)
Parsing more_polynomial_props
more_polynomial_props parsed in 0.04 seconds
more_polynomial_props is already parsed
Typechecking more_polynomial_props
Restored theory from /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/reals/pvsbin/prelude_aux.bin in 0.02s (load part took 0.00s)
Restored theory from /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/reals/pvsbin/log_nat.bin in 0.04s (load part took 0.00s)
Parsing min_max
min_max parsed in 0.01 seconds
min_max is already parsed
Typechecking min_max
min_max typechecked in 0.40s: 8 TCCs, 0 proved, 2 subsumed, 6 unproved
Restored theory from /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/reals/pvsbin/binomial_identities.bin in 0.09s (load part took 0.00s)

 LET/WHERE variable sigx at line 156, col 8 is given type
  {sig: real |
     (sig = -1 OR sig = 1 OR sig = 0) AND
      sig * polynomial(a, n)(x) = abs(polynomial(a, n)(x))} from its value expression.


 LET/WHERE variable sigz at line 156, col 45 is given type
  {sig: real |
     (sig = -1 OR sig = 1 OR sig = 0) AND
      sig * polynomial(a, n)(z) = abs(polynomial(a, n)(z))} from its value expression.


 LET/WHERE variable epcon at line 234, col 10 is given type
  nzreal from its value expression.


 LET/WHERE variable delt at line 242, col 10 is given type
  posreal from its value expression.


 LET/WHERE variable maxn at line 258, col 8 is given type
  {lastn: nat |
     lastn <= n AND
      ((EXISTS (ii: upto(n)): a(ii) /= 0) IMPLIES
        (polynomial(poly_n_deriv(a, n - lastn), lastn)(x) /= 0 AND
          FORALL (i: nat):
            i > lastn AND i <= n IMPLIES
             polynomial(poly_n_deriv(a, n - i), i)(x) = 0))} from its value expression.


 LET/WHERE variable epsil at line 265, col 8 is given type
  posreal from its value expression.


 LET/WHERE variable mnd at line 266, col 5 is given type
  {lastn: nat |
     lastn <= n AND
      ((EXISTS (ii: upto(n)): a(ii) /= 0) IMPLIES
        (polynomial(poly_n_deriv(a, n - lastn), lastn)(x) /= 0 AND
          FORALL (i: nat):
            i > lastn AND i <= n IMPLIES
             polynomial(poly_n_deriv(a, n - i), i)(x) = 0))} from its value expression.


 LET/WHERE variable aquot at line 307, col 28 is given type
  real from its value expression.


 LET/WHERE variable log2j at line 308, col 15 is given type
  {k: int | aquot <= 2 ^ k AND FORALL (i: int): i < k IMPLIES 2 ^ i < aquot} from its value expression.


 LET/WHERE variable rootexp at line 309, col 4 is given type
  int from its value expression.


 LET/WHERE variable aquot at line 307, col 28 is given type
  real from its value expression.


 LET/WHERE variable log2j at line 308, col 15 is given type
  {k: int | aquot <= 2 ^ k AND FORALL (i: int): i < k IMPLIES 2 ^ i < aquot} from its value expression.


 LET/WHERE variable rootexp at line 309, col 4 is given type
  int from its value expression.


 LET/WHERE variable maxKfun at line 306, col 10 is given type
  [nat -> rational] from its value expression.


 LET/WHERE variable negsign at line 318, col 12 is given type
  [nat -> int] from its value expression.


 LET/WHERE variable nega at line 319, col 5 is given type
  [nat -> real] from its value expression.


 LET/WHERE variable newa at line 320, col 5 is given type
  [nat -> real] from its value expression.


 LET/WHERE variable negbound at line 321, col 5 is given type
  {K: real |
     FORALL (x: real): polynomial(nega, n)(x) = 0 AND x > 0 IMPLIES x <= K} from its value expression.


 LET/WHERE variable posbound at line 322, col 5 is given type
  {K: real |
     FORALL (x: real): polynomial(newa, n)(x) = 0 AND x > 0 IMPLIES x <= K} from its value expression.


 LET/WHERE variable Kprb at line 328, col 10 is given type
  {K: nnreal | FORALL (x: real): polynomial(a, n)(x) = 0 IMPLIES abs(x) <= K} from its value expression.

more_polynomial_props typechecked in 2.535s: 94 TCCs, 0 proved, 34 subsumed, 60 unproved; 20 msgs
Parsing polynomial_division
polynomial_division parsed in 0.00 seconds
polynomial_division is already parsed
Typechecking polynomial_division
Restored theory from /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/structures/pvsbin/more_list_props.bin in 0.21s (load part took 0.00s)
Restored theory from /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/structures/pvsbin/listn.bin in 0.05s (load part took 0.00s)
Restored theory from /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/structures/pvsbin/array2list.bin in 0.04s (load part took 0.00s)

 LET/WHERE variable ldt at line 18, col 10 is given type
  DivType from its value expression.


 LET/WHERE variable thisterm at line 20, col 7 is given type
  real from its value expression.


 LET/WHERE variable pd at line 31, col 8 is given type
  DivType from its value expression.


 LET/WHERE variable pd at line 38, col 8 is given type
  DivType from its value expression.


 LET/WHERE variable pd at line 44, col 8 is given type
  DivType from its value expression.

polynomial_division typechecked in 0.65s: 9 TCCs, 0 proved, 0 subsumed, 9 unproved; 5 msgs
Parsing gcd
gcd parsed in 0.00 seconds
gcd is already parsed
Typechecking gcd
Parsing divides_lems
divides_lems parsed in 0.00 seconds
divides_lems is already parsed
Typechecking divides_lems
Parsing min_lem
min_lem parsed in 0.00 seconds
min_lem is already parsed
Typechecking min_lem
min_lem typechecked in 0.00s: No TCCs generated
Parsing max_bounded_posnat
max_bounded_posnat parsed in 0.00 seconds
max_bounded_posnat is already parsed
Typechecking max_bounded_posnat
max_bounded_posnat typechecked in 0.05s: 5 TCCs, 0 proved, 0 subsumed, 5 unproved
divides_lems typechecked in 0.12s: 1 TCC, 0 proved, 0 subsumed, 1 unproved
Restored theory from /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/ints/pvsbin/mod_lems.bin in 0.03s (load part took 0.00s)
Parsing div
div parsed in 0.01 seconds
div is already parsed
Typechecking div
Parsing floor_div_lems
floor_div_lems parsed in 0.00 seconds
floor_div_lems is already parsed
Typechecking floor_div_lems
floor_div_lems typechecked in 0.03s: No TCCs generated
Parsing abs_rews
abs_rews parsed in 0.00 seconds
abs_rews is already parsed
Typechecking abs_rews
abs_rews typechecked in 0.01s: No TCCs generated
div typechecked in 0.30s: 6 TCCs, 0 proved, 1 subsumed, 5 unproved

 LET/WHERE variable rem at line 117, col 12 is given type
  {k | abs(k) < abs(j)} from its value expression.

Parsing pigeonhole
pigeonhole parsed in 0.00 seconds
pigeonhole is already parsed
Typechecking pigeonhole
pigeonhole typechecked in 0.00s: No TCCs generated
gcd typechecked in 1.043s: 55 TCCs, 0 proved, 19 subsumed, 36 unproved; 1 msg
Parsing number_sign_changes
number_sign_changes parsed in 0.01 seconds
number_sign_changes is already parsed
Typechecking number_sign_changes

 LET/WHERE variable prev at line 14, col 13 is given type
  NSC from its value expression.


 LET/WHERE variable nsci at line 27, col 18 is given type
  NSC from its value expression.


 LET/WHERE variable nscn at line 28, col 18 is given type
  NSC from its value expression.


 LET/WHERE variable nsca at line 53, col 8 is given type
  NSC from its value expression.


 LET/WHERE variable nscb at line 54, col 8 is given type
  NSC from its value expression.


 LET/WHERE variable nsca at line 88, col 10 is given type
  NSC from its value expression.


 LET/WHERE variable nscb at line 89, col 9 is given type
  NSC from its value expression.


 LET/WHERE variable nsca at line 103, col 10 is given type
  NSC from its value expression.


 LET/WHERE variable nscb at line 104, col 9 is given type
  NSC from its value expression.


 LET/WHERE variable nsca at line 117, col 10 is given type
  nat from its value expression.


 LET/WHERE variable nscb at line 118, col 9 is given type
  nat from its value expression.


 LET/WHERE variable nsca at line 134, col 10 is given type
  nat from its value expression.


 LET/WHERE variable nscb at line 135, col 9 is given type
  nat from its value expression.

number_sign_changes typechecked in 0.45s: 23 TCCs, 0 proved, 4 subsumed, 19 unproved; 13 msgs
Restored theory from /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/structures/pvsbin/below_arrays.bin in 0.03s (load part took 0.00s)
Restored theory from /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/structures/pvsbin/permutations.bin in 0.04s (load part took 0.00s)
Restored theory from /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/structures/pvsbin/max_array_def.bin in 0.03s (load part took 0.00s)
Restored theory from /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/structures/pvsbin/min_array_def.bin in 0.04s (load part took 0.00s)
Restored theory from /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/structures/pvsbin/sort_array_def.bin in 0.04s (load part took 0.00s)
Restored theory from /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/structures/pvsbin/sort_array.bin in 0.03s (load part took 0.00s)
Parsing gcd_coeff
gcd_coeff parsed in 0.01 seconds
gcd_coeff is already parsed
Typechecking gcd_coeff

 LET/WHERE variable oldgcd at line 22, col 13 is given type
  {m: nat |
     FORALL (ii: nat):
       ii < length[int](cdr[int](ll)) IMPLIES
        divides(m, nth[int](cdr[int](ll), ii))} from its value expression.


 LET/WHERE variable thisgcd at line 43, col 8 is given type
  {m: nat |
     FORALL (ii: nat):
       ii < length[int](ll) IMPLIES divides(m, nth[int](ll, ii))} from its value expression.


 LET/WHERE variable thisgcd at line 51, col 8 is given type
  {m: nat |
     FORALL (ii: nat): ii < length[int](l) IMPLIES divides(m, nth[int](l, ii))} from its value expression.


 LET/WHERE variable L at line 78, col 8 is given type
  {nl: list[int] |
     length[int](nl) <= length[int](ll) AND
      (FORALL (i: nat):
         i < length[int](ll) IMPLIES
          nth[int](ll, i) =
           (IF i < length[int](ll) - length[int](nl) THEN 0
            ELSE nth[int](nl, i + length[int](nl) - length[int](ll))
            ENDIF))
       AND
       ((length[int](nl) > 0 OR
          EXISTS (i: below(length[int](ll))): nth(ll, i) /= 0)
         IMPLIES (length[int](nl) > 0 AND car[int](nl) /= 0))} from its value expression.


 LET/WHERE variable L at line 86, col 8 is given type
  list[int] from its value expression.

gcd_coeff typechecked in 1.943s: 33 TCCs, 0 proved, 3 subsumed, 30 unproved; 5 msgs

 LET/WHERE variable pd at line 21, col 46 is given type
  DivType from its value expression.


 LET/WHERE variable nsc at line 83, col 8 is given type
  [[real, nat] -> NSC] from its value expression.


 LET/WHERE variable nsc at line 94, col 8 is given type
  [[real, nat] -> NSC] from its value expression.


 LET/WHERE variable nsc at line 104, col 8 is given type
  [[real, nat] -> NSC] from its value expression.


 LET/WHERE variable nsc at line 131, col 10 is given type
  [real -> NSC] from its value expression.


 LET/WHERE variable Nroots at line 132, col 9 is given type
  int from its value expression.


 LET/WHERE variable nscy at line 140, col 10 is given type
  NSC from its value expression.


 LET/WHERE variable nscninf at line 141, col 9 is given type
  NSC from its value expression.


 LET/WHERE variable Nroots at line 142, col 9 is given type
  int from its value expression.


 LET/WHERE variable nscx at line 150, col 10 is given type
  NSC from its value expression.


 LET/WHERE variable nscinf at line 151, col 9 is given type
  NSC from its value expression.


 LET/WHERE variable Nroots at line 152, col 9 is given type
  int from its value expression.


 LET/WHERE variable nschigh at line 158, col 10 is given type
  NSC from its value expression.


 LET/WHERE variable nsclow at line 159, col 9 is given type
  NSC from its value expression.


 LET/WHERE variable Nroots at line 160, col 9 is given type
  int from its value expression.

sturm typechecked in 11.623s: 34 TCCs, 0 proved, 18 subsumed, 16 unproved; 15 msgs
Parsing remainder_sequence
remainder_sequence parsed in 0.01 seconds
remainder_sequence is already parsed
Typechecking remainder_sequence
Parsing polynomial_pseudo_divide
polynomial_pseudo_divide parsed in 0.01 seconds
polynomial_pseudo_divide is already parsed
Typechecking polynomial_pseudo_divide

 LET/WHERE variable ldt at line 26, col 10 is given type
  DivListType from its value expression.


 LET/WHERE variable thisterm at line 28, col 7 is given type
  int from its value expression.


 LET/WHERE variable psd at line 39, col 8 is given type
  {DT: DivListType |
     (m > n OR i > n - m AND length(DT`reml) = 1 + n AND DT`rdegl = n) OR
      (m = 0 AND length(DT`reml) = 0 AND DT`rdegl = 0) OR
       (m > 0 AND length(DT`reml) = i + m AND length(DT`reml) = 1 + DT`rdegl)} from its value expression.


 LET/WHERE variable pd at line 40, col 5 is given type
  DivType from its value expression.


 LET/WHERE variable qlength at line 41, col 1 is given type
  nat from its value expression.


 LET/WHERE variable rlength at line 42, col 1 is given type
  nat from its value expression.


 LET/WHERE variable psd at line 71, col 8 is given type
  {DT: DivListType |
     (m > n OR i > n - m AND length(DT`reml) = 1 + n AND DT`rdegl = n) OR
      (m = 0 AND length(DT`reml) = 0 AND DT`rdegl = 0) OR
       (m > 0 AND length(DT`reml) = i + m AND length(DT`reml) = 1 + DT`rdegl)} from its value expression.


 LET/WHERE variable pd at line 72, col 5 is given type
  DivType from its value expression.


 LET/WHERE variable qlength at line 73, col 1 is given type
  nat from its value expression.


 LET/WHERE variable rlength at line 74, col 1 is given type
  nat from its value expression.


 LET/WHERE variable psd at line 86, col 8 is given type
  {DT: DivListType |
     (m > n OR 0 > n - m AND length(DT`reml) = 1 + n AND DT`rdegl = n) OR
      (m = 0 AND length(DT`reml) = 0 AND DT`rdegl = 0) OR
       (m > 0 AND length(DT`reml) = m AND length(DT`reml) = 1 + DT`rdegl)} from its value expression.


 LET/WHERE variable pd at line 87, col 5 is given type
  DivType from its value expression.


 LET/WHERE variable qlength at line 88, col 1 is given type
  nat from its value expression.


 LET/WHERE variable rlength at line 89, col 1 is given type
  nat from its value expression.


 LET/WHERE variable ppd at line 93, col 8 is given type
  {DT: DivListType |
     (m > n OR 0 > n - m AND length(DT`reml) = 1 + n AND DT`rdegl = n) OR
      (m = 0 AND length(DT`reml) = 0 AND DT`rdegl = 0) OR
       (m > 0 AND length(DT`reml) = m AND length(DT`reml) = 1 + DT`rdegl)} from its value expression.


 LET/WHERE variable thisrem at line 94, col 5 is given type
  list[int] from its value expression.


 LET/WHERE variable thisrem at line 103, col 10 is given type
  list[int] from its value expression.


 LET/WHERE variable pd at line 104, col 9 is given type
  DivType from its value expression.


 LET/WHERE variable thisdeg at line 105, col 3 is given type
  int from its value expression.


 LET/WHERE variable thispoly at line 106, col 3 is given type
  [nat -> int] from its value expression.


 LET/WHERE variable pr at line 113, col 8 is given type
  list[int] from its value expression.


 LET/WHERE variable pr at line 118, col 8 is given type
  list[int] from its value expression.


 LET/WHERE variable g at line 131, col 8 is given type
  [nat -> int] from its value expression.


 LET/WHERE variable h at line 134, col 1 is given type
  [nat -> int] from its value expression.

polynomial_pseudo_divide typechecked in 1.049s: 18 TCCs, 0 proved, 0 subsumed, 18 unproved; 24 msgs

 LET/WHERE variable thiscurr at line 17, col 56 is given type
  list[int] from its value expression.


 LET/WHERE variable pbig at line 22, col 10 is given type
  [nat -> int] from its value expression.


 LET/WHERE variable nbig at line 23, col 9 is given type
  int from its value expression.


 LET/WHERE variable plittle at line 24, col 3 is given type
  [nat -> int] from its value expression.


 LET/WHERE variable currlength at line 32, col 8 is given type
  nat from its value expression.


 LET/WHERE variable csplittle at line 41, col 12 is given type
  list[int] from its value expression.


 LET/WHERE variable cspbig at line 42, col 5 is given type
  list[int] from its value expression.


 LET/WHERE variable newg at line 43, col 5 is given type
  [nat -> int] from its value expression.


 LET/WHERE variable newn at line 44, col 5 is given type
  int from its value expression.


 LET/WHERE variable newh at line 45, col 5 is given type
  [nat -> int] from its value expression.


 LET/WHERE variable newm at line 46, col 5 is given type
  int from its value expression.


 LET/WHERE variable newlist at line 47, col 5 is given type
  list[int] from its value expression.


 LET/WHERE variable g at line 60, col 8 is given type
  [nat -> int] from its value expression.

remainder_sequence typechecked in 1.948s: 37 TCCs, 0 proved, 7 subsumed, 30 unproved; 13 msgs
Parsing clear_denominators
clear_denominators parsed in 0.00 seconds
clear_denominators is already parsed
Typechecking clear_denominators

 In declaration PosRatSet_glb_posnat:
  added conversion extend[real, posnat, bool, FALSE]
             
  to PosRatSet(x), converting
     [posnat -> bool]
  to [real -> bool]


 In declaration PosRatMeas:
  added conversion extend[real, posnat, bool, FALSE]
             
  to PosRatSet(x), converting
     [posnat -> bool]
  to [real -> bool]


 In declaration PosRatMeas_glb_minus_posnat:
  added conversion extend[real, posnat, bool, FALSE]
             
  to PosRatSet(x - pn), converting
     [posnat -> bool]
  to [real -> bool]


 In declaration PosRatMeas_glb_minus_posnat:
  added conversion extend[real, posnat, bool, FALSE]
             
  to PosRatSet(x), converting
     [posnat -> bool]
  to [real -> bool]


 LET/WHERE variable thisden at line 66, col 8 is given type
  posnat from its value expression.


 LET/WHERE variable currpoly at line 71, col 8 is given type
  {ans: [# newpoly: [nat -> rat], currgcd: posnat #] |
     (EXISTS (cp: posrat): FORALL (j: nat): ans`newpoly(j) = cp * aq(j)) AND
      FORALL (j: upto(n - 1)):
        integer_pred(ans`newpoly(j)) AND divides(ans`currgcd, ans`newpoly(j))} from its value expression.


 LET/WHERE variable thisden at line 72, col 1 is given type
  posnat from its value expression.


 LET/WHERE variable rptir at line 80, col 6 is given type
  {ans: [# newpoly: [nat -> rat], currgcd: posnat #] |
     (EXISTS (cp: posrat): FORALL (j: nat): ans`newpoly(j) = cp * aq(j)) AND
      FORALL (j: upto(n)):
        integer_pred(ans`newpoly(j)) AND divides(ans`currgcd, ans`newpoly(j))} from its value expression.


 LET/WHERE variable ppoly at line 81, col 6 is given type
  [nat -> rat] from its value expression.


 LET/WHERE variable mgcd at line 82, col 6 is given type
  posnat from its value expression.

clear_denominators typechecked in 0.30s: 30 TCCs, 0 proved, 1 subsumed, 29 unproved; 4 conversions; 6 msgs
Restored theory from /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/reals/pvsbin/RealInt.bin in 0.10s (load part took 0.00s)
Restored theory from /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/reals/pvsbin/real_orders.bin in 0.02s (load part took 0.00s)
Parsing real_order_ep
real_order_ep parsed in 0.00 seconds
real_order_ep is already parsed
Typechecking real_order_ep
real_order_ep typechecked in 0.02s: 1 TCC, 0 proved, 0 subsumed, 1 unproved

 LET/WHERE variable sl at line 32, col 8 is given type
  list[list[int]] from its value expression.


 LET/WHERE variable newa at line 54, col 8 is given type
  [nat -> int] from its value expression.


 LET/WHERE variable nscnorm at line 61, col 1 is given type
  [real -> NSC] from its value expression.


 LET/WHERE variable nschighlow at line 63, col 8 is given type
  [bool -> NSC] from its value expression.


 LET/WHERE variable newlow at line 65, col 1 is given type
  real from its value expression.


 LET/WHERE variable newhigh at line 68, col 1 is given type
  real from its value expression.


 LET/WHERE variable Nroots at line 71, col 7 is given type
  int from its value expression.


 LET/WHERE variable adjlow at line 75, col 8 is given type
  uint8 from its value expression.


 LET/WHERE variable rootnum at line 81, col 5 is given type
  int from its value expression.


 LET/WHERE variable Aset at line 82, col 5 is given type
  [real -> boolean] from its value expression.


 LET/WHERE variable rootnum at line 86, col 5 is given type
  int from its value expression.


 LET/WHERE variable Aset at line 87, col 5 is given type
  [real -> boolean] from its value expression.


 LET/WHERE variable rootnum at line 91, col 5 is given type
  int from its value expression.


 LET/WHERE variable Aset at line 92, col 5 is given type
  [real -> boolean] from its value expression.


 LET/WHERE variable rootnum at line 96, col 5 is given type
  int from its value expression.


 LET/WHERE variable Aset at line 97, col 5 is given type
  [real -> boolean] from its value expression.


 LET/WHERE variable rootnum at line 101, col 5 is given type
  int from its value expression.


 LET/WHERE variable Aset at line 102, col 5 is given type
  [real -> boolean] from its value expression.


 LET/WHERE variable rootstotal at line 110, col 10 is given type
  int from its value expression.


 LET/WHERE variable adjlow at line 111, col 10 is given type
  int from its value expression.


 LET/WHERE variable adjhigh at line 113, col 10 is given type
  int from its value expression.


 LET/WHERE variable rootnum at line 120, col 7 is given type
  nat from its value expression.


 LET/WHERE variable Aset at line 121, col 5 is given type
  [real -> boolean] from its value expression.


 LET/WHERE variable newa at line 139, col 8 is given type
  [nat -> int] from its value expression.


 LET/WHERE variable sl at line 140, col 8 is given type
  list[list[int]] from its value expression.


 LET/WHERE variable M at line 145, col 12 is given type
  {K: posreal | FORALL (x: real): polynomial(a, n)(x) = 0 IMPLIES abs(x) < K} from its value expression.


 LET/WHERE variable newa at line 191, col 10 is given type
  [nat -> int] from its value expression.


 LET/WHERE variable sl at line 192, col 10 is given type
  list[list[int]] from its value expression.

compute_sturm typechecked in 15.571s: 50 TCCs, 0 proved, 9 subsumed, 41 unproved; 28 msgs
Parsing sturmsquarefree
sturmsquarefree parsed in 0.01 seconds
sturmsquarefree is already parsed
Typechecking sturmsquarefree

 LET/WHERE variable P at line 17, col 8 is given type
  [nat -> [real -> real]] from its value expression.


 LET/WHERE variable nsc at line 78, col 8 is given type
  [[real, nat] -> NSC] from its value expression.


 LET/WHERE variable nsc at line 92, col 8 is given type
  [[real, nat] -> NSC] from its value expression.


 LET/WHERE variable nsc at line 121, col 10 is given type
  [real -> NSC] from its value expression.


 LET/WHERE variable Nroots at line 122, col 9 is given type
  int from its value expression.


 LET/WHERE variable pd at line 132, col 46 is given type
  DivType from its value expression.

sturmsquarefree typechecked in 0.43s: 10 TCCs, 0 proved, 2 subsumed, 8 unproved; 6 msgs
Parsing polylist
polylist parsed in 0.00 seconds
polylist is already parsed
Typechecking polylist

 LET/WHERE variable newl at line 17, col 8 is given type
  list[rat] from its value expression.


 LET/WHERE variable thisco at line 18, col 8 is given type
  rat from its value expression.


 LET/WHERE variable thisdeg at line 19, col 1 is given type
  int from its value expression.


 LET/WHERE variable plcoeff at line 52, col 8 is given type
  rat from its value expression.


 LET/WHERE variable qlcoeff at line 53, col 5 is given type
  rat from its value expression.


 LET/WHERE variable newpl at line 54, col 1 is given type
  list[rat] from its value expression.


 LET/WHERE variable newql at line 55, col 1 is given type
  list[rat] from its value expression.


 LET/WHERE variable dz at line 105, col 11 is given type
  bool from its value expression.


 LET/WHERE variable dmax at line 105, col 14 is given type
  below(length(pl)) from its value expression.


 LET/WHERE variable len at line 106, col 9 is given type
  nat from its value expression.


 LET/WHERE variable upans at line 114, col 10 is given type
  {degans: [# allzero: bool, maxnon: below(length(cdr(pl))) #] |
     (degans`allzero IFF
       FORALL (j: below(length(cdr(pl)))): nth(cdr(pl), j) = 0)
      AND
      (degans`allzero OR
        FORALL (j: below(length(cdr(pl)))):
          j > degans`maxnon IMPLIES nth(cdr(pl), j) = 0)
       AND (degans`allzero OR nth(cdr(pl), degans`maxnon) /= 0)} from its value expression.


 LET/WHERE variable upvalid at line 115, col 9 is given type
  bool from its value expression.


 LET/WHERE variable drec at line 126, col 8 is given type
  {degans: [# allzero: bool, maxnon: below(length(pl)) #] |
     (degans`allzero IFF FORALL (j: below(length(pl))): nth(pl, j) = 0) AND
      (degans`allzero OR
        FORALL (j: below(length(pl))):
          j > degans`maxnon IMPLIES nth(pl, j) = 0)
       AND (degans`allzero OR nth(pl, degans`maxnon) /= 0)} from its value expression.

polylist typechecked in 0.76s: 52 TCCs, 0 proved, 8 subsumed, 44 unproved; 13 msgs
Parsing poly_strategy
poly_strategy parsed in 0.00 seconds
poly_strategy is already parsed
Typechecking poly_strategy
poly_strategy typechecked in 0.20s: 2 TCCs, 0 proved, 0 subsumed, 2 unproved
Parsing strategies
strategies parsed in 0.00 seconds
strategies is already parsed
Typechecking strategies
Restored theory from /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/structures/pvsbin/Unit_adt.bin in 0.02s (load part took 0.00s)
Restored theory from /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/structures/pvsbin/Unit_adt_reduce.bin in 0.00s (load part took 0.00s)
Restored theory from /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/structures/pvsbin/Unit.bin in 0.03s (load part took 0.00s)
Restored theory from /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/reals/pvsbin/root.bin in 0.03s (load part took 0.00s)
Restored theory from /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/reals/pvsbin/abs_lems.bin in 0.03s (load part took 0.00s)
Restored theory from /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/reals/pvsbin/reals_mod.bin in 0.03s (load part took 0.00s)
Restored theory from /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/reals/pvsbin/power_props.bin in 0.03s (load part took 0.00s)
Restored theory from /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/ints/pvsbin/floor_more.bin in 0.02s (load part took 0.00s)
Restored theory from /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/ints/pvsbin/div_nat.bin in 0.03s (load part took 0.00s)
Restored theory from /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/interval_arith/pvsbin/interval.bin in 0.24s (load part took 0.00s)
strategies typechecked in 0.70s: No TCCs generated
top typechecked in 18.425s: No TCCs generated
Context file /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/Sturm/.pvscontext written

; file: //Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/interval_arith//pvs-strategies
; in: DEFUN IA-INTERVAL-EXPR
;     (PVS::IA-INTERVAL-EXPR-REC PVS:EXPR PVS::N PVS::VARS PVS::SUBS)
; 
; caught STYLE-WARNING:
;   undefined function: PVS::IA-INTERVAL-EXPR-REC
; 
; compilation unit finished
;   Undefined function:
;     IA-INTERVAL-EXPR-REC
;   caught 1 STYLE-WARNING condition

Defining INTERVAL-EQ__. 
Defining INTERVAL-EQ__$. 
Defining VARS-SHARP__. 
Defining VARS-SHARP__$. 
Defining VARS-IN-BOX__. 
Defining VARS-IN-BOX__$. 
; file: //Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/interval_arith//pvs-strategies
; in: DEFHELPER GBANDB_INTERVAL__
;     (CONS PVS::!IA PVS::INSTVS)
; 
; caught WARNING:
;   undefined variable: PVS::!IA

;     (OR PVS:LABEL PVS::!LABEL)
; ==>
;   (IF #:G22
;       #:G22
;       PVS::!LABEL)
; 
; caught WARNING:
;   undefined variable: PVS::!LABEL
; 
; compilation unit finished
;   Undefined variables:
;     !IA !LABEL
;   caught 2 WARNING conditions

Defining GBANDB_INTERVAL__. 
Defining GBANDB_INTERVAL__$. 
; file: //Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/interval_arith//pvs-strategies
; in: DEFHELPER GBANDB_NUMERICAL__
;     (OR PVS:LABEL PVS::!LABEL)
; ==>
;   (IF #:G0
;       #:G0
;       PVS::!LABEL)
; 
; caught WARNING:
;   undefined variable: PVS::!LABEL
; 
; compilation unit finished
;   Undefined variable:
;     !LABEL
;   caught 1 WARNING condition

Defining GBANDB_NUMERICAL__. 
Defining GBANDB_NUMERICAL__$. 
; file: //Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/interval_arith//pvs-strategies
; in: DEFSTEP DECIMALIZE
;     (PVS::EXTRA-GET-FORMULA PVS::!DEC)
; 
; caught WARNING:
;   undefined variable: PVS::!DEC
; 
; compilation unit finished
;   Undefined variable:
;     !DEC
;   caught 1 WARNING condition

Defining DECIMALIZE. 
Defining DECIMALIZE$. 
Defining DECIMALIZE-EXPR. 
Defining DECIMALIZE-EXPR$. 
; file: //Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/interval_arith//pvs-strategies
; in: DEFSTEP SIMPLE-NUMERICAL
;     (FORMAT NIL "simple_bandb.simple_interval(~a,~a,~a)" PVS::MAXDEPTH PVS::SIA
;             PVS::IA-BOX)
; 
; caught WARNING:
;   undefined variable: PVS::SIA
; 
; compilation unit finished
;   Undefined variable:
;     SIA
;   caught 1 WARNING condition

Defining SIMPLE-NUMERICAL. 
Defining SIMPLE-NUMERICAL$. 
Defining INTERVAL. 
Defining INTERVAL$. 
Defining NUMERICAL. 
Defining NUMERICAL$. 
Defining SQRT-REW. 
Defining SQRT-REW$. 
Defining SQRT-REW-OFF. 
Defining SQRT-REW-OFF$. 
; file: //Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/Sturm//pvs-strategies
; in: DEFUN STURM-POLY-EXPRS-REC
;     (PVS::STURM-POLY-EXPR-REC PVS::E PVS::VARS)
; 
; caught STYLE-WARNING:
;   undefined function: PVS::STURM-POLY-EXPR-REC
; 
; compilation unit finished
;   Undefined function:
;     STURM-POLY-EXPR-REC
;   caught 1 STYLE-WARNING condition

Defining STURM. 
Defining STURM$. 
; file: //Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/Sturm//pvs-strategies
; in: DEFHELPER STURM__
;     (PVS::EXTRA-GET-FNUM PVS::!STLM)
; 
; caught WARNING:
;   undefined variable: PVS::!STLM

;     (COND (PVS::SAT PVS::!STLM) ((> (* PVS::FNUM PVS::QUANT) 0) PVS::!STU))
; 
; caught WARNING:
;   undefined variable: PVS::!STLM

;     (IF PVS::SAT
;         PVS::!STU
;         PVS::!STLM)
; 
; caught WARNING:
;   undefined variable: PVS::!STLM

;     (COND (PVS::SAT PVS::!STLM) ((> (* PVS::FNUM PVS::QUANT) 0) PVS::!STU))
; ==>
;   (IF (> (* PVS::FNUM PVS::QUANT) 0)
;       PVS::!STU
;       NIL)
; 
; caught WARNING:
;   undefined variable: PVS::!STU

;     (IF PVS::SAT
;         PVS::!STU
;         PVS::!STLM)
; 
; caught WARNING:
;   undefined variable: PVS::!STU

;     (FORMAT NIL "deg(~a) = deg(~a)" PVS::STU_ PVS::LST_)
; 
; caught WARNING:
;   undefined variable: PVS::LST_
; 
; caught WARNING:
;   undefined variable: PVS::STU_
; 
; compilation unit finished
;   Undefined variables:
;     !STLM !STU LST_ STU_
;   caught 7 WARNING conditions

Defining STURM__. 
Defining STURM__$. 
Defining MONO-POLY. 
Defining MONO-POLY$. 
; file: //Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/Sturm//pvs-strategies
; in: DEFHELPER MONO-POLY__
;     (IF PVS::FALL
;         PVS::!MONO
;         PVS::!L)
; 
; caught WARNING:
;   undefined variable: PVS::!L

;     (IF PVS::FALL
;         PVS::!L
;         PVS::!MONO)
; 
; caught WARNING:
;   undefined variable: PVS::!L

;     (IF PVS::FALL
;         PVS::!MONO
;         PVS::!L)
; 
; caught WARNING:
;   undefined variable: PVS::!MONO

;     (IF PVS::FALL
;         PVS::!L
;         PVS::!MONO)
; 
; caught WARNING:
;   undefined variable: PVS::!MONO

;     (FORMAT NIL "list2array[rat](0)(~a)" PVS::PL_)
; 
; caught WARNING:
;   undefined variable: PVS::PL_

;     (FORMAT NIL "length[rat](~a)-1" PVS::PL_)
; 
; caught WARNING:
;   undefined variable: PVS::PL_
; 
; compilation unit finished
;   Undefined variables:
;     !L !MONO PL_
;   caught 6 WARNING conditions

Defining MONO-POLY__. 
Defining MONO-POLY__$. WARNING: redefining PVS::STURM-POLY-EXPRS-REC in DEFUN
WARNING: redefining PVS::STURM-POLY-EXPRS in DEFUN
WARNING: redefining PVS::IS-STURM-VAR in DEFUN
WARNING: redefining PVS::STURM-VAR-DEG in DEFUN
WARNING: redefining PVS::STURM-MONOM-EXPR in DEFUN
WARNING: redefining PVS::STURM-POLY-EXPR-REC in DEFUN
WARNING: redefining PVS::LAST-TO-FIRST in DEFUN
WARNING: redefining PVS::STURM-RELATION in DEFUN
WARNING: redefining PVS::STURM-REL-STR in DEFUN
WARNING: redefining PVS::STURM-GET-EXPR-FMS in DEFUN
WARNING: redefining PVS::STURM-EXPR-WRT0 in DEFUN
WARNING: redefining PVS::STURM-GET-XVAL in DEFUN
WARNING: redefining PVS::|(defstep) STURM| in DEFUN

STURM exists as a defined rule from NIL.
Redefining STURM. 
STURM$ exists as a strategy from NIL.
Redefining STURM$. 
; file: /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/Sturm/pvs-strategies
; in: DEFHELPER STURM__
;     (PVS::EXTRA-GET-FNUM PVS::!STLM)
; 
; caught WARNING:
;   undefined variable: PVS::!STLM

;     (COND (PVS::SAT PVS::!STLM) ((> (* PVS::FNUM PVS::QUANT) 0) PVS::!STU))
; 
; caught WARNING:
;   undefined variable: PVS::!STLM

;     (IF PVS::SAT
;         PVS::!STU
;         PVS::!STLM)
; 
; caught WARNING:
;   undefined variable: PVS::!STLM

;     (COND (PVS::SAT PVS::!STLM) ((> (* PVS::FNUM PVS::QUANT) 0) PVS::!STU))
; ==>
;   (IF (> (* PVS::FNUM PVS::QUANT) 0)
;       PVS::!STU
;       NIL)
; 
; caught WARNING:
;   undefined variable: PVS::!STU

;     (IF PVS::SAT
;         PVS::!STU
;         PVS::!STLM)
; 
; caught WARNING:
;   undefined variable: PVS::!STU

;     (FORMAT NIL "deg(~a) = deg(~a)" PVS::STU_ PVS::LST_)
; 
; caught WARNING:
;   undefined variable: PVS::LST_
; 
; caught WARNING:
;   undefined variable: PVS::STU_
; 
; compilation unit finished
;   Undefined variables:
;     !STLM !STU LST_ STU_
;   caught 7 WARNING conditions
WARNING: redefining PVS::|(DEFHELPER) STURM__| in DEFUN

STURM__ exists as a defined rule from NIL.
Redefining STURM__. 
STURM__$ exists as a strategy from NIL.
Redefining STURM__$. WARNING: redefining PVS::MONO-POLY-GET-XVAL in DEFUN
WARNING: redefining PVS::|(defstep) MONO-POLY| in DEFUN

MONO-POLY exists as a defined rule from NIL.
Redefining MONO-POLY. 
MONO-POLY$ exists as a strategy from NIL.
Redefining MONO-POLY$. 
; file: /Users/mmoscato/nasa/pvslib/pvslib-gitlab-pvs-8.0-fixes/Sturm/pvs-strategies
; in: DEFHELPER MONO-POLY__
;     (IF PVS::FALL
;         PVS::!MONO
;         PVS::!L)
; 
; caught WARNING:
;   undefined variable: PVS::!L

;     (IF PVS::FALL
;         PVS::!L
;         PVS::!MONO)
; 
; caught WARNING:
;   undefined variable: PVS::!L

;     (IF PVS::FALL
;         PVS::!MONO
;         PVS::!L)
; 
; caught WARNING:
;   undefined variable: PVS::!MONO

;     (IF PVS::FALL
;         PVS::!L
;         PVS::!MONO)
; 
; caught WARNING:
;   undefined variable: PVS::!MONO

;     (FORMAT NIL "list2array[rat](0)(~a)" PVS::PL_)
; 
; caught WARNING:
;   undefined variable: PVS::PL_

;     (FORMAT NIL "length[rat](~a)-1" PVS::PL_)
; 
; caught WARNING:
;   undefined variable: PVS::PL_
; 
; compilation unit finished
;   Undefined variables:
;     !L !MONO PL_
;   caught 6 WARNING conditions
WARNING: redefining PVS::|(DEFHELPER) MONO-POLY__| in DEFUN

MONO-POLY__ exists as a defined rule from NIL.
Redefining MONO-POLY__. 
MONO-POLY__$ exists as a strategy from NIL.
Redefining MONO-POLY__$. 
Proving theory top
Proving theory compute_sturm
Rerunning proof of compute_sturm.finite_bij_real_remove_one
compute_sturm.finite_bij_real_remove_one proved in 0.55 real, 0.55 cpu seconds
Rerunning proof of compute_sturm.finite_bij_real_remove_two
compute_sturm.finite_bij_real_remove_two proved in 1.115 real, 1.115 cpu seconds
Rerunning proof of compute_sturm.computed_sturm_spec_TCC1
compute_sturm.computed_sturm_spec_TCC1 proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of compute_sturm.computed_sturm_spec_TCC2
compute_sturm.computed_sturm_spec_TCC2 proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of compute_sturm.computed_sturm_spec_TCC3
compute_sturm.computed_sturm_spec_TCC3 proved in 0.18 real, 0.18 cpu seconds
Rerunning proof of compute_sturm.computed_sturm_spec_TCC4
compute_sturm.computed_sturm_spec_TCC4 proved in 0.21 real, 0.21 cpu seconds
Rerunning proof of compute_sturm.computed_sturm_spec_TCC5
compute_sturm.computed_sturm_spec_TCC5 proved in 0.19 real, 0.19 cpu seconds
Rerunning proof of compute_sturm.computed_sturm_spec
***Warning: computed_sturm_spec.1.1.1.2.2.1 has fewer subgoals (1) than subproofs (2)
Proving compute_sturm.computed_sturm_spec.
Proving compute_sturm.computed_sturm_spec..
Proving compute_sturm.computed_sturm_spec...
compute_sturm.computed_sturm_spec proved in 11.514 real, 11.514 cpu seconds
Rerunning proof of compute_sturm.Eq_computed_remainder?_TCC1
compute_sturm.Eq_computed_remainder?_TCC1 proved in 0.02 real, 0.02 cpu seconds
Rerunning proof of compute_sturm.Eq_computed_remainder?_TCC2
compute_sturm.Eq_computed_remainder?_TCC2 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of compute_sturm.Eq_computed_remainder?_TCC3
compute_sturm.Eq_computed_remainder?_TCC3 proved in 0.02 real, 0.02 cpu seconds
Rerunning proof of compute_sturm.roots_closed_int_TCC1
compute_sturm.roots_closed_int_TCC1 proved in 0.18 real, 0.18 cpu seconds
Rerunning proof of compute_sturm.roots_closed_int_TCC2
compute_sturm.roots_closed_int_TCC2 proved in 0.24 real, 0.24 cpu seconds
Rerunning proof of compute_sturm.roots_closed_int_TCC3
compute_sturm.roots_closed_int_TCC3 proved in 0.19 real, 0.19 cpu seconds
Rerunning proof of compute_sturm.roots_closed_int_TCC4
compute_sturm.roots_closed_int_TCC4 proved in 0.24 real, 0.24 cpu seconds
Rerunning proof of compute_sturm.roots_closed_int_TCC5
compute_sturm.roots_closed_int_TCC5 proved in 0.51 real, 0.51 cpu seconds
Rerunning proof of compute_sturm.roots_closed_int_TCC6
compute_sturm.roots_closed_int_TCC6 proved in 0.82 real, 0.82 cpu seconds
Rerunning proof of compute_sturm.roots_closed_int_def_truetrue
Proving compute_sturm.roots_closed_int_def_truetrue.
Proving compute_sturm.roots_closed_int_def_truetrue..
Proving compute_sturm.roots_closed_int_def_truetrue...
Proving compute_sturm.roots_closed_int_def_truetrue....
Proving compute_sturm.roots_closed_int_def_truetrue.....
Proving compute_sturm.roots_closed_int_def_truetrue......
Proving compute_sturm.roots_closed_int_def_truetrue.......
Proving compute_sturm.roots_closed_int_def_truetrue........
***Warning: roots_closed_int_def_truetrue.2.1.2.2 has fewer subgoals (1) than subproofs (3)
Proving compute_sturm.roots_closed_int_def_truetrue.........
compute_sturm.roots_closed_int_def_truetrue proved in 31.783 real, 31.783 cpu seconds
Rerunning proof of compute_sturm.roots_closed_int_def_falsetrue
Proving compute_sturm.roots_closed_int_def_falsetrue.
Proving compute_sturm.roots_closed_int_def_falsetrue..
Proving compute_sturm.roots_closed_int_def_falsetrue...
Proving compute_sturm.roots_closed_int_def_falsetrue....
Proving compute_sturm.roots_closed_int_def_falsetrue.....
***Warning: roots_closed_int_def_falsetrue.2.1.2.2 has fewer subgoals (1) than subproofs (2)
Proving compute_sturm.roots_closed_int_def_falsetrue......
***Warning: roots_closed_int_def_falsetrue.2.1.2.2.1.2 has fewer subgoals (2) than subproofs (3)
compute_sturm.roots_closed_int_def_falsetrue proved in 19.678 real, 19.678 cpu seconds
Rerunning proof of compute_sturm.roots_closed_int_def_truefalse
Proving compute_sturm.roots_closed_int_def_truefalse.
Proving compute_sturm.roots_closed_int_def_truefalse..
Proving compute_sturm.roots_closed_int_def_truefalse...
Proving compute_sturm.roots_closed_int_def_truefalse....
Proving compute_sturm.roots_closed_int_def_truefalse.....
Proving compute_sturm.roots_closed_int_def_truefalse......
***Warning: roots_closed_int_def_truefalse.2.1.2.2 has fewer subgoals (1) than subproofs (2)
***Warning: roots_closed_int_def_truefalse.2.1.2.2.1.2 has fewer subgoals (2) than subproofs (3)
Proving compute_sturm.roots_closed_int_def_truefalse.......
compute_sturm.roots_closed_int_def_truefalse proved in 22.533 real, 22.533 cpu seconds
Rerunning proof of compute_sturm.roots_closed_int_def_falsefalse
Proving compute_sturm.roots_closed_int_def_falsefalse.
Proving compute_sturm.roots_closed_int_def_falsefalse..
Proving compute_sturm.roots_closed_int_def_falsefalse...
Proving compute_sturm.roots_closed_int_def_falsefalse....
compute_sturm.roots_closed_int_def_falsefalse proved in 14.165 real, 14.165 cpu seconds
Rerunning proof of compute_sturm.roots_closed_int_def
compute_sturm.roots_closed_int_def proved in 0.36 real, 0.36 cpu seconds
Rerunning proof of compute_sturm.number_roots_interval_TCC1
compute_sturm.number_roots_interval_TCC1 proved in 0.16 real, 0.16 cpu seconds
Rerunning proof of compute_sturm.number_roots_interval_TCC2
compute_sturm.number_roots_interval_TCC2 proved in 0.38 real, 0.38 cpu seconds
Rerunning proof of compute_sturm.number_roots_interval_def
compute_sturm.number_roots_interval_def proved in 2.548 real, 2.548 cpu seconds
Rerunning proof of compute_sturm.always_nonnegative_int_TCC1
compute_sturm.always_nonnegative_int_TCC1 proved in 0.11 real, 0.11 cpu seconds
Rerunning proof of compute_sturm.always_nonnegative_int_TCC2
compute_sturm.always_nonnegative_int_TCC2 proved in 0.20 real, 0.20 cpu seconds
Rerunning proof of compute_sturm.always_nonnegative_int_TCC3
compute_sturm.always_nonnegative_int_TCC3 proved in 0.15 real, 0.15 cpu seconds
Rerunning proof of compute_sturm.always_nonnegative_int_TCC4
compute_sturm.always_nonnegative_int_TCC4 proved in 0.16 real, 0.16 cpu seconds
Rerunning proof of compute_sturm.always_nonnegative_int_TCC5
compute_sturm.always_nonnegative_int_TCC5 proved in 0.20 real, 0.20 cpu seconds
Rerunning proof of compute_sturm.always_nonnegative_int_TCC6
compute_sturm.always_nonnegative_int_TCC6 proved in 0.18 real, 0.18 cpu seconds
Rerunning proof of compute_sturm.always_nonnegative_int_TCC7
compute_sturm.always_nonnegative_int_TCC7 proved in 0.18 real, 0.18 cpu seconds
Rerunning proof of compute_sturm.always_nonnegative_int_TCC8
compute_sturm.always_nonnegative_int_TCC8 proved in 0.17 real, 0.17 cpu seconds
Rerunning proof of compute_sturm.always_nonnegative_TCC1
compute_sturm.always_nonnegative_TCC1 proved in 0.05 real, 0.05 cpu seconds
Rerunning proof of compute_sturm.always_nonnegative_TCC2
compute_sturm.always_nonnegative_TCC2 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of compute_sturm.always_nonnegative_TCC3
compute_sturm.always_nonnegative_TCC3 proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of compute_sturm.always_nonnegative_TCC4
compute_sturm.always_nonnegative_TCC4 proved in 0.13 real, 0.13 cpu seconds
Rerunning proof of compute_sturm.always_nonnegative_TCC5
compute_sturm.always_nonnegative_TCC5 proved in 0.29 real, 0.29 cpu seconds
Rerunning proof of compute_sturm.always_nonnegative_TCC6
compute_sturm.always_nonnegative_TCC6 proved in 0.30 real, 0.30 cpu seconds
Rerunning proof of compute_sturm.always_nonnegative_TCC7
compute_sturm.always_nonnegative_TCC7 proved in 0.30 real, 0.30 cpu seconds
Rerunning proof of compute_sturm.always_nonnegative_def
Proving compute_sturm.always_nonnegative_def.
compute_sturm.always_nonnegative_def proved in 4.949 real, 4.949 cpu seconds
Rerunning proof of compute_sturm.rel_disjunction
compute_sturm.rel_disjunction proved in 0.05 real, 0.05 cpu seconds
Rerunning proof of compute_sturm.real_order_scal_pos
compute_sturm.real_order_scal_pos proved in 1.021 real, 1.021 cpu seconds
Rerunning proof of compute_sturm.real_order_scal_pos_0
compute_sturm.real_order_scal_pos_0 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of compute_sturm.compute_poly_sat_TCC1
compute_sturm.compute_poly_sat_TCC1 proved in 0.03 real, 0.03 cpu seconds
Rerunning proof of compute_sturm.compute_poly_sat_TCC2
compute_sturm.compute_poly_sat_TCC2 proved in 0.03 real, 0.03 cpu seconds
Rerunning proof of compute_sturm.compute_poly_sat_TCC3
compute_sturm.compute_poly_sat_TCC3 proved in 0.15 real, 0.15 cpu seconds
Rerunning proof of compute_sturm.compute_poly_sat_def
Proving compute_sturm.compute_poly_sat_def.
compute_sturm.compute_poly_sat_def proved in 6.295 real, 6.295 cpu seconds
Rerunning proof of compute_sturm.compute_poly_sat_rational_TCC1
compute_sturm.compute_poly_sat_rational_TCC1 proved in 0.14 real, 0.14 cpu seconds
Rerunning proof of compute_sturm.compute_poly_sat_rational_def
compute_sturm.compute_poly_sat_rational_def proved in 1.03 real, 1.03 cpu seconds
Rerunning proof of compute_sturm.compute_poly_mono_basic_TCC1
compute_sturm.compute_poly_mono_basic_TCC1 proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of compute_sturm.compute_poly_mono_basic_TCC2
compute_sturm.compute_poly_mono_basic_TCC2 proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of compute_sturm.compute_poly_mono_basic_TCC3
compute_sturm.compute_poly_mono_basic_TCC3 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of compute_sturm.compute_poly_mono_basic_TCC4
compute_sturm.compute_poly_mono_basic_TCC4 proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of compute_sturm.compute_poly_mono_basic_TCC5
compute_sturm.compute_poly_mono_basic_TCC5 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of compute_sturm.compute_poly_mono_basic_TCC6
compute_sturm.compute_poly_mono_basic_TCC6 proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of compute_sturm.compute_poly_mono_basic_def
Proving compute_sturm.compute_poly_mono_basic_def.
compute_sturm.compute_poly_mono_basic_def proved in 5.467 real, 5.467 cpu seconds
Rerunning proof of compute_sturm.poly_non_constant_real_int
compute_sturm.poly_non_constant_real_int proved in 0.11 real, 0.11 cpu seconds
Rerunning proof of compute_sturm.mono_def
Proving compute_sturm.mono_def.
Proving compute_sturm.mono_def..
compute_sturm.mono_def proved in 6.943 real, 6.943 cpu seconds
Proving theory sturm
Rerunning proof of sturm.constructed_sturm_sequence?_TCC1
sturm.constructed_sturm_sequence?_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of sturm.constructed_sturm_sequence?_TCC2
sturm.constructed_sturm_sequence?_TCC2 proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of sturm.constructed_sturm_sequence?_TCC3
sturm.constructed_sturm_sequence?_TCC3 proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of sturm.constructed_sturm_seq_repeated_root
sturm.constructed_sturm_seq_repeated_root proved in 1.388 real, 1.388 cpu seconds
Rerunning proof of sturm.constructed_sturm_seq_repeated_root_mth
Proving sturm.constructed_sturm_seq_repeated_root_mth.
sturm.constructed_sturm_seq_repeated_root_mth proved in 4.21 real, 4.21 cpu seconds
Rerunning proof of sturm.constructed_sturm_seq_repeated_root_struct_TCC1
sturm.constructed_sturm_seq_repeated_root_struct_TCC1 proved in 0.39 real, 0.39 cpu seconds
Rerunning proof of sturm.constructed_sturm_seq_repeated_root_struct_TCC2
sturm.constructed_sturm_seq_repeated_root_struct_TCC2 proved in 0.47 real, 0.47 cpu seconds
Rerunning proof of sturm.constructed_sturm_seq_repeated_root_struct_TCC3
sturm.constructed_sturm_seq_repeated_root_struct_TCC3 proved in 0.60 real, 0.60 cpu seconds
Rerunning proof of sturm.constructed_sturm_seq_repeated_root_struct_TCC4
sturm.constructed_sturm_seq_repeated_root_struct_TCC4 proved in 0.60 real, 0.60 cpu seconds
Rerunning proof of sturm.constructed_sturm_seq_repeated_root_struct
Proving sturm.constructed_sturm_seq_repeated_root_struct.
sturm.constructed_sturm_seq_repeated_root_struct proved in 5.775 real, 5.775 cpu seconds
Rerunning proof of sturm.constructed_sturm_seq_first_signs_eq
Proving sturm.constructed_sturm_seq_first_signs_eq.
Proving sturm.constructed_sturm_seq_first_signs_eq..
sturm.constructed_sturm_seq_first_signs_eq proved in 6.152 real, 6.152 cpu seconds
Rerunning proof of sturm.sturm_lem_no_roots
sturm.sturm_lem_no_roots proved in 1.055 real, 1.055 cpu seconds
Rerunning proof of sturm.constructed_sturm_lem_one_simple_root_TCC1
sturm.constructed_sturm_lem_one_simple_root_TCC1 proved in 0.18 real, 0.18 cpu seconds
Rerunning proof of sturm.constructed_sturm_lem_one_simple_root
Proving sturm.constructed_sturm_lem_one_simple_root.
Proving sturm.constructed_sturm_lem_one_simple_root..
sturm.constructed_sturm_lem_one_simple_root proved in 6.719 real, 6.719 cpu seconds
Rerunning proof of sturm.constructed_sturm_lem_one_multi_root_TCC1
sturm.constructed_sturm_lem_one_multi_root_TCC1 proved in 0.22 real, 0.22 cpu seconds
Rerunning proof of sturm.constructed_sturm_lem_one_multi_root
Proving sturm.constructed_sturm_lem_one_multi_root.
sturm.constructed_sturm_lem_one_multi_root proved in 5.848 real, 5.848 cpu seconds
Rerunning proof of sturm.constructed_sturm_lem_edge_root_TCC1
sturm.constructed_sturm_lem_edge_root_TCC1 proved in 0.19 real, 0.19 cpu seconds
Rerunning proof of sturm.constructed_sturm_lem_edge_root
Proving sturm.constructed_sturm_lem_edge_root.
sturm.constructed_sturm_lem_edge_root proved in 4.382 real, 4.382 cpu seconds
Rerunning proof of sturm.constructed_sturm_roots_between_enum_TCC1
sturm.constructed_sturm_roots_between_enum_TCC1 proved in 0.05 real, 0.05 cpu seconds
Rerunning proof of sturm.constructed_sturm_roots_between_enum_TCC2
sturm.constructed_sturm_roots_between_enum_TCC2 proved in 0.04 real, 0.04 cpu seconds
Rerunning proof of sturm.constructed_sturm_roots_between_enum
sturm.constructed_sturm_roots_between_enum proved in 2.951 real, 2.951 cpu seconds
Rerunning proof of sturm.constructed_sturm_lem_no_roots_full_TCC1
sturm.constructed_sturm_lem_no_roots_full_TCC1 proved in 0.16 real, 0.16 cpu seconds
Rerunning proof of sturm.constructed_sturm_lem_no_roots_full
sturm.constructed_sturm_lem_no_roots_full proved in 0.64 real, 0.64 cpu seconds
Rerunning proof of sturm.sturm_TCC1
sturm.sturm_TCC1 proved in 0.15 real, 0.15 cpu seconds
Rerunning proof of sturm.sturm

 LET/WHERE variable nsc at line 1, col 26 is given type
  [real -> NSC] from its value expression.


 LET/WHERE variable Nroots at line 5, col 73 is given type
  int from its value expression.

***Warning: sturm.1.2.1.1.1.2.1.1.1 has fewer subgoals (1) than subproofs (2)
Proving sturm.sturm.
***Warning: sturm.1.2.1.1.1.2.2.1.2.1.1.2.1 has fewer subgoals (2) than subproofs (3)
Proving sturm.sturm..
***Warning: sturm.1.2.1.1.1.2.2.2.2.1.1.1.2.1 has fewer subgoals (2) than subproofs (3)
sturm.sturm proved in 8.065 real, 8.065 cpu seconds
Rerunning proof of sturm.sturm_unbounded_left_TCC1
sturm.sturm_unbounded_left_TCC1 proved in 0.12 real, 0.12 cpu seconds
Rerunning proof of sturm.sturm_unbounded_left
Proving sturm.sturm_unbounded_left.
sturm.sturm_unbounded_left proved in 4.759 real, 4.759 cpu seconds
Rerunning proof of sturm.sturm_unbounded_right
Proving sturm.sturm_unbounded_right.
sturm.sturm_unbounded_right proved in 3.513 real, 3.513 cpu seconds
Rerunning proof of sturm.sturm_unbounded_TCC1
sturm.sturm_unbounded_TCC1 proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of sturm.sturm_unbounded
sturm.sturm_unbounded proved in 2.412 real, 2.412 cpu seconds
Proving theory polynomial_division
Rerunning proof of polynomial_division.poly_divide_TCC1
polynomial_division.poly_divide_TCC1 proved in 0.12 real, 0.12 cpu seconds
Rerunning proof of polynomial_division.poly_divide_TCC2
polynomial_division.poly_divide_TCC2 proved in 0.01 real, 0.01 cpu seconds
Rerunning proof of polynomial_division.poly_divide_TCC3
polynomial_division.poly_divide_TCC3 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of polynomial_division.poly_divide_TCC4
polynomial_division.poly_divide_TCC4 proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of polynomial_division.poly_divide_TCC5
polynomial_division.poly_divide_TCC5 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of polynomial_division.poly_divide_TCC6
polynomial_division.poly_divide_TCC6 proved in 0.18 real, 0.18 cpu seconds
Rerunning proof of polynomial_division.poly_divide_TCC7
polynomial_division.poly_divide_TCC7 proved in 0.18 real, 0.18 cpu seconds
Rerunning proof of polynomial_division.poly_divide_TCC8
polynomial_division.poly_divide_TCC8 proved in 0.05 real, 0.05 cpu seconds
Rerunning proof of polynomial_division.poly_divide_TCC9
polynomial_division.poly_divide_TCC9 proved in 0.17 real, 0.17 cpu seconds
Rerunning proof of polynomial_division.poly_divide_def

 LET/WHERE variable pd at line 3, col 90 is given type
  DivType from its value expression.


 LET/WHERE variable pd at line 3, col 85 is given type
  DivType from its value expression.

Proving polynomial_division.poly_divide_def.
Proving polynomial_division.poly_divide_def..
Proving polynomial_division.poly_divide_def...
Proving polynomial_division.poly_divide_def....
Proving polynomial_division.poly_divide_def.....
polynomial_division.poly_divide_def proved in 17.444 real, 17.444 cpu seconds
Rerunning proof of polynomial_division.poly_divide_struct
polynomial_division.poly_divide_struct proved in 1.052 real, 1.052 cpu seconds
Rerunning proof of polynomial_division.poly_divide_lengths
polynomial_division.poly_divide_lengths proved in 0.89 real, 0.89 cpu seconds
Proving theory number_sign_changes
Rerunning proof of number_sign_changes.number_sign_changes_TCC1
number_sign_changes.number_sign_changes_TCC1 proved in 0.04 real, 0.04 cpu seconds
Rerunning proof of number_sign_changes.number_sign_changes_TCC2
number_sign_changes.number_sign_changes_TCC2 proved in 0.01 real, 0.01 cpu seconds
Rerunning proof of number_sign_changes.sign_changes_TCC1
number_sign_changes.sign_changes_TCC1 proved in 0.01 real, 0.01 cpu seconds
Rerunning proof of number_sign_changes.sign_changes_TCC2
number_sign_changes.sign_changes_TCC2 proved in 0.03 real, 0.03 cpu seconds
Rerunning proof of number_sign_changes.sign_changes_TCC3
number_sign_changes.sign_changes_TCC3 proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of number_sign_changes.sign_changes_TCC4
number_sign_changes.sign_changes_TCC4 proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of number_sign_changes.sign_changes_TCC5
number_sign_changes.sign_changes_TCC5 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of number_sign_changes.sign_changes_TCC6
number_sign_changes.sign_changes_TCC6 proved in 0.11 real, 0.11 cpu seconds
Rerunning proof of number_sign_changes.sign_changes_TCC7
number_sign_changes.sign_changes_TCC7 proved in 0.08 real, 0.08 cpu seconds
Rerunning proof of number_sign_changes.sign_changes_TCC8
number_sign_changes.sign_changes_TCC8 proved in 0.03 real, 0.03 cpu seconds
Rerunning proof of number_sign_changes.sign_changes_TCC9
number_sign_changes.sign_changes_TCC9 proved in 0.12 real, 0.12 cpu seconds
Rerunning proof of number_sign_changes.sign_changes_TCC10
number_sign_changes.sign_changes_TCC10 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of number_sign_changes.sign_changes_TCC11
number_sign_changes.sign_changes_TCC11 proved in 0.03 real, 0.03 cpu seconds
Rerunning proof of number_sign_changes.sign_changes_TCC12
number_sign_changes.sign_changes_TCC12 proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of number_sign_changes.num_sign_changes_def_TCC1
number_sign_changes.num_sign_changes_def_TCC1 proved in 0.01 real, 0.01 cpu seconds
Rerunning proof of number_sign_changes.num_sign_changes_def
number_sign_changes.num_sign_changes_def proved in 0.04 real, 0.04 cpu seconds
Rerunning proof of number_sign_changes.number_sign_changes_lastnz_nonzero
number_sign_changes.number_sign_changes_lastnz_nonzero proved in 0.25 real, 0.25 cpu seconds
Rerunning proof of number_sign_changes.number_sign_changes_lastnz
number_sign_changes.number_sign_changes_lastnz proved in 0.03 real, 0.03 cpu seconds
Rerunning proof of number_sign_changes.number_sign_changes_eq
number_sign_changes.number_sign_changes_eq proved in 0.45 real, 0.45 cpu seconds
Rerunning proof of number_sign_changes.number_sign_changes_easy
number_sign_changes.number_sign_changes_easy proved in 0.11 real, 0.11 cpu seconds
Rerunning proof of number_sign_changes.number_sign_changes_test1
number_sign_changes.number_sign_changes_test1 proved in 0.31 real, 0.31 cpu seconds
Rerunning proof of number_sign_changes.number_sign_changes_test2
number_sign_changes.number_sign_changes_test2 proved in 0.11 real, 0.11 cpu seconds
Rerunning proof of number_sign_changes.number_sign_changes_test3
number_sign_changes.number_sign_changes_test3 proved in 0.12 real, 0.12 cpu seconds
Rerunning proof of number_sign_changes.number_sign_changes_test4
number_sign_changes.number_sign_changes_test4 proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of number_sign_changes.number_sign_changes_test5
number_sign_changes.number_sign_changes_test5 proved in 0.12 real, 0.12 cpu seconds
Rerunning proof of number_sign_changes.number_sign_changes_test6
number_sign_changes.number_sign_changes_test6 proved in 0.12 real, 0.12 cpu seconds
Rerunning proof of number_sign_changes.number_sign_changes_test7
number_sign_changes.number_sign_changes_test7 proved in 0.13 real, 0.13 cpu seconds
Rerunning proof of number_sign_changes.nsc_regular_swap_TCC1
number_sign_changes.nsc_regular_swap_TCC1 proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of number_sign_changes.nsc_regular_swap
Proving number_sign_changes.nsc_regular_swap.
number_sign_changes.nsc_regular_swap proved in 3.294 real, 3.294 cpu seconds
Rerunning proof of number_sign_changes.nsc_edge_diff_TCC1
number_sign_changes.nsc_edge_diff_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of number_sign_changes.nsc_edge_diff_TCC2
number_sign_changes.nsc_edge_diff_TCC2 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of number_sign_changes.nsc_edge_diff
Proving number_sign_changes.nsc_edge_diff.
number_sign_changes.nsc_edge_diff proved in 3.591 real, 3.591 cpu seconds
Rerunning proof of number_sign_changes.nsc_multiroot
number_sign_changes.nsc_multiroot proved in 1.529 real, 1.529 cpu seconds
Rerunning proof of number_sign_changes.nsc_multiroot_full_TCC1
number_sign_changes.nsc_multiroot_full_TCC1 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of number_sign_changes.nsc_multiroot_full
Proving number_sign_changes.nsc_multiroot_full.
number_sign_changes.nsc_multiroot_full proved in 5.542 real, 5.542 cpu seconds
Proving theory gcd_coeff
Rerunning proof of gcd_coeff.gcd_coeff_TCC1
gcd_coeff.gcd_coeff_TCC1 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of gcd_coeff.gcd_coeff_TCC2
gcd_coeff.gcd_coeff_TCC2 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of gcd_coeff.gcd_coeff_TCC3
gcd_coeff.gcd_coeff_TCC3 proved in 0.26 real, 0.26 cpu seconds
Rerunning proof of gcd_coeff.gcd_coeff_TCC4
gcd_coeff.gcd_coeff_TCC4 proved in 0.11 real, 0.11 cpu seconds
Rerunning proof of gcd_coeff.gcd_coeff_TCC5
gcd_coeff.gcd_coeff_TCC5 proved in 0.16 real, 0.16 cpu seconds
Rerunning proof of gcd_coeff.gcd_coeff_TCC6
gcd_coeff.gcd_coeff_TCC6 proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of gcd_coeff.gcd_coeff_TCC7
gcd_coeff.gcd_coeff_TCC7 proved in 0.12 real, 0.12 cpu seconds
Rerunning proof of gcd_coeff.gcd_coeff_TCC8
gcd_coeff.gcd_coeff_TCC8 proved in 0.37 real, 0.37 cpu seconds
Rerunning proof of gcd_coeff.gcd_coeff_TCC9
gcd_coeff.gcd_coeff_TCC9 proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of gcd_coeff.gcd_coeff_TCC10
gcd_coeff.gcd_coeff_TCC10 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of gcd_coeff.gcd_coeff_nonzero
gcd_coeff.gcd_coeff_nonzero proved in 0.13 real, 0.13 cpu seconds
Rerunning proof of gcd_coeff.gcd_coeff_zero
gcd_coeff.gcd_coeff_zero proved in 0.26 real, 0.26 cpu seconds
Rerunning proof of gcd_coeff.descalarize_list_TCC1
gcd_coeff.descalarize_list_TCC1 proved in 0.05 real, 0.05 cpu seconds
Rerunning proof of gcd_coeff.descalarize_list_TCC2
gcd_coeff.descalarize_list_TCC2 proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of gcd_coeff.descalarize_list_TCC3
gcd_coeff.descalarize_list_TCC3 proved in 0.03 real, 0.03 cpu seconds
Rerunning proof of gcd_coeff.descalarize_list_TCC4
gcd_coeff.descalarize_list_TCC4 proved in 0.21 real, 0.21 cpu seconds
Rerunning proof of gcd_coeff.descalarize_list_TCC5
gcd_coeff.descalarize_list_TCC5 proved in 0.14 real, 0.14 cpu seconds
Rerunning proof of gcd_coeff.descalarize_list_TCC6
gcd_coeff.descalarize_list_TCC6 proved in 0.11 real, 0.11 cpu seconds
Rerunning proof of gcd_coeff.descalarize_list_TCC7
gcd_coeff.descalarize_list_TCC7 proved in 0.37 real, 0.37 cpu seconds
Rerunning proof of gcd_coeff.primitize_list_TCC1
gcd_coeff.primitize_list_TCC1 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of gcd_coeff.primitize_list_def_TCC1
gcd_coeff.primitize_list_def_TCC1 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of gcd_coeff.primitize_list_def
gcd_coeff.primitize_list_def proved in 1.04 real, 1.04 cpu seconds
Rerunning proof of gcd_coeff.primitize_zero_list
gcd_coeff.primitize_zero_list proved in 0.25 real, 0.25 cpu seconds
Rerunning proof of gcd_coeff.primitize_list_length
gcd_coeff.primitize_list_length proved in 0.03 real, 0.03 cpu seconds
Rerunning proof of gcd_coeff.nonzero_version_rec_TCC1
gcd_coeff.nonzero_version_rec_TCC1 proved in 0.12 real, 0.12 cpu seconds
Rerunning proof of gcd_coeff.nonzero_version_rec_TCC2
gcd_coeff.nonzero_version_rec_TCC2 proved in 0.02 real, 0.02 cpu seconds
Rerunning proof of gcd_coeff.nonzero_version_rec_TCC3
gcd_coeff.nonzero_version_rec_TCC3 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of gcd_coeff.nonzero_version_rec_TCC4
gcd_coeff.nonzero_version_rec_TCC4 proved in 0.11 real, 0.11 cpu seconds
Rerunning proof of gcd_coeff.nonzero_version_rec_TCC5
gcd_coeff.nonzero_version_rec_TCC5 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of gcd_coeff.nonzero_version_rec_TCC6
gcd_coeff.nonzero_version_rec_TCC6 proved in 1.034 real, 1.034 cpu seconds
Rerunning proof of gcd_coeff.nonzero_version_rec_length_nonzero
gcd_coeff.nonzero_version_rec_length_nonzero proved in 0.74 real, 0.74 cpu seconds
Rerunning proof of gcd_coeff.nonzero_version_rec_def_TCC1
gcd_coeff.nonzero_version_rec_def_TCC1 proved in 0.06 real, 0.06 cpu seconds
Rerunning proof of gcd_coeff.nonzero_version_rec_def_TCC2
gcd_coeff.nonzero_version_rec_def_TCC2 proved in 0.10 real, 0.10 cpu seconds
Rerunning proof of gcd_coeff.nonzero_version_rec_def
gcd_coeff.nonzero_version_rec_def proved in 2.812 real, 2.812 cpu seconds
Rerunning proof of gcd_coeff.nonzero_version_def_TCC1
gcd_coeff.nonzero_version_def_TCC1 proved in 0.11 real, 0.11 cpu seconds
Rerunning proof of gcd_coeff.nonzero_version_def_TCC2
gcd_coeff.nonzero_version_def_TCC2 proved in 0.13 real, 0.13 cpu seconds
Rerunning proof of gcd_coeff.nonzero_version_def
gcd_coeff.nonzero_version_def proved in 2.811 real, 2.811 cpu seconds
Rerunning proof of gcd_coeff.nonzero_version_length_nz_TCC1
gcd_coeff.nonzero_version_length_nz_TCC1 proved in 0.07 real, 0.07 cpu seconds
Rerunning proof of gcd_coeff.nonzero_version_length_nz
gcd_coeff.nonzero_version_length_nz proved in 0.33 real, 0.33 cpu seconds
Proving theory remainder_sequence
Rerunning proof of remainder_sequence.is_neg_remainder_list?_TCC1
remainder_sequence.is_neg_remainder_list?_TCC1 proved in 0.16 real, 0.16 cpu seconds
Rerunning proof of remainder_sequence.is_neg_remainder_list?_TCC2
remainder_sequence.is_neg_remainder_list?_TCC2 proved in 0.14 real, 0.14 cpu seconds
Rerunning proof of remainder_sequence.is_neg_remainder_list?_TCC3
remainder_sequence.is_neg_remainder_list?_TCC3 proved in 0.16 real, 0.16 cpu seconds
Rerunning proof of remainder_sequence.is_neg_remainder_list?_TCC4
remainder_sequence.is_neg_remainder_list?_TCC4 proved in 0.09 real, 0.09 cpu seconds
Rerunning proof of remainder_sequence.is_neg_remainder_list?_TCC5
remainder_sequence.is_neg_remainder_list?_TCC5 proved in 0.15 real, 0.15 cpu seconds
Rerunning proof of remainder_sequence.is_neg_remainder_list?_TCC6
remainder_sequence.is_neg_remainder_list?_TCC6 proved in 0.13 real, 0.13 cpu seconds
Rerunning proof of remainder_sequence.is_neg_remainder_list?_TCC7
remainder_sequence.is_neg_remainder_list?_TCC7 proved in 0.13 real, 0.13 cpu seconds
Rerunning proof of remainder_sequence.is_neg_remainder_list?_TCC8
remainder_sequence.is_neg_remainder_list?_TCC8 proved in 0.17 real, 0.17 cpu seconds
Rerunning proof of remainder_sequence.is_neg_remainder_list?_TCC9
remainder_sequence.is_neg_remainder_list?_TCC9 proved in 0.15 real, 0.15 cpu seconds
Rerunning proof of remainder_sequence.is_neg_remainder_list?_TCC10
remainder_sequence.is_neg_remainder_list?_TCC10 proved in 0.27 real, 0.27 cpu seconds
Rerunning proof of remainder_sequence.is_neg_remainder_list?_TCC11
remainder_sequence.is_neg_remainder_list?_TCC11 proved in 0.18 real, 0.18 cpu seconds
Rerunning proof of remainder_sequence.compute_remainder_seq_TCC1
remainder_sequence.compute_remainder_seq_TCC1 proved in 0.57 real, 0.57 cpu seconds
Rerunning proof of remainder_sequence.compute_remainder_seq_TCC2
remainder_sequence.compute_remainder_seq_TCC2 proved in 0.59 real, 0.59 cpu seconds
Rerunning proof of remainder_sequence.compute_remainder_seq_TCC3
remainder_sequence.compute_remainder_seq_TCC3 proved in 0.23 real, 0.23 cpu seconds
Rerunning proof of remainder_sequence.compute_remainder_seq_TCC4
remainder_sequence.compute_remainder_seq_TCC4 proved in 1.00 real, 1.00 cpu seconds
Rerunning proof of remainder_sequence.compute_remainder_seq_TCC5
remainder_sequence.compute_remainder_seq_TCC5 proved in 0.34 real, 0.34 cpu seconds
Rerunning proof of remainder_sequence.compute_remainder_seq_TCC6
fatal error encountered in SBCL pid 43327 pthread 0x7ff85b106640:
SIGABRT received.

Welcome to LDB, a low-level debugger for the Lisp runtime environment.
ldb> 