(unconstrained_global_extrema
 (min_global_1a 0
  (min_global_1a-1 nil 3736611088
   ("" (skeep)
    (("" (expand "is_glob_minimizer?")
      (("" (skeep)
        (("" (assert)
          (("" (expand "zero_vec2real") (("" (assert) nil nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((is_glob_minimizer? const-decl "bool" unconstrained_global_extrema
     nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (zero_vec2real const-decl "real" unconstrained_global_extrema nil)
    (listn_0 name-judgement "listn[real](0)" vector_arithmetic nil))
   shostak))
 (min_global_1b_TCC1 0
  (min_global_1b_TCC1-1 nil 3736611086 ("" (subtype-tcc) nil nil)
   ((listn_0 name-judgement "listn[real](0)" vector_arithmetic nil)
    (length_singleton formula-decl nil more_list_props "structures/"))
   nil))
 (min_global_1b_TCC2 0
  (min_global_1b_TCC2-1 nil 3736611086 ("" (cond-disjoint-tcc) nil nil)
   ((/= const-decl "boolean" notequal nil)
    (VectorN type-eq-decl nil matrices "matrices/")
    (length def-decl "nat" list_props nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" list_adt nil)
    (list type-decl nil list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (listn_0 name-judgement "listn[real](0)" vector_arithmetic nil))
   nil))
 (min_global_1b_TCC3 0
  (min_global_1b_TCC3-1 nil 3736611086 ("" (subtype-tcc) nil nil) nil
   nil))
 (min_global_1b 0
  (min_global_1b-1 nil 3736611219
   ("" (expand "is_glob_minimizer?") (("" (propax) nil nil)) nil)
   ((is_glob_minimizer? const-decl "bool" unconstrained_global_extrema
     nil))
   shostak))
 (min_global_1c 0
  (min_global_1c-1 nil 3736611234
   ("" (expand "is_glob_minimizer?")
    (("" (assert)
      (("" (flatten)
        (("" (skeep)
          (("" (split) (("1" (assert) nil nil) ("2" (propax) nil nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((is_glob_minimizer? const-decl "bool" unconstrained_global_extrema
     nil))
   shostak))
 (min_global_2 0
  (min_global_2-1 nil 3736611269
   ("" (skeep)
    (("" (expand "is_glob_min?")
      (("" (inst 1 "zero(n)")
        (("" (expand "constant_vec2real") (("" (propax) nil nil)) nil))
        nil))
      nil))
    nil)
   ((is_glob_min? const-decl "bool" unconstrained_global_extrema nil)
    (constant_vec2real const-decl "vec2real_f"
     unconstrained_global_extrema nil)
    (zero const-decl "VectorN(n)" matrices "matrices/")
    (VectorN type-eq-decl nil matrices "matrices/")
    (n formal-const-decl "posnat" unconstrained_global_extrema nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (length def-decl "nat" list_props nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (every adt-def-decl "boolean" list_adt nil)
    (PRED type-eq-decl nil defined_types nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (list type-decl nil list_adt nil)
    (number nonempty-type-decl nil numbers nil))
   shostak))
 (min_max_global_1 0
  (min_max_global_1-1 nil 3736612162
   ("" (skeep)
    (("" (expand "is_glob_minimizer?")
      (("" (expand "is_glob_maximizer?")
        (("" (inst -1 "xmin") (("" (inst -2 "xmin") nil nil)) nil))
        nil))
      nil))
    nil)
   ((is_glob_minimizer? const-decl "bool" unconstrained_global_extrema
     nil)
    (number nonempty-type-decl nil numbers nil)
    (list type-decl nil list_adt nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (PRED type-eq-decl nil defined_types nil)
    (every adt-def-decl "boolean" list_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (length def-decl "nat" list_props nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (n formal-const-decl "posnat" unconstrained_global_extrema nil)
    (VectorN type-eq-decl nil matrices "matrices/")
    (TRUE const-decl "bool" booleans nil)
    (is_glob_maximizer? const-decl "bool" unconstrained_global_extrema
     nil)
    (listn_0 name-judgement "listn[real](0)" vector_arithmetic nil))
   shostak))
 (min_max_global_2 0
  (min_max_global_2-1 nil 3736612232
   ("" (skeep)
    (("" (inst 1 "f(xmin)")
      (("" (apply-extensionality)
        (("" (hide 2)
          (("" (expand "is_glob_minimizer?" -1)
            (("" (expand "is_glob_maximizer?" -2)
              (("" (inst -1 "x!1")
                (("" (inst -2 "x!1")
                  (("" (expand "constant_vec2real")
                    (("" (assert) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (list type-decl nil list_adt nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (PRED type-eq-decl nil defined_types nil)
    (every adt-def-decl "boolean" list_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (length def-decl "nat" list_props nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (n formal-const-decl "posnat" unconstrained_global_extrema nil)
    (VectorN type-eq-decl nil matrices "matrices/")
    (vec2real_f type-eq-decl nil domain_vec2real_def nil)
    (is_glob_maximizer? const-decl "bool" unconstrained_global_extrema
     nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (TRUE const-decl "bool" booleans nil)
    (is_glob_minimizer? const-decl "bool" unconstrained_global_extrema
     nil)
    (constant_vec2real const-decl "vec2real_f"
     unconstrained_global_extrema nil)
    (listn_0 name-judgement "listn[real](0)" vector_arithmetic nil))
   shostak)))