prime_factorization_checker : THEORY
BEGIN
 
  IMPORTING PVSioChecker@pvsio_checker,
            primes

  check?(fin:IStream,fout:OStream) : bool = 
    LET n  = str2pvs[posnat](readln_checker(fin)),       % Read natural number from test file
        io = str2pvs[list[posnat]](readln_checker(fin)), % Read list of prime factors from test file
        pvs = prime_factorization(n) IN  % Compute list of prime factors in PVS
      check_list[posnat](fout,"",pvs,io,pvs2str[posnat]) % Check PVS output against ouput in file       

  main(file:string,records:nat): void =  % File could be prime-factorization-tests.txt and records could 0 (all of them)
    %set[posnat](Frequency,n) &    % Set frequency (in number of records) to print estimated time of completion
    %set[posreal](Precision,r) &   % Set precision to almost_equal
    checker(file,check?,records)

  do : void =
    main("prime-factorization-tests.txt",0)

END prime_factorization_checker
