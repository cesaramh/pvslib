%% Storage of global key/value store

kv_store[T:TYPE+]: THEORY
BEGIN

  IMPORTING kv_index

  undefined : T

  GlobalStorage : Global[[string->T],LAMBDA(s:string):undefined]

  % Put an object t in KeyVal store under a given key
  kv_put(key:string,t:T) : MACRO void =
    LET the_type = typeof(t) IN
    set(GlobalStorage,val(GlobalStorage) WITH [`key := t]) &
    kv_add_index(key,the_type)

  % Retrieve object from KeyVal store at a given key.
  % Throws PVSioKeyValError exception if key is not found in the KeyVal index or if its type is not a
  % subtype of T
  kv_get(key:string) : MACRO T =
    LET key_type = kv_typeof(key),
        the_type = typeof(undefined) IN
      IF subtypeof?(key_type,the_type) THEN
        LET fun = val(GlobalStorage) IN
        fun(key)
      ELSE
        throw(PVSioKeyValError,
	      format("Type of ~s is ~a, which is not a subtype of ~a",
	            {| key, key_type, the_type |}))
      ENDIF

END kv_store
