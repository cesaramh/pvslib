extended_float_neg
[ radix     : above(1),
  precision : above(1),
  dExp      : { d: posnat | d > 2*(precision-1) - 1 }
] : THEORY BEGIN

  
  IMPORTING extended_float_operations_support[radix,precision,dExp]

  neg_non_finite(x: efloat | NOT is_finite?(x))
  : efloat
  = IF nan?(x) THEN nan_from1(x)
    ELSE LET x: (infinite?) = x
         IN IF positive?(x) THEN neginf ELSE posinf ENDIF ENDIF

  neg_zero(x: (is_finite?) | zero?(x)): efloat
  = IF positive?(x) THEN negzero ELSE poszero ENDIF

  IMPORTING ieee754_operation_scheme__unary[
  	      efloat,
	      is_numeric?,
	      zero?,
	      is_finite?,
	      prj_ef,
	      trivial?1,
	      LAMBDA(x: real): -x,
	      neg_non_finite,
	      nan1,
	      neg_zero]

  neg_ed(round:[real->efloat])(X: efloat): efloat = fun_fp(round)(X)
  
END extended_float_neg
