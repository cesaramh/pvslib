%%
% @theory: domain_equivalence
% @author: mmoscato
% @date: Sat, 29 Oct 2022 11:29:54 GMT
%%
domain_equivalence[
  radix: above(1),
  precision : above(1)
  , e_max : above(1)
  , dExp      : { d: posnat | d > 2*(precision-1) - 1 }
]: THEORY
BEGIN
  ASSUMING
  
    dExp_emax: ASSUMPTION
     dExp = e_max - 1 + precision - 1
     
  ENDASSUMING

  IMPORTING float_unbounded@float[radix]

  IMPORTING float_bounded_axiomatic@ieee754_domain

  IMPORTING power@ln_exp_def

%  dExp: nat = e_max - 1 + precision - 1

  importing float_unbounded@float_props_rounding

  format: MACRO Format = (# Prec:=precision, dExp:=dExp#)
  
  axm_ulp_fnd_ulp_pos
  : LEMMA
    FORALL(x: real):
    x > 0
    IMPLIES
    RND_Min[radix]((# Prec:=precision, dExp:=dExp#))(x)`Fexp =
      LET e : real = real_defs.max(floor_ceil.floor
                                        (power@log.log
                                         (radix)(real_defs.abs(x))),
                                    float_bounded_axiomatic@ieee754_domain
                                        [radix, precision, e_max].emin)
      IN 1 + e - precision


  axm_ulp_fnd_ulp
    : Theorem
      FORALL(x: real)
            : float.ulp(format)(x) 
              = ieee754_domain[radix, precision, e_max].ulp(x)

END domain_equivalence
