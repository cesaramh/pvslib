extended_float_abs
[ radix     : above(1),
  precision : above(1),
  dExp      : { d: posnat | d > 2*(precision-1) - 1 }
] : THEORY BEGIN

  
  IMPORTING extended_float_operations_support[radix,precision,dExp]

  abs_non_finite(x: efloat | NOT is_finite?(x))
  : efloat
  = IF nan?(x) THEN nan_from1(x)
    ELSE posinf % cases: x = neginf  THEN posinf
    ENDIF       %        x = posinf  THEN posinf

  abs_zero(x: (is_finite?) | zero?(x)): efloat
  = poszero

  IMPORTING ieee754_operation_scheme__unary[
  	      efloat,
	      is_numeric?,
	      zero?,
	      is_finite?,
	      prj_ef,
	      trivial?1,
	      abs,
	      abs_non_finite,
	      nan1,
	      abs_zero]

  abs_ed(round:[real->efloat])(X: efloat): efloat = fun_fp(round)(X)
  

END extended_float_abs
