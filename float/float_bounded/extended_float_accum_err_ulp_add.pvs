extended_float_accum_err_ulp_add
[ radix     : above(1),
  precision : above(1),
  dExp      : { d: posnat | d > 2*(precision-1) - 1 }
] : THEORY BEGIN

  IMPORTING unb_link[radix,precision,dExp]

  IMPORTING float_unbounded@accum_err_add[radix, format, roundp, round]

  importing domain_equivalence[radix, precision, emax, dExp]

  accumulated_round_off_error_bound__addition
  : lemma
    FORALL(e1, e2: nonneg_real, r1, r2: real, f1, f2: (is_finite?))
    : LET fp_result = add_ed(rnd_ef)(f1,f2) 
      IN  is_finite?(fp_result) AND
          abs(prj_ef(f1)-r1) <= e1 AND
          abs(prj_ef(f2)-r2) <= e2
          IMPLIES abs(prj_ef(fp_result)-(r1+r2)) 
                  <= add_aerr_bound(r1,e1,r2,e2) 
                     + float_bounded_axiomatic@ieee754_domain[radix, precision, emax].ulp(add_ulp_bound(r1,e1,r2,e2))/2

END extended_float_accum_err_ulp_add
