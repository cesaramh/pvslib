extended_float_qeq
[ radix     : above(1),
  precision : above(1),
  dExp      : { d: posnat | d > 2*(precision-1) - 1 }
] : THEORY BEGIN

  
  IMPORTING extended_float_operations_support[radix,precision,dExp]

  qeq_non_finite(args: [efloat,efloat] | NOT is_finite?(args`1) OR NOT is_finite?(args`2)): bool
  = LET x:efloat = args`1, y:efloat = args`2 IN 
    IF nan?(x) OR nan?(y) THEN FALSE
    ELSE (x=y)
    ENDIF

  qeq_zero(args: [(is_finite?), (is_finite?)] | zero?(args`1) OR zero?(args`2)): bool
  = LET x:efloat = args`1, y:efloat = args`2 IN 
    (zero?(x) AND zero?(y))

  IMPORTING ieee754_predicate_scheme__binary[
  	      efloat,
	      is_numeric?,
	      zero?,
	      is_finite?,
	      prj_ef,
	      LAMBDA(x,y:real):x=y,
	      qeq_non_finite,
	      qeq_zero]

  qeq_ed(X,Y: efloat): bool = pred_fp(X,Y)

  qne_ed(X,Y: efloat): bool = NOT qeq_ed(X,Y)

END extended_float_qeq
