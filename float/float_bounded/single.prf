(single
 (IMP_extended_float_top_TCC1 0
  (IMP_extended_float_top_TCC1-1 nil 3884212496
   ("" (subtype-tcc) nil nil)
   ((real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil
   (IMP_extended_float_top subtype "single.radix_"
    "integers.above(1)")))
 (IMP_extended_float_top_TCC2 0
  (IMP_extended_float_top_TCC2-1 nil 3884212496
   ("" (subtype-tcc) nil nil)
   ((real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil
   (IMP_extended_float_top subtype "single.precision_"
    "integers.above(1)")))
 (IMP_extended_float_top_TCC3 0
  (IMP_extended_float_top_TCC3-1 nil 3884212496
   ("" (subtype-tcc) nil nil)
   ((real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil
   (IMP_extended_float_top subtype "single.dExp_"
    "{d: integers.posnat | reals.>(d, 45)}")))
 (inf_single_TCC1 0
  (inf_single_TCC1-1 nil 3800889345 ("" (subtype-tcc) nil nil)
   ((infinite_single? const-decl "bool" single nil)) nil
   (inf_single subtype "extended_float[2, 24, 149].inf(single.b)"
    "(single.infinite_single?)")))
 (nan_single_TCC1 0
  (nan_single_TCC1-1 nil 3800889345 ("" (subtype-tcc) nil nil)
   ((nan_single? const-decl "bool" single nil)) nil
   (nan_single subtype "extended_float[2, 24, 149].nan(single.b)"
    "(single.nan_single?)")))
 (zero_single_TCC1 0
  (zero_single_TCC1-1 nil 3800889345 ("" (subtype-tcc) nil nil)
   ((zero_single? const-decl "bool" single nil)) nil
   (zero_single subtype "extended_float[2, 24, 149].zero(single.b)"
    "(single.zero_single?)")))
 (nzfinite_single_TCC1 0
  (nzfinite_single_TCC1-1 nil 3800889345 ("" (subtype-tcc) nil nil)
   ((nzfinite_single? const-decl "bool" single nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil))
   nil
   (nzfinite_single subtype
    "extended_float[2, 24, 149].nzfinite(single.v)"
    "(single.nzfinite_single?)")))
 (prjct_single_TCC1 0
  (prjct_single_TCC1-1 nil 3800889345 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (efloat type-decl nil extended_float nil)
    (single type-eq-decl nil single nil)
    (finite_single? const-decl "bool" single nil)
    (zero_inclusive formula-decl nil extended_float nil)
    (is_finite? const-decl "bool" extended_float nil))
   nil
   (prjct_single subtype "single.f"
    "(extended_float[2, 24, 149].is_finite?)")))
 (proj_round_proj_on_finite 0
  (proj_round_proj_on_finite-1 nil 3806854468
   ("" (skeep :preds? t)
    (("" (expand "safe_prjct_single")
      (("" (expand "finite_single?")
        (("" (expand "round_nearest_even_single")
          (("" (use "proj_round_proj_on_finite") nil nil)) nil))
        nil))
      nil))
    nil)
   ((safe_prjct_single const-decl "real" single nil)
    (round_nearest_even_single const-decl "single" single nil)
    (proj_round_proj_on_finite formula-decl nil
     extended_float_rounding__nearest_even nil)
    (efloat type-decl nil extended_float nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (is_finite? const-decl "bool" extended_float nil)
    (single type-eq-decl nil single nil)
    (f skolem-const-decl "(finite_single?)" single nil)
    (finite_single? const-decl "bool" single nil))
   shostak))
 (IMP_extended_float_props_TCC1 0
  (IMP_extended_float_props_TCC1-1 nil 3884212496
   ("" (subtype-tcc) nil nil)
   ((real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (xef_real_1_j number-judgement "xef_real" single nil))
   nil
   (IMP_extended_float_props subtype "single.radix_"
    "integers.above(1)")))
 (IMP_extended_float_props_TCC2 0
  (IMP_extended_float_props_TCC2-1 nil 3884212496
   ("" (subtype-tcc) nil nil)
   ((real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (xef_real_1_j number-judgement "xef_real" single nil))
   nil
   (IMP_extended_float_props subtype "single.precision_"
    "integers.above(1)")))
 (IMP_extended_float_props_TCC3 0
  (IMP_extended_float_props_TCC3-1 nil 3884212496
   ("" (subtype-tcc) nil nil)
   ((real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil
   (IMP_extended_float_props subtype "single.dExp_"
    "{d: integers.posnat | reals.>(d, 45)}")))
 (finite_single_safe_projection 0
  (finite_single_safe_projection-1 nil 3807036067
   ("" (skeep :preds? t)
    (("" (expand "finite_single?")
      (("" (lemma "is_finite_safe_projection")
        (("" (inst -1 "f1" "f2")
          (("" (assert)
            (("" (expand "safe_prjct_single") (("" (propax) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((finite_single? const-decl "bool" single nil)
    (f1 skolem-const-decl "(finite_single?)" single nil)
    (single type-eq-decl nil single nil)
    (is_finite? const-decl "bool" extended_float nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (efloat type-decl nil extended_float nil)
    (safe_prjct_single const-decl "real" single nil)
    (is_finite_safe_projection formula-decl nil extended_float_props
     nil))
   shostak))
 (single_safe_projection_is_le_compliant 0
  (single_safe_projection_is_le_compliant-1 nil 3800889440
   ("" (skeep :preds? t)
    (("" (expand "qle_efs")
      (("" (expand "safe_prjct_single")
        (("" (use "safe_projection_is_le_compliant")
          (("1" (expand "finite_single?") (("1" (propax) nil nil)) nil)
           ("2" (expand "finite_single?") (("2" (propax) nil nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((qle_efs const-decl "bool" single nil)
    (safe_projection_is_le_compliant formula-decl nil
     extended_float_props nil)
    (f2 skolem-const-decl "(finite_single?)" single nil)
    (f1 skolem-const-decl "(finite_single?)" single nil)
    (finite_single? const-decl "bool" single nil)
    (single type-eq-decl nil single nil)
    (is_finite? const-decl "bool" extended_float nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (efloat type-decl nil extended_float nil)
    (safe_prjct_single const-decl "real" single nil))
   shostak))
 (single_safe_projection_is_lt_compliant 0
  (single_safe_projection_is_lt_compliant-1 nil 3806687471
   ("" (skeep :preds? t)
    (("" (expand "qlt_efs")
      (("" (expand "finite_single?")
        (("" (use "safe_projection_is_lt_compliant")
          (("" (expand "safe_prjct_single") (("" (propax) nil nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((qlt_efs const-decl "bool" single nil)
    (safe_projection_is_lt_compliant formula-decl nil
     extended_float_props nil)
    (f2 skolem-const-decl "(finite_single?)" single nil)
    (efloat type-decl nil extended_float nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (is_finite? const-decl "bool" extended_float nil)
    (single type-eq-decl nil single nil)
    (f1 skolem-const-decl "(finite_single?)" single nil)
    (safe_prjct_single const-decl "real" single nil)
    (finite_single? const-decl "bool" single nil))
   shostak))
 (single_qge_dual 0
  (single_qge_dual-1 nil 3806425295
   ("" (skeep :preds? t)
    (("" (expand "finite_single?")
      (("" (expand "qge_efs")
        (("" (expand "qle_efs") (("" (use "ef_qge_dual") nil nil))
          nil))
        nil))
      nil))
    nil)
   ((finite_single? const-decl "bool" single nil)
    (qle_efs const-decl "bool" single nil)
    (ef_qge_dual formula-decl nil extended_float_props nil)
    (efloat type-decl nil extended_float nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (is_finite? const-decl "bool" extended_float nil)
    (single type-eq-decl nil single nil)
    (f2 skolem-const-decl "(finite_single?)" single nil)
    (f1 skolem-const-decl "(finite_single?)" single nil)
    (qge_efs const-decl "bool" single nil))
   shostak))
 (single_qgt_dual 0
  (single_qgt_dual-1 nil 3806840856
   ("" (skeep :preds? t)
    (("" (expand "finite_single?")
      (("" (expand "qgt_efs")
        (("" (expand "qlt_efs") (("" (use "ef_qgt_dual") nil nil))
          nil))
        nil))
      nil))
    nil)
   ((finite_single? const-decl "bool" single nil)
    (qlt_efs const-decl "bool" single nil)
    (ef_qgt_dual formula-decl nil extended_float_props nil)
    (efloat type-decl nil extended_float nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (is_finite? const-decl "bool" extended_float nil)
    (single type-eq-decl nil single nil)
    (f2 skolem-const-decl "(finite_single?)" single nil)
    (f1 skolem-const-decl "(finite_single?)" single nil)
    (qgt_efs const-decl "bool" single nil))
   shostak))
 (single_nle_lt_rew 0
  (single_nle_lt_rew-1 nil 3806842271
   ("" (skeep :preds? t)
    (("" (expand "finite_single?")
      (("" (expand "qlt_efs")
        (("" (expand "qle_efs") (("" (use "ef_nle_lt_rew") nil nil))
          nil))
        nil))
      nil))
    nil)
   ((finite_single? const-decl "bool" single nil)
    (qle_efs const-decl "bool" single nil)
    (ef_nle_lt_rew formula-decl nil extended_float_props nil)
    (efloat type-decl nil extended_float nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (is_finite? const-decl "bool" extended_float nil)
    (single type-eq-decl nil single nil)
    (f2 skolem-const-decl "(finite_single?)" single nil)
    (f1 skolem-const-decl "(finite_single?)" single nil)
    (qlt_efs const-decl "bool" single nil))
   shostak))
 (single_nlt_le_rew 0
  (single_nlt_le_rew-1 nil 3806426027
   ("" (skeep :preds? t)
    (("" (expand "finite_single?")
      (("" (expand "qlt_efs")
        (("" (expand "qle_efs") (("" (use "ef_nlt_le_rew") nil nil))
          nil))
        nil))
      nil))
    nil)
   ((finite_single? const-decl "bool" single nil)
    (qle_efs const-decl "bool" single nil)
    (ef_nlt_le_rew formula-decl nil extended_float_props nil)
    (efloat type-decl nil extended_float nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (is_finite? const-decl "bool" extended_float nil)
    (single type-eq-decl nil single nil)
    (f2 skolem-const-decl "(finite_single?)" single nil)
    (f1 skolem-const-decl "(finite_single?)" single nil)
    (qlt_efs const-decl "bool" single nil))
   shostak))
 (single_neq_not_eq_rew 0
  (single_neq_not_eq_rew-1 nil 3806426215
   ("" (skeep :preds? t)
    (("" (expand "finite_single?")
      (("" (expand "/=")
        (("" (expand "qne_efs")
          (("" (expand "safe_prjct_single")
            (("" (use "ef_neq_not_eq_rew") nil nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((finite_single? const-decl "bool" single nil)
    (qne_efs const-decl "bool" single nil)
    (f1 skolem-const-decl "(finite_single?)" single nil)
    (f2 skolem-const-decl "(finite_single?)" single nil)
    (single type-eq-decl nil single nil)
    (is_finite? const-decl "bool" extended_float nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (efloat type-decl nil extended_float nil)
    (ef_neq_not_eq_rew formula-decl nil extended_float_props nil)
    (safe_prjct_single const-decl "real" single nil)
    (/= const-decl "bool" single nil))
   shostak))
 (single_eq_eq_rew 0
  (single_eq_eq_rew-1 nil 3858352896
   ("" (skeep)
    (("" (use "single_neq_not_eq_rew")
      (("" (expand "/=")
        (("" (expand "qne_efs")
          (("" (expand "qne_ed")
            (("" (assert)
              (("" (iff)
                (("" (flatten)
                  (("" (split 1)
                    (("1" (flatten)
                      (("1" (assert)
                        (("1" (expand "qeq_efs")
                          (("1" (propax) nil nil)) nil))
                        nil))
                      nil)
                     ("2" (expand "qeq_efs")
                      (("2" (flatten) (("2" (assert) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((single_neq_not_eq_rew formula-decl nil single nil)
    (finite_single? const-decl "bool" single nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (single type-eq-decl nil single nil)
    (efloat type-decl nil extended_float nil)
    (qne_efs const-decl "bool" single nil)
    (qeq_efs const-decl "bool" single nil)
    (qne_ed const-decl "bool" extended_float_qeq nil)
    (/= const-decl "bool" single nil))
   shostak)))

