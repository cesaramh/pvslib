extended_float_sqt
[ radix     : above(1),
  precision : above(1),
  dExp      : { d: posnat | d > 2*(precision-1) - 1 }
] : THEORY BEGIN
  
  IMPORTING extended_float_operations_support[radix,precision,dExp]

  sqt_non_finite(x: efloat | NOT is_finite?(x))
  : efloat
  = IF nan?(x) THEN nan_from1(x)
    ELSIF x = neginf  THEN qnan
    ELSE  posinf %  case: x = posinf  THEN posinf
    ENDIF        

  sqt_zero(x: (is_finite?) | zero?(x)): efloat
  = IF x = poszero THEN poszero
    ELSE negzero % case: x = negzero THEN negzero % A negative zero is allowed as an operand as per IEEE 754 ยง5.4.1.
    ENDIF

  IMPORTING reals@sqrt

  IMPORTING ieee754_operation_scheme__unary[
  	      efloat,
	      is_numeric?,
	      zero?,
	      is_finite?,
	      prj_ef,
	      LAMBDA(x: real): x >= 0,
	      sqrt,
	      sqt_non_finite,
	      nan1,
	      sqt_zero]

  sqt_ed(round:[real->efloat])(X: efloat): efloat = fun_fp(round)(X)

END extended_float_sqt
