(ieee754_semantics
 (emin_TCC1 0
  (emin_TCC1-1 nil 3765724097
   ("" (case "1 < emax")
    (("1" (assert) nil nil)
     ("2" (hide 2)
      (("2" (typepred "emax")
        (("2" (typepred "b")
          (("2" (typepred "p") (("2" (ground) nil nil)) nil)) nil))
        nil))
      nil))
    nil)
   ((real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (< const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posint nonempty-type-eq-decl nil integers nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (ieee754_radix nonempty-type-eq-decl nil ieee754_format_parameters
     nil)
    (b formal-const-decl "ieee754_radix" ieee754_semantics nil)
    (ieee754_precision nonempty-type-eq-decl nil
     ieee754_format_parameters nil)
    (p formal-const-decl "ieee754_precision(b)" ieee754_semantics nil)
    (ieee754_maxExp nonempty-type-eq-decl nil ieee754_format_parameters
     nil)
    (emax formal-const-decl "ieee754_maxExp(b, p)" ieee754_semantics
     nil))
   nil
   (emin subtype "(number_fields.-)(1, ieee754_semantics.emax)"
    "negint")))
 (proj_def_pZero_TCC1 0
  (proj_def_pZero_TCC1-1 nil 3763460806 ("" (subtype-tcc) nil nil)
   ((emax formal-const-decl "ieee754_maxExp(b, p)" ieee754_semantics
     nil)
    (ieee754_maxExp nonempty-type-eq-decl nil ieee754_format_parameters
     nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (p formal-const-decl "ieee754_precision(b)" ieee754_semantics nil)
    (ieee754_precision nonempty-type-eq-decl nil
     ieee754_format_parameters nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (b formal-const-decl "ieee754_radix" ieee754_semantics nil)
    (ieee754_radix nonempty-type-eq-decl nil ieee754_format_parameters
     nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (posint nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (pzero_finite formula-decl nil ieee754_data nil))
   nil
   (proj_def_pZero subtype
    "ieee754_data[ieee754_semantics.b, ieee754_semantics.p, ieee754_semantics.emax].pZero"
    "(ieee754_data[ieee754_semantics.b, ieee754_semantics.p, ieee754_semantics.emax].finite?)")))
 (proj_def_nZero_TCC1 0
  (proj_def_nZero_TCC1-1 nil 3763460806 ("" (subtype-tcc) nil nil)
   ((emax formal-const-decl "ieee754_maxExp(b, p)" ieee754_semantics
     nil)
    (ieee754_maxExp nonempty-type-eq-decl nil ieee754_format_parameters
     nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (p formal-const-decl "ieee754_precision(b)" ieee754_semantics nil)
    (ieee754_precision nonempty-type-eq-decl nil
     ieee754_format_parameters nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (b formal-const-decl "ieee754_radix" ieee754_semantics nil)
    (ieee754_radix nonempty-type-eq-decl nil ieee754_format_parameters
     nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (posint nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (nzero_finite formula-decl nil ieee754_data nil))
   nil
   (proj_def_nZero subtype
    "ieee754_data[ieee754_semantics.b, ieee754_semantics.p, ieee754_semantics.emax].nZero"
    "(ieee754_data[ieee754_semantics.b, ieee754_semantics.p, ieee754_semantics.emax].finite?)")))
 (expr_judgement_TCC1 0
  (expr_judgement_TCC1-1 nil 3765636172
   ("" (judgement-tcc)
    (("" (use "nzfinite?_def") (("" (assert) nil nil)) nil)) nil)
   ((nzfinite?_def formula-decl nil ieee754_semantics nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posint nonempty-type-eq-decl nil integers nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (ieee754_radix nonempty-type-eq-decl nil ieee754_format_parameters
     nil)
    (b formal-const-decl "ieee754_radix" ieee754_semantics nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (ieee754_precision nonempty-type-eq-decl nil
     ieee754_format_parameters nil)
    (p formal-const-decl "ieee754_precision(b)" ieee754_semantics nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (ieee754_maxExp nonempty-type-eq-decl nil ieee754_format_parameters
     nil)
    (emax formal-const-decl "ieee754_maxExp(b, p)" ieee754_semantics
     nil)
    (datum nonempty-type-decl nil ieee754_data nil)
    (nzfinite? const-decl "bool" ieee754_semantics nil))
   nil
   (expr_judgement_ subtype "ieee754_semantics.f"
    "(ieee754_data[ieee754_semantics.b, ieee754_semantics.p, ieee754_semantics.emax].finite?)")))
 (add_inv_TCC1 0
  (add_inv_TCC1-2 nil 3883991670
   ("" (inst 1 "LAMBDA(x: (finite?)): pZero") nil nil)
   ((pZero const-decl "datum" ieee754_data nil)
    (finite? const-decl "bool" ieee754_data nil)
    (datum nonempty-type-decl nil ieee754_data nil)
    (emax formal-const-decl "ieee754_maxExp(b, p)" ieee754_semantics
     nil)
    (ieee754_maxExp nonempty-type-eq-decl nil ieee754_format_parameters
     nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (p formal-const-decl "ieee754_precision(b)" ieee754_semantics nil)
    (ieee754_precision nonempty-type-eq-decl nil
     ieee754_format_parameters nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (b formal-const-decl "ieee754_radix" ieee754_semantics nil)
    (ieee754_radix nonempty-type-eq-decl nil ieee754_format_parameters
     nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (posint nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (pzero_finite formula-decl nil ieee754_data nil))
   nil
   (add_inv existence ""
    "[(ieee754_data[ieee754_semantics.b, ieee754_semantics.p, ieee754_semantics.emax].finite?) -> (ieee754_data[ieee754_semantics.b, ieee754_semantics.p, ieee754_semantics.emax].finite?)]"))
  (add_inv_TCC1-1 nil 3765636246
   ("" (inst 1 "LAMBDA(x: (nzfinite?)): pZero") nil nil)
   ((pZero const-decl "datum" ieee754_data nil)
    (finite? const-decl "bool" ieee754_data nil)
    (nzfinite? const-decl "bool" ieee754_semantics nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (datum nonempty-type-decl nil ieee754_data nil)
    (pzero_finite formula-decl nil ieee754_data nil))
   nil
   (add_inv existence ""
    "[(ieee754_data[ieee754_semantics.b, ieee754_semantics.p, ieee754_semantics.emax].finite?) -> (ieee754_data[ieee754_semantics.b, ieee754_semantics.p, ieee754_semantics.emax].finite?)]")))
 (proj_round_TCC1 0
  (proj_round_TCC1-1 nil 3763460806 ("" (subtype-tcc) nil nil)
   ((finite_round_er formula-decl nil ieee754_semantics nil)) nil
   (proj_round subtype "ieee754_semantics.round(ieee754_semantics.x)"
    "(ieee754_data[ieee754_semantics.b, ieee754_semantics.p, ieee754_semantics.emax].finite?)")))
 (round_monotone_TCC1 0
  (round_monotone_TCC1-1 nil 3763460806 ("" (subtype-tcc) nil nil)
   ((finite_round_er formula-decl nil ieee754_semantics nil)) nil
   (round_monotone subtype
    "ieee754_semantics.round(ieee754_semantics.y)"
    "(ieee754_data[ieee754_semantics.b, ieee754_semantics.p, ieee754_semantics.emax].finite?)")))
 (is_finite_safe_projection_er_real 0
  (is_finite_safe_projection_er_real-1 nil 3883991777
   ("" (skeep)
    (("" (typepred "x")
      (("" (expand "safe_proj")
        (("" (assert)
          (("" (use "er_upper_bound")
            (("" (use "er_lower_bound")
              (("" (assert)
                (("" (lift-if)
                  (("" (split)
                    (("1" (flatten) (("1" (assert) nil nil)) nil)
                     ("2" (flatten)
                      (("2" (split)
                        (("1" (flatten) (("1" (assert) nil nil)) nil)
                         ("2" (flatten) (("2" (assert) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((er_real nonempty-type-eq-decl nil ieee754_domain nil)
    (exactly_representable? const-decl "bool" ieee754_domain nil)
    (emax formal-const-decl "ieee754_maxExp(b, p)" ieee754_semantics
     nil)
    (ieee754_maxExp nonempty-type-eq-decl nil ieee754_format_parameters
     nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (p formal-const-decl "ieee754_precision(b)" ieee754_semantics nil)
    (ieee754_precision nonempty-type-eq-decl nil
     ieee754_format_parameters nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (b formal-const-decl "ieee754_radix" ieee754_semantics nil)
    (ieee754_radix nonempty-type-eq-decl nil ieee754_format_parameters
     nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (posint nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (er_lower_bound formula-decl nil ieee754_domain nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (er_upper_bound formula-decl nil ieee754_domain nil)
    (safe_proj const-decl "real" ieee754_semantics nil))
   shostak))
 (safe_projection_er_real_proj_TCC1 0
  (safe_projection_er_real_proj_TCC1-1 nil 3883991574
   ("" (use "is_finite_safe_projection_er_real") nil nil)
   ((is_finite_safe_projection_er_real formula-decl nil
     ieee754_semantics nil))
   nil
   (safe_projection_er_real_proj subtype "ieee754_semantics.f"
    "(ieee754_data[ieee754_semantics.b, ieee754_semantics.p, ieee754_semantics.emax].finite?)")))
 (safe_projection_er_real_proj 0
  (safe_projection_er_real_proj-1 nil 3883992032
   ("" (skeep)
    (("" (use "is_finite_safe_projection_er_real")
      (("" (replace -2 -1)
        (("" (expand "safe_proj") (("" (assert) nil nil)) nil)) nil))
      nil))
    nil)
   ((is_finite_safe_projection_er_real formula-decl nil
     ieee754_semantics nil)
    (er_real nonempty-type-eq-decl nil ieee754_domain nil)
    (exactly_representable? const-decl "bool" ieee754_domain nil)
    (datum nonempty-type-decl nil ieee754_data nil)
    (emax formal-const-decl "ieee754_maxExp(b, p)" ieee754_semantics
     nil)
    (ieee754_maxExp nonempty-type-eq-decl nil ieee754_format_parameters
     nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (p formal-const-decl "ieee754_precision(b)" ieee754_semantics nil)
    (ieee754_precision nonempty-type-eq-decl nil
     ieee754_format_parameters nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (b formal-const-decl "ieee754_radix" ieee754_semantics nil)
    (ieee754_radix nonempty-type-eq-decl nil ieee754_format_parameters
     nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (posint nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (safe_proj const-decl "real" ieee754_semantics nil)
    (real_plus_real_is_real application-judgement "real" reals nil))
   shostak))
 (is_finite_safe_projection 0
  (is_finite_safe_projection-1 nil 3883992148
   ("" (skeep)
    (("" (expand "safe_proj" -1 1)
      (("" (lemma "is_finite_safe_projection_er_real")
        (("" (inst -1 "f2" "proj(f1)") (("" (assert) nil nil)) nil))
        nil))
      nil))
    nil)
   ((safe_proj const-decl "real" ieee754_semantics nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posint nonempty-type-eq-decl nil integers nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (ieee754_radix nonempty-type-eq-decl nil ieee754_format_parameters
     nil)
    (b formal-const-decl "ieee754_radix" ieee754_semantics nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (ieee754_precision nonempty-type-eq-decl nil
     ieee754_format_parameters nil)
    (p formal-const-decl "ieee754_precision(b)" ieee754_semantics nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (ieee754_maxExp nonempty-type-eq-decl nil ieee754_format_parameters
     nil)
    (emax formal-const-decl "ieee754_maxExp(b, p)" ieee754_semantics
     nil)
    (datum nonempty-type-decl nil ieee754_data nil)
    (exactly_representable? const-decl "bool" ieee754_domain nil)
    (er_real nonempty-type-eq-decl nil ieee754_domain nil)
    (finite? const-decl "bool" ieee754_data nil)
    (proj const-decl "er_real" ieee754_semantics nil)
    (is_finite_safe_projection_er_real formula-decl nil
     ieee754_semantics nil))
   shostak)))

