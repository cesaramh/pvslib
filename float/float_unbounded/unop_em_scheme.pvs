%
% Generic scheme to define correctly rounded unary operations.
%
unop_em_scheme[
  radix:above(1),
  (IMPORTING float[radix])
  b:Format,
  round : ClosestRoundingPred(b),
  RtoF  : CanonicRoundingFun(b,round),
  
  s? : [real->bool],
  g: [x:(s?)->real]
]: THEORY
BEGIN

  f1: VAR float

  Fg((f1|s?(FtoR(f1)))): { f2:(Fcanonic?(b)) | Closest?(b)(g(FtoR(f1)),f2)}=
     RtoF(g(FtoR(f1)))

  Fg_bounded: LEMMA
   FORALL(f1|s?(FtoR(f1))):
    Fbounded?(b)(Fg(f1))

  Fg_error: LEMMA
   FORALL(f1|s?(FtoR(f1))):
    abs(FtoR(Fg(f1)) - g(FtoR(f1))) <= Fulp(b)(Fg(f1))/2

END unop_em_scheme
