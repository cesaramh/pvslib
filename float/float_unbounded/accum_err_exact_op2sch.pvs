accum_err_exact_op2sch[
   F: TYPE,

   F2R : [F->real],

   fF_pre?  : [F,F->bool],
   fF       : [f1:F,{f2:F|fF_pre?(f1,f2)}-> F],

   fR_pre? : [real,real->bool],
   fR       : [r1:real,{r2:real|fR_pre?(r1,r2)}-> real],
  
   fun_bound_pre : [real,nonneg_real,real,nonneg_real->bool],
%   fun_bound : [(fun_bound_pre)->real],
   fun_bound : [ r1: real,
    	         e1: nonneg_real,
    	         r2: real,
		{e2: nonneg_real|fun_bound_pre(r1,e1,r2,e2)}->real]
]: THEORY
BEGIN
  ASSUMING
    f1,f2: VAR F
    r1,r2: VAR real
    e1,e2: VAR nonneg_real

    fR_err: ASSUMPTION
      abs(F2R(f1)-r1) <= e1      AND
      abs(F2R(f2)-r2) <= e2      AND
      fR_pre?(r1,r2)             AND
      fR_pre?(F2R(f1),F2R(f2))   AND
      fun_bound_pre(r1,e1,r2,e2)
      IMPLIES abs(fR(F2R(f1),F2R(f2))-fR(r1,r2)) <= fun_bound(r1,e1,r2,e2)

    fF_correctly_rounded: ASSUMPTION 
      fR_pre?(F2R(f1),F2R(f2))   AND
      fF_pre?(f1,f2)
      IMPLIES 
        F2R(fF(f1,f2)) = fR(F2R(f1),F2R(f2))
    
  ENDASSUMING

  IMPORTING reals@abs_lems
    
  accumulated_error: LEMMA 
    abs(F2R(f1)-r1) <= e1      AND
    abs(F2R(f2)-r2) <= e2      AND
    fF_pre?(f1,f2)             AND
    fR_pre?(r1,r2)             AND
    fR_pre?(F2R(f1), F2R(f2))  AND
    fun_bound_pre(r1,e1,r2,e2) 
    IMPLIES abs(F2R(fF(f1,f2)) - fR(r1,r2))
            <= fun_bound(r1,e1,r2,e2)

END accum_err_exact_op2sch
