(float32
 (div_f32_TCC1 0
  (div_f32_TCC1-1 nil 3913301708 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (above nonempty-type-eq-decl nil integers nil)
    (Format type-eq-decl nil float nil)
    (int nonempty-type-eq-decl nil integers nil)
    (float type-eq-decl nil float nil)
    (Fcanonic? const-decl "bool" float nil)
    (single_precision_format const-decl "Format" ieee754sp nil)
    (float32 type-eq-decl nil float32 nil)
    (number nonempty-type-decl nil numbers nil)
    (/= const-decl "boolean" notequal nil)
    (unb_single nonempty-type-eq-decl nil ieee754sp nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (StoR const-decl "real" ieee754sp nil)
    (^ const-decl "real" exponentiation nil)
    (vNum const-decl "posnat" float nil)
    (Fbounded? const-decl "bool" float nil)
    (Fnormal? const-decl "bool" float nil)
    (Fsubnormal? const-decl "bool" float nil)
    (rat_times_rat_is_rat application-judgement "rat" rationals nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (posnat_expt application-judgement "posnat" exponentiation nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (posint_exp application-judgement "posint" exponentiation nil)
    (int_abs_is_nonneg application-judgement "{j: nonneg_int | j >= i}"
     real_defs nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (FtoR const-decl "real" float nil)
    (posrat_exp application-judgement "posrat" exponentiation nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil))
   nil
   (div_f32 subtype "float32.nzy"
    "{f2 | float[2].FtoR(ieee754sp_div.f2) /= 0}")))
 (mod_f32_TCC1 0
  (mod_f32_TCC1-1 nil 3913301708 ("" (subtype-tcc) nil nil)
   ((StoR const-decl "real" ieee754sp nil)
    (float32 type-eq-decl nil float32 nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (^ const-decl "real" exponentiation nil)
    (vNum const-decl "posnat" float nil)
    (Fnormal? const-decl "bool" float nil)
    (Fsubnormal? const-decl "bool" float nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (posnat_expt application-judgement "posnat" exponentiation nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_abs_is_nonneg application-judgement "{j: nonneg_int | j >= i}"
     real_defs nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (FtoR const-decl "real" float nil)
    (/= const-decl "boolean" notequal nil)
    (RtoS const-decl "{f: unb_single | closest_single?(x1)(f)}"
     ieee754sp nil)
    (closest_single? const-decl "bool" ieee754sp nil)
    (unb_single nonempty-type-eq-decl nil ieee754sp nil)
    (Fcanonic? const-decl "bool" float nil)
    (sp_closest? const-decl "bool" ieee754sp nil)
    (Fbounded? const-decl "bool" float nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (float type-eq-decl nil float nil)
    (int nonempty-type-eq-decl nil integers nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (single_precision_format const-decl "Format" ieee754sp nil)
    (Format type-eq-decl nil float nil)
    (above nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (mod_pre2 const-decl "bool" cr_mod nil)
    (rat_times_rat_is_rat application-judgement "rat" rationals nil)
    (posint_exp application-judgement "posint" exponentiation nil)
    (posrat_exp application-judgement "posrat" exponentiation nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   nil
   (mod_f32 subtype "float32.nzy"
    "{f2 | cr_mod[2, ieee754sp.single_precision_format, ieee754sp.sp_closest?, ieee754sp.RtoS].mod_pre2(float[2].FtoR(float32.x))(float[2].FtoR(ieee754sp_mod.f2))}"))))

