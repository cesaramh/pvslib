(ieee754_neg
 (neg_finite_def 0
  (neg_finite_def-1 nil 3884080087
   ("" (skeep)
    (("" (rewrite "neg_correct__finite")
      (("" (expand "safe_proj") (("" (rewrite "add_inv_def") nil nil))
        nil))
      nil))
    nil)
   ((neg_correct__finite formula-decl nil ieee754_neg nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posint nonempty-type-eq-decl nil integers nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (ieee754_radix nonempty-type-eq-decl nil ieee754_format_parameters
     nil)
    (b formal-const-decl "ieee754_radix" ieee754_neg nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (ieee754_precision nonempty-type-eq-decl nil
     ieee754_format_parameters nil)
    (p formal-const-decl "ieee754_precision(b)" ieee754_neg nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (ieee754_maxExp nonempty-type-eq-decl nil ieee754_format_parameters
     nil)
    (emax formal-const-decl "ieee754_maxExp(b, p)" ieee754_neg nil)
    (datum nonempty-type-decl nil ieee754_data nil)
    (finite? const-decl "bool" ieee754_data nil)
    (add_inv_def formula-decl nil ieee754_semantics nil)
    (safe_proj const-decl "real" ieee754_semantics nil))
   shostak))
 (neg_finites_is_finite 0
  (neg_finites_is_finite-1 nil 3884090876
   ("" (skeep)
    (("" (rewrite "pInf_nInf_Nan_finite" :dir rl :fnums 1)
      (("" (expand "/=")
        (("" (split 1)
          (("1" (replaces -1)
            (("1" (rewrite "neg_correct__pInf")
              (("1" (assert)
                (("1" (rewrite "ninf_not_finite") nil nil)) nil))
              nil))
            nil)
           ("2" (replaces -1)
            (("2" (rewrite "neg_correct__nInf")
              (("2" (rewrite "pinf_not_finite") nil nil)) nil))
            nil)
           ("3" (use "neg_correct__nan")
            (("3" (assert) (("3" (rewrite "nan_not_finite") nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((pInf_nInf_Nan_finite formula-decl nil ieee754_data nil)
    (datum nonempty-type-decl nil ieee754_data nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posint nonempty-type-eq-decl nil integers nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (ieee754_radix nonempty-type-eq-decl nil ieee754_format_parameters
     nil)
    (b formal-const-decl "ieee754_radix" ieee754_neg nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (ieee754_precision nonempty-type-eq-decl nil
     ieee754_format_parameters nil)
    (p formal-const-decl "ieee754_precision(b)" ieee754_neg nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (ieee754_maxExp nonempty-type-eq-decl nil ieee754_format_parameters
     nil)
    (emax formal-const-decl "ieee754_maxExp(b, p)" ieee754_neg nil)
    (neg_correct__pInf formula-decl nil ieee754_neg nil)
    (ninf_not_finite formula-decl nil ieee754_data nil)
    (TRUE const-decl "bool" booleans nil)
    (neg_correct__nInf formula-decl nil ieee754_neg nil)
    (pinf_not_finite formula-decl nil ieee754_data nil)
    (neg_ieee754 const-decl "[datum -> datum]" ieee754_neg nil)
    (NaN? const-decl "PRED[datum]" ieee754_data nil)
    (PRED type-eq-decl nil defined_types nil)
    (nan_not_finite formula-decl nil ieee754_data nil)
    (neg_correct__nan formula-decl nil ieee754_neg nil)
    (/= const-decl "boolean" notequal nil))
   shostak))
 (finite_neg_is_finite 0
  (finite_neg_is_finite-1 nil 3909568724
   ("" (skeep)
    (("" (use "neg_correct__finite")
      (("" (replace -1)
        (("" (typepred "add_inv(f)") (("" (propax) nil nil)) nil))
        nil))
      nil))
    nil)
   ((neg_correct__finite formula-decl nil ieee754_neg nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posint nonempty-type-eq-decl nil integers nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (ieee754_radix nonempty-type-eq-decl nil ieee754_format_parameters
     nil)
    (b formal-const-decl "ieee754_radix" ieee754_neg nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (ieee754_precision nonempty-type-eq-decl nil
     ieee754_format_parameters nil)
    (p formal-const-decl "ieee754_precision(b)" ieee754_neg nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (ieee754_maxExp nonempty-type-eq-decl nil ieee754_format_parameters
     nil)
    (emax formal-const-decl "ieee754_maxExp(b, p)" ieee754_neg nil)
    (datum nonempty-type-decl nil ieee754_data nil)
    (finite? const-decl "bool" ieee754_data nil)
    (f skolem-const-decl "datum[b, p, emax]" ieee754_neg nil)
    (add_inv const-decl "(finite?)" ieee754_semantics nil)
    (NOT const-decl "[bool -> bool]" booleans nil))
   shostak)))

