(ieee754_div
 (div_correct__finite_TCC1 0
  (div_correct__finite_TCC1-1 nil 3765649882
   ("" (skeep :preds? t)
    (("" (rewrite "nzfinite?_def")
      (("" (rewrite "nzfinite?_def")
        (("" (expand "/=") (("" (propax) nil nil)) nil)) nil))
      nil))
    nil)
   ((nzfinite?_def formula-decl nil ieee754_semantics nil)
    (datum nonempty-type-decl nil ieee754_data nil)
    (finite? const-decl "bool" ieee754_data nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posint nonempty-type-eq-decl nil integers nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (ieee754_radix nonempty-type-eq-decl nil ieee754_format_parameters
     nil)
    (b formal-const-decl "ieee754_radix" ieee754_div nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (ieee754_precision nonempty-type-eq-decl nil
     ieee754_format_parameters nil)
    (p formal-const-decl "ieee754_precision(b)" ieee754_div nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (ieee754_maxExp nonempty-type-eq-decl nil ieee754_format_parameters
     nil)
    (emax formal-const-decl "ieee754_maxExp(b, p)" ieee754_div nil)
    (/= const-decl "boolean" notequal nil)
    (nzfinite? const-decl "bool" ieee754_semantics nil))
   nil
   (div_correct__finite subtype
    "ieee754_semantics[ieee754_div.b, ieee754_div.p, ieee754_div.emax].proj(ieee754_div.f2)"
    "nznum")))
 (div_finite_def_TCC1 0
  (div_finite_def_TCC2-1 nil 3883989241
   ("" (skeep)
    (("" (typepred "f2")
      (("" (rewrite "nzfinite?_def") (("" (flatten) nil nil)) nil))
      nil))
    nil)
   ((nzfinite? const-decl "bool" ieee754_semantics nil)
    (datum nonempty-type-decl nil ieee754_data nil)
    (emax formal-const-decl "ieee754_maxExp(b, p)" ieee754_div nil)
    (ieee754_maxExp nonempty-type-eq-decl nil ieee754_format_parameters
     nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (p formal-const-decl "ieee754_precision(b)" ieee754_div nil)
    (ieee754_precision nonempty-type-eq-decl nil
     ieee754_format_parameters nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (b formal-const-decl "ieee754_radix" ieee754_div nil)
    (ieee754_radix nonempty-type-eq-decl nil ieee754_format_parameters
     nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (posint nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (nzfinite?_def formula-decl nil ieee754_semantics nil))
   nil
   (div_finite_def subtype "ieee754_div.f2"
    "(ieee754_data[ieee754_div.b, ieee754_div.p, ieee754_div.emax].finite?)")))
 (div_finite_def_TCC2 0
  (div_finite_def_TCC3-1 nil 3883989241
   ("" (skeep)
    (("" (typepred "f2")
      (("" (rewrite "nzfinite?_def") (("" (flatten) nil nil)) nil))
      nil))
    nil)
   ((nzfinite? const-decl "bool" ieee754_semantics nil)
    (datum nonempty-type-decl nil ieee754_data nil)
    (emax formal-const-decl "ieee754_maxExp(b, p)" ieee754_div nil)
    (ieee754_maxExp nonempty-type-eq-decl nil ieee754_format_parameters
     nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (p formal-const-decl "ieee754_precision(b)" ieee754_div nil)
    (ieee754_precision nonempty-type-eq-decl nil
     ieee754_format_parameters nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (b formal-const-decl "ieee754_radix" ieee754_div nil)
    (ieee754_radix nonempty-type-eq-decl nil ieee754_format_parameters
     nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (posint nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (nzfinite?_def formula-decl nil ieee754_semantics nil))
   nil
   (div_finite_def subtype
    "ieee754_semantics[ieee754_div.b, ieee754_div.p, ieee754_div.emax].proj(ieee754_div.f2)"
    "nznum")))
 (div_finite_def 0
  (div_finite_def-1 nil 3883989246
   ("" (skeep)
    (("" (case "proj(f1) = 0")
      (("1" (lemma "only_zeros_proj_zero")
        (("1" (inst? -1)
          (("1" (replaces)
            (("1" (case "0 / proj(f2) = 0")
              (("1" (replaces)
                (("1" (prop)
                  (("1" (replaces)
                    (("1" (rewrite "div_correct__pZero_pfinite")
                      (("1" (rewrite "round_zero") nil nil)
                       ("2" (rewrite "div_correct__pZero_nfinite")
                        (("1" (rewrite "round_zero" :dir rl)
                          (("1" (expand "safe_proj")
                            (("1" (assert)
                              (("1"
                                (rewrite "proj_def_nZero")
                                (("1"
                                  (rewrite "proj_def_pZero")
                                  nil
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (hide 3)
                          (("2" (rewrite "nfinite?_def")
                            (("2" (rewrite "pfinite?_def")
                              (("2"
                                (typepred "f2")
                                (("2"
                                  (rewrite "nzfinite?_def")
                                  (("2"
                                    (flatten)
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (replaces)
                    (("2" (rewrite "div_correct__nZero_pfinite")
                      (("1" (rewrite "round_zero" :dir rl)
                        (("1" (expand "safe_proj")
                          (("1" (assert)
                            (("1" (rewrite "proj_def_nZero")
                              (("1"
                                (rewrite "proj_def_pZero")
                                nil
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (rewrite "div_correct__nZero_nfinite")
                        (("1" (rewrite "round_zero") nil nil)
                         ("2" (hide 3)
                          (("2" (typepred "f2")
                            (("2" (rewrite "nzfinite?_def")
                              (("2"
                                (rewrite "pfinite?_def")
                                (("2"
                                  (rewrite "nfinite?_def")
                                  (("2"
                                    (flatten)
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (assert) nil nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (rewrite "div_correct__finite")
        (("2" (hide 3) (("2" (rewrite "nzfinite?_def") nil nil)) nil))
        nil))
      nil))
    nil)
   ((proj const-decl "er_real" ieee754_semantics nil)
    (er_real nonempty-type-eq-decl nil ieee754_domain nil)
    (exactly_representable? const-decl "bool" ieee754_domain nil)
    (finite? const-decl "bool" ieee754_data nil)
    (datum nonempty-type-decl nil ieee754_data nil)
    (emax formal-const-decl "ieee754_maxExp(b, p)" ieee754_div nil)
    (ieee754_maxExp nonempty-type-eq-decl nil ieee754_format_parameters
     nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (p formal-const-decl "ieee754_precision(b)" ieee754_div nil)
    (ieee754_precision nonempty-type-eq-decl nil
     ieee754_format_parameters nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (b formal-const-decl "ieee754_radix" ieee754_div nil)
    (ieee754_radix nonempty-type-eq-decl nil ieee754_format_parameters
     nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (posint nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (nzfinite? const-decl "bool" ieee754_semantics nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/= const-decl "boolean" notequal nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (pfinite? const-decl "bool" ieee754_semantics nil)
    (div_correct__pZero_pfinite formula-decl nil ieee754_div nil)
    (round_zero formula-decl nil ieee754_semantics nil)
    (pfinite?_def formula-decl nil ieee754_semantics nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nzfinite?_def formula-decl nil ieee754_semantics nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nfinite?_def formula-decl nil ieee754_semantics nil)
    (nzero_finite formula-decl nil ieee754_data nil)
    (pzero_finite formula-decl nil ieee754_data nil)
    (proj_def_pZero formula-decl nil ieee754_semantics nil)
    (proj_def_nZero formula-decl nil ieee754_semantics nil)
    (safe_proj const-decl "real" ieee754_semantics nil)
    (div_correct__pZero_nfinite formula-decl nil ieee754_div nil)
    (nfinite? const-decl "bool" ieee754_semantics nil)
    (div_correct__nZero_pfinite formula-decl nil ieee754_div nil)
    (div_correct__nZero_nfinite formula-decl nil ieee754_div nil)
    (TRUE const-decl "bool" booleans nil)
    (only_zeros_proj_zero formula-decl nil ieee754_semantics nil)
    (div_correct__finite formula-decl nil ieee754_div nil))
   nil))
 (div_finites_is_finite 0
  (div_finites_is_finite-1 nil 3883989272
   ("" (skeep)
    (("" (case "NaN?(f1) OR NaN?(f2)")
      (("1" (lemma "div_correct__nan")
        (("1" (inst?)
          (("1" (replaces) (("1" (rewrite "nan_not_finite") nil nil))
            nil))
          nil))
        nil)
       ("2" (flatten)
        (("2" (assert)
          (("2" (split)
            (("1" (rewrite "pInf_nInf_Nan_finite" :dir rl)
              (("1" (case "finite?(f2)")
                (("1" (prop)
                  (("1" (replaces)
                    (("1" (rewrite "div_correct__pInf_pfinite")
                      (("1" (rewrite "pinf_not_finite") nil nil)
                       ("2" (rewrite "div_correct__pInf_nfinite")
                        (("1" (rewrite "ninf_not_finite") nil nil)
                         ("2" (case "proj(f2) = 0")
                          (("1" (lemma "only_zeros_proj_zero")
                            (("1" (inst? -1)
                              (("1"
                                (replaces)
                                (("1"
                                  (prop)
                                  (("1"
                                    (replaces)
                                    (("1"
                                      (rewrite
                                       "div_correct__pInf_pZero")
                                      (("1"
                                        (rewrite "pinf_not_finite")
                                        nil
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (replaces)
                                    (("2"
                                      (rewrite
                                       "div_correct__pInf_nZero")
                                      (("2"
                                        (rewrite "ninf_not_finite")
                                        nil
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide -2)
                            (("2" (rewrite "pfinite?_def")
                              (("2"
                                (rewrite "nfinite?_def")
                                (("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (replaces)
                    (("2" (rewrite "div_correct__nInf_pfinite")
                      (("1" (rewrite "ninf_not_finite") nil nil)
                       ("2" (rewrite "div_correct__nInf_nfinite")
                        (("1" (rewrite "pinf_not_finite") nil nil)
                         ("2" (case "proj(f2) = 0")
                          (("1" (lemma "only_zeros_proj_zero")
                            (("1" (inst? -1)
                              (("1"
                                (replaces)
                                (("1"
                                  (prop)
                                  (("1"
                                    (replaces)
                                    (("1"
                                      (rewrite
                                       "div_correct__nInf_pZero")
                                      (("1"
                                        (rewrite "ninf_not_finite")
                                        nil
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (replaces)
                                    (("2"
                                      (rewrite
                                       "div_correct__nInf_nZero")
                                      (("2"
                                        (rewrite "pinf_not_finite")
                                        nil
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide -2)
                            (("2" (rewrite "pfinite?_def")
                              (("2"
                                (rewrite "nfinite?_def")
                                (("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (rewrite "pInf_nInf_Nan_finite" :dir rl)
                  (("2" (prop)
                    (("1" (replaces)
                      (("1" (lemma "div_correct__pInf_pInf")
                        (("1" (rewrite "nan_not_finite") nil nil))
                        nil))
                      nil)
                     ("2" (replaces)
                      (("2" (lemma "div_correct__nInf_pInf")
                        (("2" (rewrite "nan_not_finite") nil nil))
                        nil))
                      nil)
                     ("3" (replaces)
                      (("3" (lemma "div_correct__pInf_nInf")
                        (("3" (rewrite "nan_not_finite") nil nil))
                        nil))
                      nil)
                     ("4" (replaces)
                      (("4" (lemma "div_correct__nInf_nInf")
                        (("4" (rewrite "nan_not_finite") nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (lemma "only_zeros_proj_zero")
              (("2" (inst? -1)
                (("1" (prop)
                  (("1" (replaces)
                    (("1" (rewrite "div_correct__pfinite_pZero")
                      (("1" (rewrite "pinf_not_finite") nil nil)
                       ("2" (rewrite "div_correct__nfinite_pZero")
                        (("1" (rewrite "ninf_not_finite") nil nil)
                         ("2" (case "proj(f1) = 0")
                          (("1" (lemma "only_zeros_proj_zero")
                            (("1" (inst? -1)
                              (("1"
                                (replaces)
                                (("1"
                                  (prop)
                                  (("1"
                                    (lemma "div_correct__pZero_pZero")
                                    (("1"
                                      (rewrite "nan_not_finite")
                                      nil
                                      nil))
                                    nil)
                                   ("2"
                                    (lemma "div_correct__nZero_pZero")
                                    (("2"
                                      (rewrite "nan_not_finite")
                                      nil
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (case "finite?(f1)")
                            (("1" (hide -2)
                              (("1"
                                (rewrite "pfinite?_def")
                                (("1"
                                  (rewrite "nfinite?_def")
                                  (("1" (assert) nil nil))
                                  nil))
                                nil))
                              nil)
                             ("2"
                              (rewrite "pInf_nInf_Nan_finite" :dir rl)
                              (("2"
                                (prop)
                                (("1"
                                  (replaces)
                                  (("1"
                                    (rewrite "div_correct__pInf_pZero")
                                    (("1"
                                      (rewrite "pinf_not_finite")
                                      nil
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (replaces)
                                  (("2"
                                    (rewrite "div_correct__nInf_pZero")
                                    (("2"
                                      (rewrite "ninf_not_finite")
                                      nil
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("3" (case "proj(f1) = 0")
                            (("1" (lemma "only_zeros_proj_zero")
                              (("1"
                                (inst? -1)
                                (("1"
                                  (replaces)
                                  (("1"
                                    (prop)
                                    (("1"
                                      (replaces)
                                      (("1"
                                        (lemma
                                         "div_correct__pZero_pZero")
                                        (("1"
                                          (rewrite "nan_not_finite" -)
                                          nil
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (replaces)
                                      (("2"
                                        (lemma
                                         "div_correct__nZero_pZero")
                                        (("2"
                                          (rewrite "nan_not_finite" -)
                                          nil
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (case "f1 = pInf OR f1 = nInf")
                              (("1"
                                (split)
                                (("1"
                                  (replaces)
                                  (("1"
                                    (rewrite "div_correct__pInf_pZero")
                                    nil
                                    nil))
                                  nil)
                                 ("2"
                                  (replaces)
                                  (("2"
                                    (rewrite "div_correct__nInf_pZero")
                                    nil
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (flatten)
                                (("2"
                                  (rewrite "nfinite?_def")
                                  (("2"
                                    (rewrite "pfinite?_def")
                                    (("2"
                                      (assert)
                                      (("2"
                                        (rewrite
                                         "pInf_nInf_Nan_finite"
                                         :dir
                                         rl)
                                        nil
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("3"
                              (rewrite "pInf_nInf_Nan_finite" :dir rl)
                              (("3"
                                (hide 2)
                                (("3"
                                  (prop)
                                  (("1"
                                    (replaces)
                                    (("1"
                                      (rewrite
                                       "div_correct__pInf_pZero")
                                      (("1"
                                        (rewrite "pinf_not_finite" -)
                                        nil
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (replaces)
                                    (("2"
                                      (rewrite
                                       "div_correct__nInf_pZero")
                                      (("2"
                                        (rewrite "ninf_not_finite" -)
                                        nil
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (replaces)
                    (("2" (case "finite?(f1)")
                      (("1" (rewrite "div_correct__pfinite_nZero")
                        (("1" (rewrite "ninf_not_finite") nil nil)
                         ("2" (rewrite "div_correct__nfinite_nZero")
                          (("1" (rewrite "pinf_not_finite") nil nil)
                           ("2" (case "proj(f1) = 0")
                            (("1" (lemma "only_zeros_proj_zero")
                              (("1"
                                (inst? -1)
                                (("1"
                                  (replaces)
                                  (("1"
                                    (prop)
                                    (("1"
                                      (replaces)
                                      (("1"
                                        (hide -1)
                                        (("1"
                                          (lemma
                                           "div_correct__pZero_nZero")
                                          (("1"
                                            (rewrite "nan_not_finite")
                                            nil
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (replaces)
                                      (("2"
                                        (hide -1)
                                        (("2"
                                          (lemma
                                           "div_correct__nZero_nZero")
                                          (("2"
                                            (rewrite "nan_not_finite")
                                            nil
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide -2)
                              (("2"
                                (rewrite "pfinite?_def")
                                (("2"
                                  (rewrite "nfinite?_def")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (rewrite "pInf_nInf_Nan_finite" :dir rl)
                        (("2" (prop)
                          (("1" (replaces)
                            (("1" (rewrite "div_correct__pInf_nZero")
                              (("1"
                                (rewrite "ninf_not_finite")
                                nil
                                nil))
                              nil))
                            nil)
                           ("2" (replaces)
                            (("2" (rewrite "div_correct__nInf_nZero")
                              (("2"
                                (rewrite "pinf_not_finite")
                                nil
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("3" (rewrite "safe_projection_er_real_proj") nil
                    nil))
                  nil)
                 ("2" (lemma "is_finite_safe_projection_er_real")
                  (("2" (inst -1 "f2" "0") (("2" (assert) nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((NaN? const-decl "PRED[datum]" ieee754_data nil)
    (PRED type-eq-decl nil defined_types nil)
    (datum nonempty-type-decl nil ieee754_data nil)
    (emax formal-const-decl "ieee754_maxExp(b, p)" ieee754_div nil)
    (ieee754_maxExp nonempty-type-eq-decl nil ieee754_format_parameters
     nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (p formal-const-decl "ieee754_precision(b)" ieee754_div nil)
    (ieee754_precision nonempty-type-eq-decl nil
     ieee754_format_parameters nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (b formal-const-decl "ieee754_radix" ieee754_div nil)
    (ieee754_radix nonempty-type-eq-decl nil ieee754_format_parameters
     nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (posint nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (nan_not_finite formula-decl nil ieee754_data nil)
    (div_ieee754 const-decl "[datum, datum -> datum]" ieee754_div nil)
    (TRUE const-decl "bool" booleans nil)
    (div_correct__nan formula-decl nil ieee754_div nil)
    (is_finite_safe_projection_er_real formula-decl nil
     ieee754_semantics nil)
    (div_correct__pfinite_pZero formula-decl nil ieee754_div nil)
    (pZero const-decl "datum" ieee754_data nil)
    (div_correct__pZero_pZero formula-decl nil ieee754_div nil)
    (div_correct__nZero_pZero formula-decl nil ieee754_div nil)
    (nZero const-decl "datum" ieee754_data nil)
    (div_correct__nfinite_pZero formula-decl nil ieee754_div nil)
    (div_correct__nfinite_nZero formula-decl nil ieee754_div nil)
    (div_correct__nZero_nZero formula-decl nil ieee754_div nil)
    (div_correct__pZero_nZero formula-decl nil ieee754_div nil)
    (div_correct__pfinite_nZero formula-decl nil ieee754_div nil)
    (safe_projection_er_real_proj formula-decl nil ieee754_semantics
     nil)
    (zero_is_er formula-decl nil ieee754_domain nil)
    (f2 skolem-const-decl "datum[b, p, emax]" ieee754_div nil)
    (pInf_nInf_Nan_finite formula-decl nil ieee754_data nil)
    (div_correct__nInf_nInf formula-decl nil ieee754_div nil)
    (div_correct__pInf_nInf formula-decl nil ieee754_div nil)
    (nInf const-decl "datum" ieee754_data nil)
    (div_correct__nInf_pInf formula-decl nil ieee754_div nil)
    (pInf const-decl "datum" ieee754_data nil)
    (div_correct__pInf_pInf formula-decl nil ieee754_div nil)
    (pfinite? const-decl "bool" ieee754_semantics nil)
    (div_correct__pInf_pfinite formula-decl nil ieee754_div nil)
    (pinf_not_finite formula-decl nil ieee754_data nil)
    (exactly_representable? const-decl "bool" ieee754_domain nil)
    (er_real nonempty-type-eq-decl nil ieee754_domain nil)
    (proj const-decl "er_real" ieee754_semantics nil)
    (div_correct__pInf_pZero formula-decl nil ieee754_div nil)
    (div_correct__pInf_nZero formula-decl nil ieee754_div nil)
    (only_zeros_proj_zero formula-decl nil ieee754_semantics nil)
    (pfinite?_def formula-decl nil ieee754_semantics nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nfinite?_def formula-decl nil ieee754_semantics nil)
    (ninf_not_finite formula-decl nil ieee754_data nil)
    (div_correct__pInf_nfinite formula-decl nil ieee754_div nil)
    (nfinite? const-decl "bool" ieee754_semantics nil)
    (div_correct__nInf_pfinite formula-decl nil ieee754_div nil)
    (div_correct__nInf_pZero formula-decl nil ieee754_div nil)
    (div_correct__nInf_nZero formula-decl nil ieee754_div nil)
    (div_correct__nInf_nfinite formula-decl nil ieee754_div nil)
    (finite? const-decl "bool" ieee754_data nil))
   nil))
 (finite?_projs_finite?_div 0
  (finite?_projs_finite?_div-1 nil 3883989299
   ("" (skeep)
    (("" (rewrite "div_correct__finite")
      (("" (case "f1 = pZero or f1 = nZero")
        (("1" (hide 1)
          (("1" (prop)
            (("1" (replaces)
              (("1" (rewrite "div_correct__pZero_pfinite")
                (("1" (assert) nil nil)
                 ("2" (rewrite "div_correct__pZero_nfinite")
                  (("1" (assert) nil nil)
                   ("2" (hide -1 3)
                    (("2" (rewrite "nfinite?_def")
                      (("2" (rewrite "pfinite?_def")
                        (("2" (typepred "f2")
                          (("2" (rewrite "nzfinite?_def")
                            (("2" (flatten) (("2" (assert) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (replaces)
              (("2" (rewrite "div_correct__nZero_pfinite")
                (("1" (assert) nil nil)
                 ("2" (rewrite "div_correct__nZero_nfinite")
                  (("1" (assert) nil nil)
                   ("2" (hide -1 3)
                    (("2" (rewrite "nfinite?_def")
                      (("2" (rewrite "pfinite?_def")
                        (("2" (typepred "f2")
                          (("2" (rewrite "nzfinite?_def")
                            (("2" (flatten) (("2" (assert) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (rewrite "only_zeros_proj_zero")
          (("2" (hide -1 4) (("2" (rewrite "nzfinite?_def") nil nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((div_correct__finite formula-decl nil ieee754_div nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posint nonempty-type-eq-decl nil integers nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (ieee754_radix nonempty-type-eq-decl nil ieee754_format_parameters
     nil)
    (b formal-const-decl "ieee754_radix" ieee754_div nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (ieee754_precision nonempty-type-eq-decl nil
     ieee754_format_parameters nil)
    (p formal-const-decl "ieee754_precision(b)" ieee754_div nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (ieee754_maxExp nonempty-type-eq-decl nil ieee754_format_parameters
     nil)
    (emax formal-const-decl "ieee754_maxExp(b, p)" ieee754_div nil)
    (datum nonempty-type-decl nil ieee754_data nil)
    (finite? const-decl "bool" ieee754_data nil)
    (nzfinite? const-decl "bool" ieee754_semantics nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (only_zeros_proj_zero formula-decl nil ieee754_semantics nil)
    (div_correct__nZero_nfinite formula-decl nil ieee754_div nil)
    (div_correct__nZero_pfinite formula-decl nil ieee754_div nil)
    (TRUE const-decl "bool" booleans nil)
    (nfinite? const-decl "bool" ieee754_semantics nil)
    (div_correct__pZero_nfinite formula-decl nil ieee754_div nil)
    (nzero_finite formula-decl nil ieee754_data nil)
    (nfinite?_def formula-decl nil ieee754_semantics nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (nzfinite?_def formula-decl nil ieee754_semantics nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (pfinite?_def formula-decl nil ieee754_semantics nil)
    (pzero_finite formula-decl nil ieee754_data nil)
    (div_correct__pZero_pfinite formula-decl nil ieee754_div nil)
    (pfinite? const-decl "bool" ieee754_semantics nil)
    (nZero const-decl "datum" ieee754_data nil)
    (pZero const-decl "datum" ieee754_data nil))
   nil)))

