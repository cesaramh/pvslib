(replace_positions
 (IMP_substitution_TCC1 0
  (IMP_substitution_TCC1-1 nil 3455272043
   ("" (lemma "var_countable") (("" (propax) nil nil)) nil) nil nil
   (IMP_substitution assuming
    "substitution[replace_positions.variable, replace_positions.symbol, replace_positions.arity].substitution"
    "var_countable: ASSUMPTION countability[term_adt[substitution.variable, substitution.symbol, substitution.arity].term].is_countably_infinite(variables_term[substitution.variable, substitution.symbol, substitution.arity].V)")))
 (replace_pos_TCC1 0
  (replace_pos_TCC1-1 nil 3455272043 ("" (subtype-tcc) nil nil)
   ((term type-decl nil term_adt nil)
    (position type-eq-decl nil positions nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (SPP? const-decl "bool" positions nil)
    (SPP type-eq-decl nil positions nil)
    (finseq_appl const-decl "[below[length(fs)] -> T]" finite_sequences
     nil)
    (SP? const-decl "bool" positions nil))
   nil (replace_pos subtype "0" "below[length(fssp)]")))
 (replace_pos_TCC2 0
  (replace_pos_TCC2-1 nil 3455272043 ("" (subtype-tcc) nil nil)
   ((term type-decl nil term_adt nil)
    (position type-eq-decl nil positions nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (SPP? const-decl "bool" positions nil)
    (SPP type-eq-decl nil positions nil)
    (SP? const-decl "bool" positions nil)
    (finseq_appl const-decl "[below[length(fs)] -> T]" finite_sequences
     nil))
   nil
   (replace_pos subtype
    "finite_sequences[position[variable, symbol, arity]].finseq_appl(replace_positions.fssp)(0)"
    "positions[replace_positions.variable, replace_positions.symbol, replace_positions.arity].positions?(replace_positions.s)")))
 (replace_pos_TCC3 0
  (replace_pos_TCC3-1 nil 3455272043
   ("" (skosimp*)
    (("" (typepred "fssp!1")
      (("" (expand "SPP?")
        (("" (flatten)
          (("" (split)
            (("1" (rewrite "rest_of_PP_is_PP") nil nil)
             ("2" (expand "SP?")
              (("2" (expand "PP?")
                (("2" (prop)
                  (("1" (grind) nil nil)
                   ("2" (skosimp*)
                    (("2" (lemma "fspos.rest_pos")
                      (("2" (inst?)
                        (("2" (assert)
                          (("2" (expand "finseq_appl")
                            (("2" (inst -1 "i!1")
                              (("1"
                                (replace -1 2 rl)
                                (("1"
                                  (hide -1)
                                  (("1"
                                    (copy -2)
                                    (("1"
                                      (inst -1 "0")
                                      (("1"
                                        (inst -3 "1 + i!1")
                                        (("1"
                                          (inst -2 "0" "1 + i!1")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (lemma
                                               "replace_preserv_parallel_pos")
                                              (("1"
                                                (inst
                                                 -1
                                                 "fssp!1`seq(0)"
                                                 "fssp!1`seq(1 + i!1)"
                                                 "s!1"
                                                 "t!1")
                                                (("1"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (hide-all-but 1)
                                (("2"
                                  (typepred "i!1")
                                  (("2" (grind) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((SPP type-eq-decl nil positions nil)
    (SPP? const-decl "bool" positions nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (position type-eq-decl nil positions nil)
    (term type-decl nil term_adt nil)
    (SP? const-decl "bool" positions nil)
    (rest const-decl "finseq" seq_extras structures)
    (^ const-decl "finseq" finite_sequences nil)
    (empty_seq const-decl "finseq" finite_sequences nil)
    (finseq_appl const-decl "[below[length(fs)] -> T]" finite_sequences
     nil)
    (rest_pos formula-decl nil seq_extras structures)
    (replace_preserv_parallel_pos formula-decl nil replacement nil)
    (rest_of_PP_is_PP formula-decl nil positions nil)
    (PP? const-decl "bool" positions nil)
    (PP type-eq-decl nil positions nil))
   nil
   (replace_pos subtype
    "seq_extras[position[variable, symbol, arity]].rest(replace_positions.fssp)"
    "positions[replace_positions.variable, replace_positions.symbol, replace_positions.arity].SPP(replacement[replace_positions.variable, replace_positions.symbol, replace_positions.arity].replaceTerm(replace_positions.s, replace_positions.t, finite_sequences[position[variable, symbol, arity]].finseq_appl(replace_positions.fssp)(0)))")))
 (replace_pos_TCC4 0
  (replace_pos_TCC4-1 nil 3455272043 ("" (termination-tcc) nil nil)
   ((term type-decl nil term_adt nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (SPP? const-decl "bool" positions nil)
    (SPP type-eq-decl nil positions nil)
    (finseq_appl const-decl "[below[length(fs)] -> T]" finite_sequences
     nil)
    (O const-decl "finseq" finite_sequences nil)
    (<= const-decl "bool" positions nil)
    (parallel const-decl "bool" positions nil)
    (PP? const-decl "bool" positions nil)
    (SP? const-decl "bool" positions nil)
    (empty_seq const-decl "finseq" finite_sequences nil)
    (^ const-decl "finseq" finite_sequences nil)
    (position type-eq-decl nil positions nil)
    (rest const-decl "finseq" seq_extras structures))
   nil
   (replace_pos termination
    "replace_positions.replace_pos(replacement[replace_positions.variable, replace_positions.symbol, replace_positions.arity].replaceTerm(replace_positions.s, replace_positions.t, finite_sequences[position[variable, symbol, arity]].finseq_appl(replace_positions.fssp)(0)), replace_positions.t, seq_extras[position[variable, symbol, arity]].rest(replace_positions.fssp))"
    "nil")))
 (replace_pos_is_stable_TCC1 0
  (replace_pos_is_stable_TCC1-1 nil 3455272043
   ("" (skosimp*)
    (("" (typepred "fss!1")
      (("" (expand "SPP?")
        (("" (flatten)
          (("" (assert)
            (("" (hide -1)
              (("" (expand "SP?")
                (("" (skosimp*)
                  (("" (inst?)
                    (("" (rewrite "ext_preserv_pos") nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((SPP type-eq-decl nil positions nil)
    (SPP? const-decl "bool" positions nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (position type-eq-decl nil positions nil)
    (term type-decl nil term_adt nil)
    (ext_preserv_pos formula-decl nil substitution nil)
    (finseq_appl const-decl "[below[length(fs)] -> T]" finite_sequences
     nil)
    (set type-eq-decl nil sets nil)
    (V const-decl "set[term]" variables_term nil)
    (Sub? const-decl "bool" substitution nil)
    (Sub type-eq-decl nil substitution nil)
    (SP? const-decl "bool" positions nil))
   nil
   (replace_pos_is_stable subtype "replace_positions.fss"
    "positions[replace_positions.variable, replace_positions.symbol, replace_positions.arity].SPP(substitution[replace_positions.variable, replace_positions.symbol, replace_positions.arity].ext(replace_positions.sig)(replace_positions.s))")))
 (replace_pos_is_stable 0
  (replace_pos_is_stable-1 nil 3455272189
   ("" (measure-induct+ "length(fss)" ("s" "fss"))
    (("1" (skosimp*)
      (("1" (case "length(x!2) = 0")
        (("1" (hide -2)
          (("1" (expand "replace_pos") (("1" (assert) nil nil)) nil))
          nil)
         ("2" (expand "replace_pos" 2 1)
          (("2" (assert)
            (("2" (inst -1 "replaceTerm(x!1, t!1, x!2(0))" "rest(x!2)")
              (("2" (inst -1 "t!1" "sig!1")
                (("2" (rewrite "length_rest")
                  (("2" (replaces -1)
                    (("2" (rewrite "ext_replace_ext")
                      (("1" (expand "replace_pos" 2 2)
                        (("1" (propax) nil nil)) nil)
                       ("2" (hide (2 3))
                        (("2" (typepred "x!2")
                          (("2" (expand "SPP?")
                            (("2" (flatten)
                              (("2"
                                (hide -1)
                                (("2"
                                  (expand "SP?")
                                  (("2" (inst?) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (hide-all-but 1)
      (("2" (typepred "y!2")
        (("2" (expand "SPP?")
          (("2" (flatten)
            (("2" (assert)
              (("2" (hide -1)
                (("2" (expand "SP?")
                  (("2" (skosimp*)
                    (("2" (inst?)
                      (("2" (rewrite "ext_preserv_pos") nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("3" (hide (-1 2))
      (("3" (skosimp*)
        (("3" (rewrite "replace_pos_is_stable_TCC1") nil nil)) nil))
      nil)
     ("4" (hide (-1 2))
      (("4" (skosimp*)
        (("4" (rewrite "replace_pos_is_stable_TCC1") nil nil)) nil))
      nil)
     ("5" (hide-all-but 1)
      (("5" (rewrite "replace_pos_is_stable_TCC1") nil nil)) nil)
     ("6" (hide (-1 2))
      (("6" (skosimp*)
        (("6" (rewrite "replace_pos_is_stable_TCC1") nil nil)) nil))
      nil)
     ("7" (hide 2)
      (("7" (rewrite "replace_pos_is_stable_TCC1") nil nil)) nil))
    nil)
   ((ext_preserv_pos formula-decl nil substitution nil)
    (rest const-decl "finseq" seq_extras structures)
    (finseq_appl const-decl "[below[length(fs)] -> T]" finite_sequences
     nil)
    (replaceTerm def-decl "term" replacement nil)
    (positions? type-eq-decl nil positions nil)
    (positionsOF def-decl "positions" positions nil)
    (positions type-eq-decl nil positions nil)
    (length_rest formula-decl nil seq_extras structures)
    (ext_replace_ext formula-decl nil substitution nil)
    (SP? const-decl "bool" positions nil)
    (set type-eq-decl nil sets nil)
    (V const-decl "set[term]" variables_term nil)
    (Sub? const-decl "bool" substitution nil)
    (Sub type-eq-decl nil substitution nil)
    (ext def-decl "term" substitution nil)
    (SPP type-eq-decl nil positions nil)
    (SPP? const-decl "bool" positions nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (position type-eq-decl nil positions nil)
    (term type-decl nil term_adt nil)
    (well_founded? const-decl "bool" orders nil))
   shostak))
 (preserv_first_position_TCC1 0
  (preserv_first_position_TCC1-1 nil 3455272043
   ("" (skolem-typepred)
    (("" (skosimp*)
      (("" (expand "SPP?")
        (("" (flatten)
          (("" (split)
            (("1" (rewrite "add_first_parallel_pos_to_PP_is_PP") nil
              nil)
             ("2" (rewrite "add_first_parallel_pos_to_SP_is_SP") nil
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((add_first_parallel_pos_to_SP_is_SP formula-decl nil positions nil)
    (SP? const-decl "bool" positions nil)
    (SP type-eq-decl nil positions nil)
    (add_first_parallel_pos_to_PP_is_PP formula-decl nil positions nil)
    (PP? const-decl "bool" positions nil)
    (PP type-eq-decl nil positions nil)
    (positions? type-eq-decl nil positions nil)
    (positionsOF def-decl "positions" positions nil)
    (positions type-eq-decl nil positions nil)
    (SPP type-eq-decl nil positions nil)
    (SPP? const-decl "bool" positions nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (position type-eq-decl nil positions nil)
    (term type-decl nil term_adt nil))
   nil
   (preserv_first_position subtype
    "seq_extras[position[variable, symbol, arity]].add_first(replace_positions.q, replace_positions.fss)"
    "positions[replace_positions.variable, replace_positions.symbol, replace_positions.arity].SPP(replace_positions.s)")))
 (preserv_first_position 0
  (preserv_first_position-2 "" 3804379949
   ("" (measure-induct+ "length(fss)" ("s" "fss"))
    (("1" (skosimp*)
      (("1" (expand "replace_pos" 1)
        (("1" (prop)
          (("1" (hide-all-but -1)
            (("1" (expand* "add_first" "insert?")
              (("1" (assert) nil nil)) nil))
            nil)
           ("2" (lemma "fspos.rest_add_first")
            (("2" (inst -1 "x!2" "q!1")
              (("2" (replaces -1)
                (("2" (lemma "fspos.nth_add_first")
                  (("2" (inst -1 "x!2" "q!1" "0")
                    (("1" (replace -1)
                      (("1" (case "length(x!2) = 0")
                        (("1" (hide -3)
                          (("1" (expand "replace_pos")
                            (("1" (prop)
                              (("1"
                                (hide-all-but 1)
                                (("1"
                                  (lemma "replace_preserv_pos")
                                  (("1"
                                    (inst -1 "q!1" "x!1" "t!1")
                                    (("1" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (expand "replace_pos" 3)
                          (("2" (prop)
                            (("2" (lemma "replace_commutativity")
                              (("2"
                                (inst
                                 -1
                                 "q!1"
                                 "x!2(0)"
                                 "t!1"
                                 "x!1"
                                 "t!1")
                                (("2"
                                  (typepred "q!1" "x!2")
                                  (("2"
                                    (expand "SPP?")
                                    (("2"
                                      (flatten)
                                      (("2"
                                        (copy -3)
                                        (("2"
                                          (expand "SP?" -4)
                                          (("2"
                                            (inst -4 "0")
                                            (("2"
                                              (copy -8)
                                              (("2"
                                                (inst -9 "0")
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (rewrite
                                                     "parallel_comm")
                                                    (("2"
                                                      (replace -6 2)
                                                      (("2"
                                                        (case
                                                         "length(rest(x!2)) = 0")
                                                        (("1"
                                                          (hide-all-but
                                                           (-1
                                                            -3
                                                            -4
                                                            -10
                                                            2
                                                            3))
                                                          (("1"
                                                            (expand
                                                             "replace_pos")
                                                            (("1"
                                                              (prop)
                                                              (("1"
                                                                (lemma
                                                                 "replace_preserv_parallel_pos")
                                                                (("1"
                                                                  (inst
                                                                   -1
                                                                   "x!2(0)"
                                                                   "q!1"
                                                                   "x!1"
                                                                   "t!1")
                                                                  (("1"
                                                                    (expand
                                                                     "SP?")
                                                                    (("1"
                                                                      (inst
                                                                       -4
                                                                       "0")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (lemma
                                                                           "replace_preserv_pos")
                                                                          (("1"
                                                                            (inst
                                                                             -1
                                                                             "q!1"
                                                                             "replaceTerm(x!1, t!1, x!2(0))"
                                                                             "t!1")
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (inst
                                                           -8
                                                           "replaceTerm(x!1, t!1, x!2(0))"
                                                           "rest(x!2)")
                                                          (("1"
                                                            (inst
                                                             -8
                                                             "t!1"
                                                             "q!1")
                                                            (("1"
                                                              (prop)
                                                              (("1"
                                                                (expand
                                                                 "finseq_appl")
                                                                (("1"
                                                                  (expand
                                                                   "replace_pos"
                                                                   -1)
                                                                  (("1"
                                                                    (prop)
                                                                    (("1"
                                                                      (hide-all-but
                                                                       -1)
                                                                      (("1"
                                                                        (grind)
                                                                        nil
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (lemma
                                                                       "fspos.nth_add_first")
                                                                      (("2"
                                                                        (inst
                                                                         -1
                                                                         "rest(x!2)"
                                                                         "q!1"
                                                                         "0")
                                                                        (("1"
                                                                          (replaces
                                                                           -1)
                                                                          (("1"
                                                                            (rewrite
                                                                             "rest_add_first")
                                                                            nil
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide-all-but
                                                                           1)
                                                                          (("2"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 (-1
                                                                  1
                                                                  2
                                                                  3))
                                                                (("2"
                                                                  (skosimp*)
                                                                  (("2"
                                                                    (inst
                                                                     -1
                                                                     "i!1 + 1")
                                                                    (("1"
                                                                      (lemma
                                                                       "fspos.rest_pos")
                                                                      (("1"
                                                                        (expand
                                                                         "finseq_appl")
                                                                        (("1"
                                                                          (inst
                                                                           -1
                                                                           "x!2")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (inst
                                                                               -1
                                                                               "i!1")
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil)
                                                                               ("2"
                                                                                (typepred
                                                                                 "i!1")
                                                                                (("2"
                                                                                  (hide
                                                                                   2)
                                                                                  (("2"
                                                                                    (grind)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (typepred
                                                                       "i!1")
                                                                      (("2"
                                                                        (hide
                                                                         2)
                                                                        (("2"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("3"
                                                                (hide-all-but
                                                                 (1 3))
                                                                (("3"
                                                                  (rewrite
                                                                   "length_rest")
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide-all-but
                                                             (-2
                                                              -4
                                                              1
                                                              2
                                                              3))
                                                            (("2"
                                                              (expand
                                                               "SPP?")
                                                              (("2"
                                                                (split)
                                                                (("1"
                                                                  (rewrite
                                                                   "rest_of_PP_is_PP")
                                                                  nil
                                                                  nil)
                                                                 ("2"
                                                                  (copy
                                                                   -1)
                                                                  (("2"
                                                                    (expand
                                                                     "SP?")
                                                                    (("2"
                                                                      (skosimp*)
                                                                      (("2"
                                                                        (expand
                                                                         "finseq_appl")
                                                                        (("2"
                                                                          (inst
                                                                           -2
                                                                           "i!1 + 1")
                                                                          (("1"
                                                                            (lemma
                                                                             "fspos.rest_pos")
                                                                            (("1"
                                                                              (inst?)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (inst
                                                                                   -1
                                                                                   "i!1")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "PP?")
                                                                                    (("1"
                                                                                      (prop)
                                                                                      (("1"
                                                                                        (hide
                                                                                         (-2
                                                                                          -3
                                                                                          -4
                                                                                          1))
                                                                                        (("1"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (expand
                                                                                         "finseq_appl")
                                                                                        (("2"
                                                                                          (replace
                                                                                           -2
                                                                                           2
                                                                                           rl)
                                                                                          (("2"
                                                                                            (inst
                                                                                             -1
                                                                                             "0"
                                                                                             "1 + i!1")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (lemma
                                                                                                 "replace_preserv_parallel_pos")
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -1
                                                                                                   "x!2`seq(0)"
                                                                                                   "x!2`seq(1 + i!1)"
                                                                                                   "x!1"
                                                                                                   "t!1")
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -4
                                                                                                     "0")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide
                                                                                     (-1
                                                                                      -2
                                                                                      2))
                                                                                    (("2"
                                                                                      (typepred
                                                                                       "i!1")
                                                                                      (("2"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("2"
                                                                              (typepred
                                                                               "i!1")
                                                                              (("2"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (assert) nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (hide-all-but (-2 1))
      (("2" (typepred "y!2")
        (("2" (expand "SPP?")
          (("2" (flatten)
            (("2" (split)
              (("1" (rewrite "add_first_parallel_pos_to_PP_is_PP") nil
                nil)
               ("2" (rewrite "add_first_parallel_pos_to_SP_is_SP") nil
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("3" (hide -1 2)
      (("3" (skosimp*)
        (("3" (typepred "y!2")
          (("3" (expand "SPP?")
            (("3" (flatten)
              (("3" (split)
                (("1" (rewrite "add_first_parallel_pos_to_PP_is_PP")
                  nil nil)
                 ("2" (rewrite "add_first_parallel_pos_to_SP_is_SP")
                  nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("4" (hide -1 2)
      (("4" (skosimp*)
        (("4" (typepred "x!1`2")
          (("4" (expand "SPP?")
            (("4" (flatten)
              (("4" (split)
                (("1" (rewrite "add_first_parallel_pos_to_PP_is_PP")
                  nil nil)
                 ("2" (rewrite "add_first_parallel_pos_to_SP_is_SP")
                  nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("5" (hide-all-but (-2 1))
      (("5" (typepred "y!1`2")
        (("5" (expand "SPP?")
          (("5" (flatten)
            (("5" (split)
              (("1" (rewrite "add_first_parallel_pos_to_PP_is_PP") nil
                nil)
               ("2" (rewrite "add_first_parallel_pos_to_SP_is_SP") nil
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("6" (hide -1 2)
      (("6" (skosimp*)
        (("6" (typepred "y!1`2")
          (("6" (expand "SPP?")
            (("6" (flatten)
              (("6" (split)
                (("1" (rewrite "add_first_parallel_pos_to_PP_is_PP")
                  nil nil)
                 ("2" (rewrite "add_first_parallel_pos_to_SP_is_SP")
                  nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("7" (hide 2)
      (("7" (typepred "fss!1")
        (("7" (expand "SPP?")
          (("7" (flatten)
            (("7" (split)
              (("1" (rewrite "add_first_parallel_pos_to_PP_is_PP") nil
                nil)
               ("2" (rewrite "add_first_parallel_pos_to_SP_is_SP") nil
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (preserv_first_position-1 nil 3455272317
   ("" (measure-induct+ "length(fss)" ("s" "fss"))
    (("1" (skosimp*)
      (("1" (expand "replace_pos" 1)
        (("1" (prop)
          (("1" (hide-all-but -1)
            (("1" (expand* "add_first" "insert?")
              (("1" (assert) nil nil)) nil))
            nil)
           ("2" (lemma "fspos.rest_add_first")
            (("2" (inst -1 "x!2" "q!1")
              (("2" (replaces -1)
                (("2" (lemma "fspos.nth_add_first")
                  (("2" (inst -1 "x!2" "q!1" "0")
                    (("1" (replace -1)
                      (("1" (case "length(x!2) = 0")
                        (("1" (hide -3)
                          (("1" (expand "replace_pos")
                            (("1" (prop)
                              (("1"
                                (hide-all-but 1)
                                (("1"
                                  (lemma "replace_preserv_pos")
                                  (("1"
                                    (inst -1 "q!1" "x!1" "t!1")
                                    (("1" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (expand "replace_pos" 3)
                          (("2" (prop)
                            (("2" (lemma "replace_commutativity")
                              (("2"
                                (inst
                                 -1
                                 "q!1"
                                 "x!2(0)"
                                 "t!1"
                                 "x!1"
                                 "t!1")
                                (("2"
                                  (typepred "q!1" "x!2")
                                  (("2"
                                    (expand "SPP?")
                                    (("2"
                                      (flatten)
                                      (("2"
                                        (copy -3)
                                        (("2"
                                          (expand "SP?" -4)
                                          (("2"
                                            (inst -4 "0")
                                            (("2"
                                              (copy -8)
                                              (("2"
                                                (inst -9 "0")
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (rewrite
                                                     "parallel_comm")
                                                    (("2"
                                                      (replace -6 2)
                                                      (("2"
                                                        (case
                                                         "length(rest(x!2)) = 0")
                                                        (("1"
                                                          (hide-all-but
                                                           (-1
                                                            -3
                                                            -4
                                                            -10
                                                            2
                                                            3))
                                                          (("1"
                                                            (expand
                                                             "replace_pos")
                                                            (("1"
                                                              (prop)
                                                              (("1"
                                                                (lemma
                                                                 "replace_preserv_parallel_pos")
                                                                (("1"
                                                                  (inst
                                                                   -1
                                                                   "x!2(0)"
                                                                   "q!1"
                                                                   "x!1"
                                                                   "t!1")
                                                                  (("1"
                                                                    (expand
                                                                     "SP?")
                                                                    (("1"
                                                                      (inst
                                                                       -4
                                                                       "0")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (lemma
                                                                           "replace_preserv_pos")
                                                                          (("1"
                                                                            (inst
                                                                             -1
                                                                             "q!1"
                                                                             "replaceTerm(x!1, t!1, x!2(0))"
                                                                             "t!1")
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (inst
                                                           -8
                                                           "replaceTerm(x!1, t!1, x!2(0))"
                                                           "rest(x!2)")
                                                          (("1"
                                                            (inst
                                                             -8
                                                             "t!1"
                                                             "q!1")
                                                            (("1"
                                                              (prop)
                                                              (("1"
                                                                (expand
                                                                 "finseq_appl")
                                                                (("1"
                                                                  (expand
                                                                   "replace_pos"
                                                                   -1)
                                                                  (("1"
                                                                    (prop)
                                                                    (("1"
                                                                      (hide-all-but
                                                                       -1)
                                                                      (("1"
                                                                        (grind)
                                                                        nil
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (lemma
                                                                       "fspos.nth_add_first")
                                                                      (("2"
                                                                        (inst
                                                                         -1
                                                                         "rest(x!2)"
                                                                         "q!1"
                                                                         "0")
                                                                        (("1"
                                                                          (replaces
                                                                           -1)
                                                                          (("1"
                                                                            (rewrite
                                                                             "rest_add_first")
                                                                            nil
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide-all-but
                                                                           1)
                                                                          (("2"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide-all-but
                                                                 (-1
                                                                  1
                                                                  2
                                                                  3))
                                                                (("2"
                                                                  (skosimp*)
                                                                  (("2"
                                                                    (inst
                                                                     -1
                                                                     "i!1 + 1")
                                                                    (("1"
                                                                      (lemma
                                                                       "fspos.rest_pos")
                                                                      (("1"
                                                                        (expand
                                                                         "finseq_appl")
                                                                        (("1"
                                                                          (inst
                                                                           -1
                                                                           "x!2")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (inst
                                                                               -1
                                                                               "i!1")
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil)
                                                                               ("2"
                                                                                (typepred
                                                                                 "i!1")
                                                                                (("2"
                                                                                  (hide
                                                                                   2)
                                                                                  (("2"
                                                                                    (grind)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (typepred
                                                                       "i!1")
                                                                      (("2"
                                                                        (hide
                                                                         2)
                                                                        (("2"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("3"
                                                                (hide-all-but
                                                                 (1 3))
                                                                (("3"
                                                                  (rewrite
                                                                   "length_rest")
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide-all-but
                                                             (-2
                                                              -4
                                                              1
                                                              2
                                                              3))
                                                            (("2"
                                                              (expand
                                                               "SPP?")
                                                              (("2"
                                                                (split)
                                                                (("1"
                                                                  (rewrite
                                                                   "rest_of_PP_is_PP")
                                                                  nil
                                                                  nil)
                                                                 ("2"
                                                                  (copy
                                                                   -1)
                                                                  (("2"
                                                                    (expand
                                                                     "SP?")
                                                                    (("2"
                                                                      (skosimp*)
                                                                      (("2"
                                                                        (expand
                                                                         "finseq_appl")
                                                                        (("2"
                                                                          (inst
                                                                           -2
                                                                           "i!1 + 1")
                                                                          (("1"
                                                                            (lemma
                                                                             "fspos.rest_pos")
                                                                            (("1"
                                                                              (inst?)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (inst
                                                                                   -1
                                                                                   "i!1")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "PP?")
                                                                                    (("1"
                                                                                      (prop)
                                                                                      (("1"
                                                                                        (hide
                                                                                         (-2
                                                                                          -3
                                                                                          -4
                                                                                          1))
                                                                                        (("1"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (expand
                                                                                         "finseq_appl")
                                                                                        (("2"
                                                                                          (replace
                                                                                           -2
                                                                                           2
                                                                                           rl)
                                                                                          (("2"
                                                                                            (inst
                                                                                             -1
                                                                                             "0"
                                                                                             "1 + i!1")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (lemma
                                                                                                 "replace_preserv_parallel_pos")
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -1
                                                                                                   "x!2`seq(0)"
                                                                                                   "x!2`seq(1 + i!1)"
                                                                                                   "x!1"
                                                                                                   "t!1")
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -4
                                                                                                     "0")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide
                                                                                     (-1
                                                                                      -2
                                                                                      2))
                                                                                    (("2"
                                                                                      (typepred
                                                                                       "i!1")
                                                                                      (("2"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("2"
                                                                              (typepred
                                                                               "i!1")
                                                                              (("2"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (assert) nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (hide-all-but (-1 1))
      (("2" (typepred "y!2")
        (("2" (expand "SPP?")
          (("2" (flatten)
            (("2" (split)
              (("1" (rewrite "add_first_parallel_pos_to_PP_is_PP") nil
                nil)
               ("2" (rewrite "add_first_parallel_pos_to_SP_is_SP") nil
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("3" (hide -1 2)
      (("3" (skosimp*)
        (("3" (typepred "y!2")
          (("3" (expand "SPP?")
            (("3" (flatten)
              (("3" (split)
                (("1" (rewrite "add_first_parallel_pos_to_PP_is_PP")
                  nil nil)
                 ("2" (rewrite "add_first_parallel_pos_to_SP_is_SP")
                  nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("4" (hide -1 2)
      (("4" (skosimp*)
        (("4" (typepred "x!1`2")
          (("4" (expand "SPP?")
            (("4" (flatten)
              (("4" (split)
                (("1" (rewrite "add_first_parallel_pos_to_PP_is_PP")
                  nil nil)
                 ("2" (rewrite "add_first_parallel_pos_to_SP_is_SP")
                  nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("5" (hide-all-but (-1 1))
      (("5" (typepred "y!1`2")
        (("5" (expand "SPP?")
          (("5" (flatten)
            (("5" (split)
              (("1" (rewrite "add_first_parallel_pos_to_PP_is_PP") nil
                nil)
               ("2" (rewrite "add_first_parallel_pos_to_SP_is_SP") nil
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("6" (hide -1 2)
      (("6" (skosimp*)
        (("6" (typepred "y!1`2")
          (("6" (expand "SPP?")
            (("6" (flatten)
              (("6" (split)
                (("1" (rewrite "add_first_parallel_pos_to_PP_is_PP")
                  nil nil)
                 ("2" (rewrite "add_first_parallel_pos_to_SP_is_SP")
                  nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("7" (hide 2)
      (("7" (typepred "fss!1")
        (("7" (expand "SPP?")
          (("7" (flatten)
            (("7" (split)
              (("1" (rewrite "add_first_parallel_pos_to_PP_is_PP") nil
                nil)
               ("2" (rewrite "add_first_parallel_pos_to_SP_is_SP") nil
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((add_first_parallel_pos_to_PP_is_PP formula-decl nil positions nil)
    (SP type-eq-decl nil positions nil)
    (add_first_parallel_pos_to_SP_is_SP formula-decl nil positions nil)
    (rest_of_PP_is_PP formula-decl nil positions nil)
    (PP? const-decl "bool" positions nil)
    (PP type-eq-decl nil positions nil)
    (length_rest formula-decl nil seq_extras structures)
    (<= const-decl "bool" positions nil)
    (O const-decl "finseq" finite_sequences nil)
    (rest_pos formula-decl nil seq_extras structures)
    (^ const-decl "finseq" finite_sequences nil)
    (empty_seq const-decl "finseq" finite_sequences nil)
    (replaceTerm def-decl "term" replacement nil)
    (replace_preserv_parallel_pos formula-decl nil replacement nil)
    (rest const-decl "finseq" seq_extras structures)
    (parallel_comm formula-decl nil positions nil)
    (SP? const-decl "bool" positions nil)
    (replace_commutativity formula-decl nil replacement nil)
    (replace_preserv_pos formula-decl nil replacement nil)
    (nth_add_first formula-decl nil seq_extras structures)
    (rest_add_first formula-decl nil seq_extras structures)
    (insert? const-decl "finseq" seq_extras structures)
    (positions type-eq-decl nil positions nil)
    (positionsOF def-decl "positions" positions nil)
    (positions? type-eq-decl nil positions nil)
    (parallel const-decl "bool" positions nil)
    (finseq_appl const-decl "[below[length(fs)] -> T]" finite_sequences
     nil)
    (add_first const-decl "finseq" seq_extras structures)
    (SPP type-eq-decl nil positions nil)
    (SPP? const-decl "bool" positions nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (position type-eq-decl nil positions nil)
    (term type-decl nil term_adt nil)
    (well_founded? const-decl "bool" orders nil))
   shostak))
 (preserv_all_parallel_positions 0
  (preserv_all_parallel_positions-1 nil 3455272446
   ("" (measure-induct+ "length(fss)" ("s" "fss"))
    (("" (skosimp*)
      (("" (case "length(x!2) = 0")
        (("1" (hide (-2 -3))
          (("1" (typepred "q!1")
            (("1" (expand "replace_pos") (("1" (assert) nil nil)) nil))
            nil))
          nil)
         ("2" (expand "replace_pos" 2)
          (("2" (assert)
            (("2" (inst -1 "replaceTerm(x!1, t!1, x!2(0))" "rest(x!2)")
              (("2" (inst -1 "t!1" "q!1")
                (("1" (rewrite "length_rest")
                  (("1" (assert)
                    (("1" (hide 3)
                      (("1" (case "length(rest(x!2)) = 0")
                        (("1" (hide -2) (("1" (grind) nil nil)) nil)
                         ("2" (skosimp*)
                          (("2" (lemma "fspos.rest_pos")
                            (("2" (expand "finseq_appl")
                              (("2"
                                (inst?)
                                (("2"
                                  (assert)
                                  (("2"
                                    (inst -1 "i!1")
                                    (("1"
                                      (inst -2 "i!1 + 1")
                                      (("1" (assert) nil nil)
                                       ("2"
                                        (hide-all-but 1)
                                        (("2"
                                          (typepred "i!1")
                                          (("2" (grind) nil nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (hide-all-but 1)
                                      (("2"
                                        (typepred "i!1")
                                        (("2" (grind) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide 3)
                  (("2" (inst -1 "0")
                    (("2" (typepred "q!1")
                      (("2" (lemma "replace_preserv_parallel_pos")
                        (("2" (inst -1 "x!2(0)" "q!1" "x!1" "t!1")
                          (("2" (assert)
                            (("2" (hide-all-but 1)
                              (("2"
                                (typepred "x!2")
                                (("2"
                                  (expand "SPP?")
                                  (("2"
                                    (flatten)
                                    (("2"
                                      (expand "SP?")
                                      (("2" (inst -2 "0") nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((rest const-decl "finseq" seq_extras structures)
    (replaceTerm def-decl "term" replacement nil)
    (SP? const-decl "bool" positions nil)
    (replace_preserv_parallel_pos formula-decl nil replacement nil)
    (length_rest formula-decl nil seq_extras structures)
    (rest_pos formula-decl nil seq_extras structures)
    (<= const-decl "bool" positions nil)
    (O const-decl "finseq" finite_sequences nil)
    (^ const-decl "finseq" finite_sequences nil)
    (empty_seq const-decl "finseq" finite_sequences nil)
    (finseq_appl const-decl "[below[length(fs)] -> T]" finite_sequences
     nil)
    (parallel const-decl "bool" positions nil)
    (positions? type-eq-decl nil positions nil)
    (positionsOF def-decl "positions" positions nil)
    (positions type-eq-decl nil positions nil)
    (SPP type-eq-decl nil positions nil)
    (SPP? const-decl "bool" positions nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (position type-eq-decl nil positions nil)
    (term type-decl nil term_adt nil)
    (well_founded? const-decl "bool" orders nil))
   shostak))
 (preserv_all_replaced_positions 0
  (preserv_all_replaced_positions-1 nil 3455272537
   ("" (measure-induct+ "length(fssp)" ("s" "fssp"))
    (("" (skolem 1 ("t" "_"))
      (("" (case "length(x!2) = 0")
        (("1" (hide -2) (("1" (grind) nil nil)) nil)
         ("2" (skosimp*)
          (("2" (case-replace "i!1 = 0")
            (("1" (hide -2)
              (("1" (lemma "preserv_first_position")
                (("1" (inst -1 "t" "x!1" "rest(x!2)" "first(x!2)")
                  (("1" (prop)
                    (("1" (lemma "fspos.seq_first_rest")
                      (("1" (inst?)
                        (("1" (assert)
                          (("1" (replace -1 -2 rl)
                            (("1" (expand "first")
                              (("1" (propax) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (typepred "x!2")
                      (("2" (expand "SPP?")
                        (("2" (flatten)
                          (("2" (hide (-2 -3 3))
                            (("2" (expand "PP?")
                              (("2"
                                (prop)
                                (("1" (grind) nil nil)
                                 ("2"
                                  (skosimp*)
                                  (("2"
                                    (inst -1 "i!2 + 1" "0")
                                    (("1"
                                      (assert)
                                      (("1"
                                        (lemma "fspos.rest_pos")
                                        (("1"
                                          (inst?)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (inst -1 "i!2")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (expand*
                                                   "first"
                                                   "finseq_appl")
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide-all-but 1)
                                                (("2"
                                                  (typepred "i!2")
                                                  (("2"
                                                    (grind)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (hide-all-but 1)
                                      (("2"
                                        (typepred "i!2")
                                        (("2" (grind) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (typepred "x!2")
                    (("2" (expand "SPP?")
                      (("2" (flatten)
                        (("2" (hide (-1 -3 3))
                          (("2" (expand "SP?")
                            (("2" (inst -1 "0")
                              (("2"
                                (expand "first")
                                (("2" (propax) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("3" (hide (-1 3))
                    (("3" (typepred "x!2")
                      (("3" (expand "SPP?")
                        (("3" (flatten)
                          (("3" (split)
                            (("1" (rewrite "rest_of_PP_is_PP") nil nil)
                             ("2" (rewrite "rest_of_SP_is_SP") nil
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (inst -1 "replaceTerm(x!1, t, x!2(0))" "rest(x!2)")
              (("1" (inst -1 "t" "i!1 - 1")
                (("1" (rewrite "length_rest")
                  (("1" (case "rest(x!2)`length /= 0")
                    (("1" (assert)
                      (("1" (expand "replace_pos" 3)
                        (("1" (lemma "fspos.rest_pos")
                          (("1" (inst?)
                            (("1" (assert)
                              (("1"
                                (inst -1 "i!1 - 1")
                                (("1"
                                  (expand "finseq_appl")
                                  (("1" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide -1)
                      (("2" (prop)
                        (("2" (expand "replace_pos")
                          (("2" (expand "replace_pos")
                            (("2" (prop)
                              (("2"
                                (typepred "x!2")
                                (("2"
                                  (expand "SPP?")
                                  (("2"
                                    (flatten)
                                    (("2"
                                      (expand "PP?")
                                      (("2"
                                        (prop)
                                        (("1"
                                          (hide (-2 1))
                                          (("1" (grind) nil nil))
                                          nil)
                                         ("2"
                                          (inst -1 "0" "i!1")
                                          (("2"
                                            (assert)
                                            (("2"
                                              (lemma
                                               "replace_preserv_parallel_pos")
                                              (("2"
                                                (inst
                                                 -1
                                                 "x!2(0)"
                                                 "x!2(i!1)"
                                                 "x!1"
                                                 "t")
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (hide (-1 3))
                                                    (("2"
                                                      (expand "SP?")
                                                      (("2"
                                                        (copy -1)
                                                        (("2"
                                                          (inst -1 "0")
                                                          (("2"
                                                            (inst
                                                             -2
                                                             "i!1")
                                                            (("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (typepred "i!1") (("2" (grind) nil nil)) nil))
                nil)
               ("2" (hide 4)
                (("2" (typepred "x!2")
                  (("2" (expand "SPP?")
                    (("2" (flatten)
                      (("2" (split)
                        (("1" (rewrite "rest_of_PP_is_PP") nil nil)
                         ("2" (expand "SP?")
                          (("2" (skosimp*)
                            (("2" (lemma "fspos.rest_pos")
                              (("2"
                                (inst?)
                                (("2"
                                  (assert)
                                  (("2"
                                    (inst -1 "i!2")
                                    (("1"
                                      (expand "finseq_appl")
                                      (("1"
                                        (replace -1 1 rl)
                                        (("1"
                                          (hide -1)
                                          (("1"
                                            (copy -2)
                                            (("1"
                                              (inst -1 "i!2 + 1")
                                              (("1"
                                                (inst -3 "0")
                                                (("1"
                                                  (lemma
                                                   "replace_preserv_parallel_pos")
                                                  (("1"
                                                    (inst
                                                     -1
                                                     "x!2`seq(0)"
                                                     "x!2`seq(i!2 + 1)"
                                                     "x!1"
                                                     "t")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (hide
                                                         (-1 -3 2))
                                                        (("1"
                                                          (expand
                                                           "PP?")
                                                          (("1"
                                                            (inst
                                                             -1
                                                             "0"
                                                             "i!2 + 1")
                                                            (("1"
                                                              (expand
                                                               "finseq_appl")
                                                              (("1"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide 2)
                                                              (("2"
                                                                (typepred
                                                                 "i!2")
                                                                (("2"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide (-1 -2 2))
                                                (("2"
                                                  (typepred "i!2")
                                                  (("2"
                                                    (grind)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (hide 2)
                                      (("2"
                                        (typepred "i!2")
                                        (("2" (grind) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("3" (typepred "x!2")
                (("3" (expand* "SPP?" "SP?")
                  (("3" (flatten) (("3" (inst -2 "0") nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((replaceTerm def-decl "term" replacement nil)
    (length_rest formula-decl nil seq_extras structures)
    (replace_preserv_parallel_pos formula-decl nil replacement nil)
    (rest const-decl "finseq" seq_extras structures)
    (not_empty_seq type-eq-decl nil seq_extras structures)
    (first const-decl "T" seq_extras structures)
    (positions? type-eq-decl nil positions nil)
    (PP? const-decl "bool" positions nil)
    (rest_pos formula-decl nil seq_extras structures)
    (empty_seq const-decl "finseq" finite_sequences nil)
    (^ const-decl "finseq" finite_sequences nil)
    (O const-decl "finseq" finite_sequences nil)
    (<= const-decl "bool" positions nil)
    (parallel const-decl "bool" positions nil)
    (seq_first_rest formula-decl nil seq_extras structures)
    (SP? const-decl "bool" positions nil)
    (SP type-eq-decl nil positions nil)
    (rest_of_SP_is_SP formula-decl nil positions nil)
    (PP type-eq-decl nil positions nil)
    (rest_of_PP_is_PP formula-decl nil positions nil)
    (finseq_appl const-decl "[below[length(fs)] -> T]" finite_sequences
     nil)
    (positionsOF def-decl "positions" positions nil)
    (positions type-eq-decl nil positions nil)
    (SPP type-eq-decl nil positions nil)
    (SPP? const-decl "bool" positions nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (position type-eq-decl nil positions nil)
    (term type-decl nil term_adt nil)
    (well_founded? const-decl "bool" orders nil))
   shostak))
 (preserv_unchanged_subterms_TCC1 0
  (preserv_unchanged_subterms_TCC1-1 nil 3455272043
   ("" (skosimp*)
    (("" (rewrite "preserv_all_parallel_positions") nil nil)) nil)
   ((term type-decl nil term_adt nil)
    (position type-eq-decl nil positions nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (SPP? const-decl "bool" positions nil)
    (SPP type-eq-decl nil positions nil)
    (positions type-eq-decl nil positions nil)
    (positionsOF def-decl "positions" positions nil)
    (positions? type-eq-decl nil positions nil))
   nil
   (preserv_unchanged_subterms subtype "replace_positions.q"
    "positions[replace_positions.variable, replace_positions.symbol, replace_positions.arity].positions?(replace_positions.replace_pos(replace_positions.s, replace_positions.t, replace_positions.fss))")))
 (preserv_unchanged_subterms 0
  (preserv_unchanged_subterms-2 "" 3804382253
   ("" (measure-induct+ "length(fss)" ("s" "fss"))
    (("1" (skosimp*)
      (("1" (case "length(x!2) = 0")
        (("1" (hide (-2 -3))
          (("1" (expand "replace_pos") (("1" (assert) nil nil)) nil))
          nil)
         ("2" (expand "replace_pos" 2)
          (("2" (assert)
            (("2" (inst -1 "replaceTerm(x!1, t!1, x!2(0))" "rest(x!2)")
              (("2" (inst -1 "t!1" "q!1")
                (("1" (rewrite "length_rest")
                  (("1" (prop)
                    (("1" (replaces -1)
                      (("1" (lemma "replace_persistence")
                        (("1" (inst -1 "x!2(0)" "q!1" "x!1" "t!1")
                          (("1" (assert)
                            (("1" (hide 3)
                              (("1"
                                (typepred "x!2")
                                (("1"
                                  (expand "SPP?")
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (expand "SP?")
                                      (("1"
                                        (inst -2 "0")
                                        (("1"
                                          (inst -3 "0")
                                          (("1" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide 3)
                      (("2" (case "length(rest(x!2)) = 0")
                        (("1" (hide -2) (("1" (grind) nil nil)) nil)
                         ("2" (skosimp*)
                          (("2" (lemma "fspos.rest_pos")
                            (("2" (expand "finseq_appl")
                              (("2"
                                (inst?)
                                (("2"
                                  (assert)
                                  (("2"
                                    (inst -1 "i!1")
                                    (("1"
                                      (inst -2 "i!1 + 1")
                                      (("1" (assert) nil nil)
                                       ("2"
                                        (hide-all-but 1)
                                        (("2"
                                          (typepred "i!1")
                                          (("2" (grind) nil nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (hide-all-but 1)
                                      (("2"
                                        (typepred "i!1")
                                        (("2" (grind) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide 3)
                  (("2" (typepred "x!2")
                    (("2" (expand "SPP?")
                      (("2" (flatten)
                        (("2" (hide -1)
                          (("2" (expand "SP?")
                            (("2" (inst -1 "0")
                              (("2"
                                (inst -2 "0")
                                (("2"
                                  (typepred "q!1")
                                  (("2"
                                    (lemma
                                     "replace_preserv_parallel_pos")
                                    (("2"
                                      (inst
                                       -1
                                       "x!2(0)"
                                       "q!1"
                                       "x!1"
                                       "t!1")
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (hide (-1 -3 2))
      (("2" (rewrite "preserv_all_parallel_positions") nil nil)) nil)
     ("3" (hide (-1 2))
      (("3" (skosimp*)
        (("3" (rewrite "preserv_all_parallel_positions") nil nil))
        nil))
      nil)
     ("4" (hide (-1 2))
      (("4" (skosimp*)
        (("4" (rewrite "preserv_all_parallel_positions") nil nil))
        nil))
      nil)
     ("5" (hide-all-but (-2 1))
      (("5" (rewrite "preserv_all_parallel_positions") nil nil)) nil)
     ("6" (hide (-1 2))
      (("6" (skosimp*)
        (("6" (rewrite "preserv_all_parallel_positions") nil nil))
        nil))
      nil)
     ("7" (hide 2)
      (("7" (rewrite "preserv_all_parallel_positions") nil nil)) nil))
    nil)
   nil shostak)
  (preserv_unchanged_subterms-1 nil 3455272651
   ("" (measure-induct+ "length(fss)" ("s" "fss"))
    (("1" (skosimp*)
      (("1" (case "length(x!2) = 0")
        (("1" (hide (-2 -3))
          (("1" (expand "replace_pos") (("1" (assert) nil nil)) nil))
          nil)
         ("2" (expand "replace_pos" 2)
          (("2" (assert)
            (("2" (inst -1 "replaceTerm(x!1, t!1, x!2(0))" "rest(x!2)")
              (("2" (inst -1 "t!1" "q!1")
                (("1" (rewrite "length_rest")
                  (("1" (prop)
                    (("1" (replaces -1)
                      (("1" (lemma "replace_persistence")
                        (("1" (inst -1 "x!2(0)" "q!1" "x!1" "t!1")
                          (("1" (assert)
                            (("1" (hide 3)
                              (("1"
                                (typepred "x!2")
                                (("1"
                                  (expand "SPP?")
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (expand "SP?")
                                      (("1"
                                        (inst -2 "0")
                                        (("1"
                                          (inst -3 "0")
                                          (("1" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide 3)
                      (("2" (case "length(rest(x!2)) = 0")
                        (("1" (hide -2) (("1" (grind) nil nil)) nil)
                         ("2" (skosimp*)
                          (("2" (lemma "fspos.rest_pos")
                            (("2" (expand "finseq_appl")
                              (("2"
                                (inst?)
                                (("2"
                                  (assert)
                                  (("2"
                                    (inst -1 "i!1")
                                    (("1"
                                      (inst -2 "i!1 + 1")
                                      (("1" (assert) nil nil)
                                       ("2"
                                        (hide-all-but 1)
                                        (("2"
                                          (typepred "i!1")
                                          (("2" (grind) nil nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (hide-all-but 1)
                                      (("2"
                                        (typepred "i!1")
                                        (("2" (grind) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide 3)
                  (("2" (typepred "x!2")
                    (("2" (expand "SPP?")
                      (("2" (flatten)
                        (("2" (hide -1)
                          (("2" (expand "SP?")
                            (("2" (inst -1 "0")
                              (("2"
                                (inst -2 "0")
                                (("2"
                                  (typepred "q!1")
                                  (("2"
                                    (lemma
                                     "replace_preserv_parallel_pos")
                                    (("2"
                                      (inst
                                       -1
                                       "x!2(0)"
                                       "q!1"
                                       "x!1"
                                       "t!1")
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (hide (-2 -3 2))
      (("2" (rewrite "preserv_all_parallel_positions") nil nil)) nil)
     ("3" (hide (-1 2))
      (("3" (skosimp*)
        (("3" (rewrite "preserv_all_parallel_positions") nil nil))
        nil))
      nil)
     ("4" (hide (-1 2))
      (("4" (skosimp*)
        (("4" (rewrite "preserv_all_parallel_positions") nil nil))
        nil))
      nil)
     ("5" (hide-all-but (-1 1))
      (("5" (rewrite "preserv_all_parallel_positions") nil nil)) nil)
     ("6" (hide (-1 2))
      (("6" (skosimp*)
        (("6" (rewrite "preserv_all_parallel_positions") nil nil))
        nil))
      nil)
     ("7" (hide 2)
      (("7" (rewrite "preserv_all_parallel_positions") nil nil)) nil))
    nil)
   ((replace_preserv_parallel_pos formula-decl nil replacement nil)
    (rest_pos formula-decl nil seq_extras structures)
    (<= const-decl "bool" positions nil)
    (O const-decl "finseq" finite_sequences nil)
    (^ const-decl "finseq" finite_sequences nil)
    (empty_seq const-decl "finseq" finite_sequences nil)
    (SP? const-decl "bool" positions nil)
    (replace_persistence formula-decl nil replacement nil)
    (length_rest formula-decl nil seq_extras structures)
    (replaceTerm def-decl "term" replacement nil)
    (rest const-decl "finseq" seq_extras structures)
    (subtermOF def-decl "term" subterm nil)
    (positions type-eq-decl nil positions nil)
    (positionsOF def-decl "positions" positions nil)
    (positions? type-eq-decl nil positions nil)
    (parallel const-decl "bool" positions nil)
    (finseq_appl const-decl "[below[length(fs)] -> T]" finite_sequences
     nil)
    (SPP type-eq-decl nil positions nil)
    (SPP? const-decl "bool" positions nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (position type-eq-decl nil positions nil)
    (term type-decl nil term_adt nil)
    (well_founded? const-decl "bool" orders nil))
   shostak))
 (replace_pos_subterm_to_term_TCC1 0
  (replace_pos_subterm_to_term_TCC1-1 nil 3457522914
   ("" (subtype-tcc) nil nil)
   ((term type-decl nil term_adt nil)
    (position type-eq-decl nil positions nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (SPP? const-decl "bool" positions nil)
    (SPP type-eq-decl nil positions nil)
    (SP? const-decl "bool" positions nil)
    (finseq_appl const-decl "[below[length(fs)] -> T]" finite_sequences
     nil))
   nil
   (replace_pos_subterm_to_term subtype
    "finite_sequences[position[variable, symbol, arity]].finseq_appl(replace_positions.fss)(replace_positions.i)"
    "positions[replace_positions.variable, replace_positions.symbol, replace_positions.arity].positions?(replace_positions.s)")))
 (replace_pos_subterm_to_term 0
  (replace_pos_subterm_to_term-2 "" 3804384603
   ("" (measure-induct+ "length(fss)" ("s" "fss"))
    (("1" (skosimp*)
      (("1" (case "length(x!2) = 0")
        (("1" (hide (-2 -3))
          (("1" (expand "replace_pos")
            (("1" (lift-if) (("1" (assert) nil nil)) nil)) nil))
          nil)
         ("2" (expand "replace_pos" 2)
          (("2" (lift-if)
            (("2" (assert)
              (("2" (expand "finseq_appl")
                (("2"
                  (inst -1 "replaceTerm(x!1, t!1, x!2`seq(0))"
                   "rest(x!2)")
                  (("2" (inst -1 "t!1")
                    (("2" (prop)
                      (("1" (inst -2 "0")
                        (("1"
                          (case "replaceTerm(x!1, t!1, x!2`seq(0)) = x!1")
                          (("1" (replaces -1) nil nil)
                           ("2" (hide (-1 3))
                            (("2" (replace -1 1 rl)
                              (("2"
                                (rewrite "replace_subterm_of_term")
                                (("2"
                                  (hide (-1 2))
                                  (("2"
                                    (typepred "x!2")
                                    (("2"
                                      (expand "SPP?")
                                      (("2"
                                        (flatten)
                                        (("2"
                                          (expand "SP?")
                                          (("2"
                                            (inst -2 "0")
                                            (("2"
                                              (expand "finseq_appl")
                                              (("2" (propax) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 3)
                        (("2" (skosimp*)
                          (("2" (copy -1)
                            (("2" (inst -1 "0")
                              (("2"
                                (case
                                 "replaceTerm(x!1, t!1, x!2`seq(0)) = x!1")
                                (("1"
                                  (replaces -1)
                                  (("1"
                                    (hide -1)
                                    (("1"
                                      (lemma "rest_pos[position]")
                                      (("1"
                                        (inst?)
                                        (("1"
                                          (prop)
                                          (("1"
                                            (inst?)
                                            (("1"
                                              (expand "finseq_appl")
                                              (("1"
                                                (replace -1 1 rl)
                                                (("1"
                                                  (inst -2 "i!1 + 1")
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (hide (-1 2))
                                                    (("2"
                                                      (typepred "i!1")
                                                      (("2"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (hide (-1 2))
                                              (("2"
                                                (typepred "i!1")
                                                (("2" (grind) nil nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (hide -2)
                                            (("2"
                                              (expand "subtermOF")
                                              (("2"
                                                (lift-if)
                                                (("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (hide (-2 2))
                                  (("2"
                                    (replace -1 1 rl)
                                    (("2"
                                      (rewrite
                                       "replace_subterm_of_term")
                                      (("2"
                                        (hide (-1 2))
                                        (("2"
                                          (typepred "x!2")
                                          (("2"
                                            (expand "SPP?")
                                            (("2"
                                              (flatten)
                                              (("2"
                                                (expand "SP?")
                                                (("2"
                                                  (inst -2 "0")
                                                  (("2"
                                                    (expand
                                                     "finseq_appl")
                                                    (("2"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("3" (hide (-1 3))
                        (("3" (rewrite "length_rest") nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (hide (-1 2))
      (("2" (skosimp*)
        (("2" (expand "finseq_appl")
          (("2" (typepred "y!2")
            (("2" (expand "SPP?")
              (("2" (flatten)
                (("2" (expand "SP?")
                  (("2" (inst -2 "i!1")
                    (("2" (expand "finseq_appl")
                      (("2" (propax) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("3" (hide 2)
      (("3" (skosimp*)
        (("3" (typepred "y!2")
          (("3" (expand "SPP?")
            (("3" (flatten)
              (("3" (expand "SP?") (("3" (inst -2 "i!1") nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("4" (hide (-1 2))
      (("4" (skosimp*)
        (("4" (typepred "x!1`2")
          (("4" (expand "SPP?")
            (("4" (flatten)
              (("4" (expand "SP?") (("4" (inst -2 "i!1") nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("5" (hide (-1 2 3))
      (("5" (skosimp*)
        (("5" (typepred "y!1`2")
          (("5" (expand "SPP?")
            (("5" (flatten)
              (("5" (expand "SP?") (("5" (inst -2 "i!1") nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("6" (hide 2)
      (("6" (skosimp*)
        (("6" (typepred "y!1`2")
          (("6" (expand "SPP?")
            (("6" (flatten)
              (("6" (expand "SP?") (("6" (inst -2 "i!1") nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("7" (hide 2)
      (("7" (typepred "fss!1")
        (("7" (expand "SPP?")
          (("7" (flatten)
            (("7" (expand "SP?") (("7" (inst -2 "i!1") nil nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (replace_pos_subterm_to_term-1 nil 3457522958
   ("" (measure-induct+ "length(fss)" ("s" "fss"))
    (("1" (skosimp*)
      (("1" (case "length(x!2) = 0")
        (("1" (hide (-2 -3))
          (("1" (expand "replace_pos")
            (("1" (lift-if) (("1" (assert) nil nil)) nil)) nil))
          nil)
         ("2" (expand "replace_pos" 2)
          (("2" (lift-if)
            (("2" (assert)
              (("2" (expand "finseq_appl")
                (("2"
                  (inst -1 "replaceTerm(x!1, t!1, x!2`seq(0))"
                   "rest(x!2)")
                  (("2" (inst -1 "t!1")
                    (("2" (prop)
                      (("1" (inst -2 "0")
                        (("1"
                          (case "replaceTerm(x!1, t!1, x!2`seq(0)) = x!1")
                          (("1" (replaces -1) nil nil)
                           ("2" (hide (-1 3))
                            (("2" (replace -1 1 rl)
                              (("2"
                                (rewrite "replace_subterm_of_term")
                                (("2"
                                  (hide (-1 2))
                                  (("2"
                                    (typepred "x!2")
                                    (("2"
                                      (expand "SPP?")
                                      (("2"
                                        (flatten)
                                        (("2"
                                          (expand "SP?")
                                          (("2"
                                            (inst -2 "0")
                                            (("2"
                                              (expand "finseq_appl")
                                              (("2" (propax) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 3)
                        (("2" (skosimp*)
                          (("2" (copy -1)
                            (("2" (inst -1 "0")
                              (("2"
                                (case
                                 "replaceTerm(x!1, t!1, x!2`seq(0)) = x!1")
                                (("1"
                                  (replaces -1)
                                  (("1"
                                    (hide -1)
                                    (("1"
                                      (lemma "rest_pos[position]")
                                      (("1"
                                        (inst?)
                                        (("1"
                                          (prop)
                                          (("1"
                                            (inst?)
                                            (("1"
                                              (expand "finseq_appl")
                                              (("1"
                                                (replace -1 1 rl)
                                                (("1"
                                                  (inst -2 "i!1 + 1")
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (hide (-1 2))
                                                    (("2"
                                                      (typepred "i!1")
                                                      (("2"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (hide (-1 2))
                                              (("2"
                                                (typepred "i!1")
                                                (("2" (grind) nil nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (hide -2)
                                            (("2"
                                              (expand "subtermOF")
                                              (("2"
                                                (lift-if)
                                                (("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (hide (-2 2))
                                  (("2"
                                    (replace -1 1 rl)
                                    (("2"
                                      (rewrite
                                       "replace_subterm_of_term")
                                      (("2"
                                        (hide (-1 2))
                                        (("2"
                                          (typepred "x!2")
                                          (("2"
                                            (expand "SPP?")
                                            (("2"
                                              (flatten)
                                              (("2"
                                                (expand "SP?")
                                                (("2"
                                                  (inst -2 "0")
                                                  (("2"
                                                    (expand
                                                     "finseq_appl")
                                                    (("2"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("3" (hide (-1 3))
                        (("3" (rewrite "length_rest") nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (hide (-1 2))
      (("2" (skosimp*)
        (("2" (expand "finseq_appl")
          (("2" (typepred "y!2")
            (("2" (expand "SPP?")
              (("2" (flatten)
                (("2" (expand "SP?")
                  (("2" (inst -2 "i!1")
                    (("2" (expand "finseq_appl")
                      (("2" (propax) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("3" (hide 2)
      (("3" (skosimp*)
        (("3" (typepred "y!2")
          (("3" (expand "SPP?")
            (("3" (flatten)
              (("3" (expand "SP?") (("3" (inst -2 "i!1") nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("4" (hide (-1 2))
      (("4" (skosimp*)
        (("4" (typepred "x!1`2")
          (("4" (expand "SPP?")
            (("4" (flatten)
              (("4" (expand "SP?") (("4" (inst -2 "i1!1") nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("5" (hide (-1 2 3))
      (("5" (skosimp*)
        (("5" (typepred "y!1`2")
          (("5" (expand "SPP?")
            (("5" (flatten)
              (("5" (expand "SP?") (("5" (inst -2 "i!1") nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("6" (hide 2)
      (("6" (skosimp*)
        (("6" (typepred "y!1`2")
          (("6" (expand "SPP?")
            (("6" (flatten)
              (("6" (expand "SP?") (("6" (inst -2 "i!1") nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("7" (hide 2)
      (("7" (typepred "fss!1")
        (("7" (expand "SPP?")
          (("7" (flatten)
            (("7" (expand "SP?") (("7" (inst -2 "i!1") nil nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((length_rest formula-decl nil seq_extras structures)
    (^ const-decl "finseq" finite_sequences nil)
    (empty_seq const-decl "finseq" finite_sequences nil)
    (rest_pos formula-decl nil seq_extras structures)
    (SP? const-decl "bool" positions nil)
    (replace_subterm_of_term formula-decl nil replacement nil)
    (replaceTerm def-decl "term" replacement nil)
    (rest const-decl "finseq" seq_extras structures)
    (subtermOF def-decl "term" subterm nil)
    (positions? type-eq-decl nil positions nil)
    (positions type-eq-decl nil positions nil)
    (positionsOF def-decl "positions" positions nil)
    (finseq_appl const-decl "[below[length(fs)] -> T]" finite_sequences
     nil)
    (SPP type-eq-decl nil positions nil)
    (SPP? const-decl "bool" positions nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (position type-eq-decl nil positions nil)
    (term type-decl nil term_adt nil)
    (well_founded? const-decl "bool" orders nil))
   shostak))
 (replace_pos_to_term_TCC1 0
  (replace_pos_to_term_TCC1-1 nil 3456672662
   ("" (skosimp*)
    (("" (lemma "Pos_var_is_finite")
      (("" (inst?) (("" (assert) nil nil)) nil)) nil))
    nil)
   ((Pos_var_is_finite formula-decl nil subterm nil)
    (V const-decl "set[term]" variables_term nil)
    (set type-eq-decl nil sets nil) (term type-decl nil term_adt nil))
   nil
   (replace_pos_to_term subtype
    "subterm[replace_positions.variable, replace_positions.symbol, replace_positions.arity].Pos_var(replace_positions.s, replace_positions.x)"
    "finite_set[position[variable, symbol, arity]]")))
 (replace_pos_to_term_TCC2 0
  (replace_pos_to_term_TCC2-1 nil 3456672662
   ("" (skosimp*)
    (("" (expand "SPP?")
      (("" (split)
        (("1" (lemma "pos_occ_var_HAStypePP")
          (("1" (inst?) (("1" (assert) nil nil)) nil)) nil)
         ("2" (lemma "pos_occ_var_HAStypeSP")
          (("2" (inst?) (("2" (assert) nil nil)) nil)) nil))
        nil))
      nil))
    nil)
   ((SPP? const-decl "bool" positions nil)
    (pos_occ_var_HAStypeSP formula-decl nil subterm nil)
    (pos_occ_var_HAStypePP formula-decl nil subterm nil)
    (V const-decl "set[term]" variables_term nil)
    (set type-eq-decl nil sets nil) (term type-decl nil term_adt nil))
   nil
   (replace_pos_to_term subtype
    "set2seq[position[variable, symbol, arity]].set2seq(subterm[replace_positions.variable, replace_positions.symbol, replace_positions.arity].Pos_var(replace_positions.s, replace_positions.x))"
    "positions[replace_positions.variable, replace_positions.symbol, replace_positions.arity].SPP(replace_positions.s)")))
 (replace_pos_to_term 0
  (replace_pos_to_term-1 nil 3456672663
   ("" (skosimp*)
    (("" (name-replace "fss" "set2seq(Pos_var(s!1, x!1))" :hide? nil)
      (("" (lemma "replace_pos_subterm_to_term")
        (("" (inst -1 "x!1" "s!1" "fss")
          (("" (assert)
            (("" (hide 2)
              (("" (skosimp*)
                (("" (expand "finseq_appl")
                  (("" (lemma "set2seq_lem[position]")
                    (("" (inst?)
                      (("" (assert)
                        (("" (inst -1 "i!1")
                          (("1" (expand "finseq_appl")
                            (("1" (replaces -2)
                              (("1"
                                (expand "Pos_var")
                                (("1"
                                  (expand "extend")
                                  (("1" (propax) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (typepred "i!1")
                            (("2" (replaces -2 :dir rl)
                              (("2"
                                (rewrite "set2seq_length")
                                nil
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((position type-eq-decl nil positions nil)
    (finite_sequence type-eq-decl nil finite_sequences nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (set2seq def-decl "finite_sequence[T]" set2seq structures)
    (term type-decl nil term_adt nil)
    (V const-decl "set[term]" variables_term nil)
    (positions type-eq-decl nil positions nil)
    (Pos_var const-decl "positions" subterm nil)
    (SPP type-eq-decl nil positions nil)
    (SPP? const-decl "bool" positions nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (finseq_appl const-decl "[below[length(fs)] -> T]" finite_sequences
     nil)
    (Card const-decl "nat" finite_sets nil)
    (card const-decl "{n: nat | n = Card(S)}" finite_sets nil)
    (set2seq_length formula-decl nil set2seq structures)
    (set2seq_lem formula-decl nil set2seq structures))
   shostak))
 (CP_lemma_aux2a_TCC1 0
  (CP_lemma_aux2a_TCC1-1 nil 3455272825
   ("" (skosimp*)
    (("" (typepred "fss!1")
      (("" (expand "SPP?")
        (("" (flatten)
          (("" (split)
            (("1" (rewrite "add_last_parallel_pos_to_PP_is_PP") nil
              nil)
             ("2" (rewrite "add_last_parallel_pos_to_SP_is_SP") nil
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((SPP type-eq-decl nil positions nil)
    (SPP? const-decl "bool" positions nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (position type-eq-decl nil positions nil)
    (term type-decl nil term_adt nil)
    (add_last_parallel_pos_to_SP_is_SP formula-decl nil positions nil)
    (SP? const-decl "bool" positions nil)
    (SP type-eq-decl nil positions nil)
    (add_last_parallel_pos_to_PP_is_PP formula-decl nil positions nil)
    (PP? const-decl "bool" positions nil)
    (PP type-eq-decl nil positions nil)
    (positions type-eq-decl nil positions nil)
    (positionsOF def-decl "positions" positions nil)
    (positions? type-eq-decl nil positions nil))
   nil
   (CP_lemma_aux2a subtype
    "seq_extras[position[variable, symbol, arity]].add_last(replace_positions.fss, replace_positions.q)"
    "positions[replace_positions.variable, replace_positions.symbol, replace_positions.arity].SPP(replace_positions.s)")))
 (CP_lemma_aux2a 0
  (CP_lemma_aux2a-2 "" 3804385625
   ("" (measure-induct+ "length(fss)" ("s" "fss"))
    (("1" (skosimp*)
      (("1" (case "length(x!2) = 0")
        (("1" (hide (-2 -3))
          (("1" (expand "replace_pos")
            (("1" (lift-if)
              (("1" (lift-if)
                (("1" (prop)
                  (("1" (hide 1) (("1" (grind) nil nil)) nil)
                   ("2" (grind) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (expand "replace_pos" 2 1)
          (("2" (lift-if)
            (("2" (prop)
              (("1" (hide-all-but (-1 2)) (("1" (grind) nil nil)) nil)
               ("2" (lemma "fspos.rest_add_last")
                (("2" (inst?)
                  (("2" (assert)
                    (("2" (replaces -1)
                      (("2"
                        (inst -1
                         "replaceTerm(x!1, t!1, add_last(x!2, q!1)(0))"
                         "rest(x!2)")
                        (("1" (inst -1 "t!1" "q!1")
                          (("1" (rewrite "length_rest")
                            (("1" (prop)
                              (("1"
                                (name-replace
                                 "RTq"
                                 "replaceTerm(x!1, t!1, add_last(x!2, q!1)(0))")
                                (("1"
                                  (replaces -1)
                                  (("1"
                                    (expand "RTq")
                                    (("1"
                                      (lemma "fspos.nth_add_last")
                                      (("1"
                                        (inst -1 "x!2" "q!1" "0")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (replaces -1)
                                            (("1"
                                              (expand
                                               "replace_pos"
                                               2
                                               2)
                                              (("1" (propax) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (hide-all-but (-1 1 3))
                                (("2"
                                  (case "length(rest(x!2)) = 0")
                                  (("1"
                                    (hide -2)
                                    (("1" (grind) nil nil))
                                    nil)
                                   ("2"
                                    (skosimp*)
                                    (("2"
                                      (expand "finseq_appl")
                                      (("2"
                                        (lemma "fspos.rest_pos")
                                        (("2"
                                          (inst?)
                                          (("2"
                                            (assert)
                                            (("2"
                                              (inst -1 "i!1")
                                              (("1"
                                                (expand "finseq_appl")
                                                (("1"
                                                  (inst -2 "i!1 + 1")
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (hide-all-but 1)
                                                    (("2"
                                                      (typepred "i!1")
                                                      (("2"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide-all-but 1)
                                                (("2"
                                                  (typepred "i!1")
                                                  (("2"
                                                    (grind)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (expand "finseq_appl")
                            (("2" (hide-all-but (-1 1 4))
                              (("2"
                                (lemma "fspos.nth_add_last")
                                (("2"
                                  (inst -1 "x!2" "q!1" "0")
                                  (("2"
                                    (assert)
                                    (("2"
                                      (expand "finseq_appl")
                                      (("2"
                                        (replaces -1)
                                        (("2"
                                          (inst -1 "0")
                                          (("2"
                                            (typepred "x!2")
                                            (("2"
                                              (expand "SPP?")
                                              (("2"
                                                (flatten)
                                                (("2"
                                                  (hide -1)
                                                  (("2"
                                                    (expand "SP?")
                                                    (("2"
                                                      (inst -1 "0")
                                                      (("2"
                                                        (typepred
                                                         "q!1")
                                                        (("2"
                                                          (lemma
                                                           "replace_preserv_parallel_pos")
                                                          (("2"
                                                            (inst
                                                             -1
                                                             "x!2(0)"
                                                             "q!1"
                                                             "x!1"
                                                             "t!1")
                                                            (("2"
                                                              (expand
                                                               "finseq_appl")
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (hide (-1 2 3))
                          (("2" (lemma "fspos.nth_add_last")
                            (("2" (inst -1 "x!2" "q!1" "0")
                              (("2"
                                (assert)
                                (("2"
                                  (replaces -1)
                                  (("2"
                                    (typepred "x!2")
                                    (("2"
                                      (expand "SPP?")
                                      (("2"
                                        (flatten)
                                        (("2"
                                          (split)
                                          (("1"
                                            (rewrite
                                             "rest_of_PP_is_PP")
                                            nil
                                            nil)
                                           ("2"
                                            (expand* "PP?" "SP?")
                                            (("2"
                                              (assert)
                                              (("2"
                                                (prop)
                                                (("1" (grind) nil nil)
                                                 ("2"
                                                  (lemma
                                                   "fspos.rest_pos")
                                                  (("2"
                                                    (inst?)
                                                    (("2"
                                                      (prop)
                                                      (("1"
                                                        (skosimp*)
                                                        (("1"
                                                          (inst
                                                           -1
                                                           "i!1")
                                                          (("1"
                                                            (inst
                                                             -2
                                                             "0"
                                                             "i!1 + 1")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (copy
                                                                 -3)
                                                                (("1"
                                                                  (inst
                                                                   -1
                                                                   "0")
                                                                  (("1"
                                                                    (inst
                                                                     -4
                                                                     "i!1 + 1")
                                                                    (("1"
                                                                      (expand
                                                                       "finseq_appl")
                                                                      (("1"
                                                                        (replace
                                                                         -2
                                                                         2
                                                                         rl)
                                                                        (("1"
                                                                          (hide
                                                                           -2)
                                                                          (("1"
                                                                            (lemma
                                                                             "replace_preserv_parallel_pos")
                                                                            (("1"
                                                                              (inst
                                                                               -1
                                                                               "x!2`seq(0)"
                                                                               "x!2`seq(1 + i!1)"
                                                                               "x!1"
                                                                               "t!1")
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide-all-but
                                                                       1)
                                                                      (("2"
                                                                        (typepred
                                                                         "i!1")
                                                                        (("2"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide-all-but
                                                             1)
                                                            (("2"
                                                              (typepred
                                                               "i!1")
                                                              (("2"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (hide-all-but (-2 1))
      (("2" (rewrite "preserv_all_parallel_positions") nil nil)) nil)
     ("3" (hide-all-but (-2 1))
      (("3" (typepred "y!2")
        (("3" (expand "SPP?")
          (("3" (flatten)
            (("3" (rewrite "add_last_parallel_pos_to_PP_is_PP")
              (("3" (rewrite "add_last_parallel_pos_to_SP_is_SP") nil
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("4" (hide-all-but 1)
      (("4" (skosimp*)
        (("4" (rewrite "preserv_all_parallel_positions") nil nil))
        nil))
      nil)
     ("5" (hide-all-but 1)
      (("5" (skosimp*)
        (("5" (typepred "y!2")
          (("5" (expand "SPP?")
            (("5" (flatten)
              (("5" (rewrite "add_last_parallel_pos_to_PP_is_PP")
                (("5" (rewrite "add_last_parallel_pos_to_SP_is_SP") nil
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("6" (hide-all-but 1)
      (("6" (skosimp*)
        (("6" (rewrite "preserv_all_parallel_positions") nil nil))
        nil))
      nil)
     ("7" (hide-all-but (-2 1))
      (("7" (rewrite "preserv_all_parallel_positions") nil nil)) nil)
     ("8" (hide-all-but (-2 1))
      (("8" (typepred "y!1`2")
        (("8" (expand "SPP?")
          (("8" (flatten)
            (("8" (rewrite "add_last_parallel_pos_to_PP_is_PP")
              (("8" (rewrite "add_last_parallel_pos_to_SP_is_SP") nil
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("9" (hide-all-but 1)
      (("9" (skosimp*)
        (("9" (typepred "x!1`2")
          (("9" (expand "SPP?")
            (("9" (flatten)
              (("9" (rewrite "add_last_parallel_pos_to_PP_is_PP")
                (("9" (rewrite "add_last_parallel_pos_to_SP_is_SP") nil
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("10" (hide-all-but (-2 1))
      (("10" (rewrite "preserv_all_parallel_positions") nil nil)) nil)
     ("11" (hide-all-but (-2 1))
      (("11" (typepred "y!1`2")
        (("11" (expand "SPP?")
          (("11" (flatten)
            (("11" (rewrite "add_last_parallel_pos_to_PP_is_PP")
              (("11" (rewrite "add_last_parallel_pos_to_SP_is_SP") nil
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("12" (hide-all-but 1)
      (("12" (skosimp*)
        (("12" (rewrite "preserv_all_parallel_positions") nil nil))
        nil))
      nil)
     ("13" (hide-all-but 1)
      (("13" (skosimp*)
        (("13" (typepred "y!1`2")
          (("13" (expand "SPP?")
            (("13" (flatten)
              (("13" (rewrite "add_last_parallel_pos_to_PP_is_PP")
                (("13" (rewrite "add_last_parallel_pos_to_SP_is_SP")
                  nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("14" (hide-all-but (-1 1))
      (("14" (rewrite "preserv_all_parallel_positions") nil nil)) nil)
     ("15" (hide 2)
      (("15" (typepred "fss!1")
        (("15" (expand "SPP?")
          (("15" (flatten)
            (("15" (rewrite "add_last_parallel_pos_to_PP_is_PP")
              (("15" (rewrite "add_last_parallel_pos_to_SP_is_SP") nil
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (CP_lemma_aux2a-1 nil 3455272867
   ("" (measure-induct+ "length(fss)" ("s" "fss"))
    (("1" (skosimp*)
      (("1" (case "length(x!2) = 0")
        (("1" (hide (-2 -3))
          (("1" (expand "replace_pos")
            (("1" (lift-if)
              (("1" (lift-if)
                (("1" (prop)
                  (("1" (hide 1) (("1" (grind) nil nil)) nil)
                   ("2" (grind) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (expand "replace_pos" 2 1)
          (("2" (lift-if)
            (("2" (prop)
              (("1" (hide-all-but (-1 2)) (("1" (grind) nil nil)) nil)
               ("2" (lemma "fspos.rest_add_last")
                (("2" (inst?)
                  (("2" (assert)
                    (("2" (replaces -1)
                      (("2"
                        (inst -1
                         "replaceTerm(x!1, t!1, add_last(x!2, q!1)(0))"
                         "rest(x!2)")
                        (("1" (inst -1 "t!1" "q!1")
                          (("1" (rewrite "length_rest")
                            (("1" (prop)
                              (("1"
                                (name-replace
                                 "RTq"
                                 "replaceTerm(x!1, t!1, add_last(x!2, q!1)(0))")
                                (("1"
                                  (replaces -1)
                                  (("1"
                                    (expand "RTq")
                                    (("1"
                                      (lemma "fspos.nth_add_last")
                                      (("1"
                                        (inst -1 "x!2" "q!1" "0")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (replaces -1)
                                            (("1"
                                              (expand
                                               "replace_pos"
                                               2
                                               2)
                                              (("1" (propax) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (hide-all-but (-1 1 3))
                                (("2"
                                  (case "length(rest(x!2)) = 0")
                                  (("1"
                                    (hide -2)
                                    (("1" (grind) nil nil))
                                    nil)
                                   ("2"
                                    (skosimp*)
                                    (("2"
                                      (expand "finseq_appl")
                                      (("2"
                                        (lemma "fspos.rest_pos")
                                        (("2"
                                          (inst?)
                                          (("2"
                                            (assert)
                                            (("2"
                                              (inst -1 "i!1")
                                              (("1"
                                                (expand "finseq_appl")
                                                (("1"
                                                  (inst -2 "i!1 + 1")
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (hide-all-but 1)
                                                    (("2"
                                                      (typepred "i!1")
                                                      (("2"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide-all-but 1)
                                                (("2"
                                                  (typepred "i!1")
                                                  (("2"
                                                    (grind)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (expand "finseq_appl")
                            (("2" (hide-all-but (-1 1 4))
                              (("2"
                                (lemma "fspos.nth_add_last")
                                (("2"
                                  (inst -1 "x!2" "q!1" "0")
                                  (("2"
                                    (assert)
                                    (("2"
                                      (expand "finseq_appl")
                                      (("2"
                                        (replaces -1)
                                        (("2"
                                          (inst -1 "0")
                                          (("2"
                                            (typepred "x!2")
                                            (("2"
                                              (expand "SPP?")
                                              (("2"
                                                (flatten)
                                                (("2"
                                                  (hide -1)
                                                  (("2"
                                                    (expand "SP?")
                                                    (("2"
                                                      (inst -1 "0")
                                                      (("2"
                                                        (typepred
                                                         "q!1")
                                                        (("2"
                                                          (lemma
                                                           "replace_preserv_parallel_pos")
                                                          (("2"
                                                            (inst
                                                             -1
                                                             "x!2(0)"
                                                             "q!1"
                                                             "x!1"
                                                             "t!1")
                                                            (("2"
                                                              (expand
                                                               "finseq_appl")
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (hide (-1 2 3))
                          (("2" (lemma "fspos.nth_add_last")
                            (("2" (inst -1 "x!2" "q!1" "0")
                              (("2"
                                (assert)
                                (("2"
                                  (replaces -1)
                                  (("2"
                                    (typepred "x!2")
                                    (("2"
                                      (expand "SPP?")
                                      (("2"
                                        (flatten)
                                        (("2"
                                          (split)
                                          (("1"
                                            (rewrite
                                             "rest_of_PP_is_PP")
                                            nil
                                            nil)
                                           ("2"
                                            (expand* "PP?" "SP?")
                                            (("2"
                                              (assert)
                                              (("2"
                                                (prop)
                                                (("1" (grind) nil nil)
                                                 ("2"
                                                  (lemma
                                                   "fspos.rest_pos")
                                                  (("2"
                                                    (inst?)
                                                    (("2"
                                                      (prop)
                                                      (("1"
                                                        (skosimp*)
                                                        (("1"
                                                          (inst
                                                           -1
                                                           "i!1")
                                                          (("1"
                                                            (inst
                                                             -2
                                                             "0"
                                                             "i!1 + 1")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (copy
                                                                 -3)
                                                                (("1"
                                                                  (inst
                                                                   -1
                                                                   "0")
                                                                  (("1"
                                                                    (inst
                                                                     -4
                                                                     "i!1 + 1")
                                                                    (("1"
                                                                      (expand
                                                                       "finseq_appl")
                                                                      (("1"
                                                                        (replace
                                                                         -2
                                                                         2
                                                                         rl)
                                                                        (("1"
                                                                          (hide
                                                                           -2)
                                                                          (("1"
                                                                            (lemma
                                                                             "replace_preserv_parallel_pos")
                                                                            (("1"
                                                                              (inst
                                                                               -1
                                                                               "x!2`seq(0)"
                                                                               "x!2`seq(1 + i!1)"
                                                                               "x!1"
                                                                               "t!1")
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide-all-but
                                                                       1)
                                                                      (("2"
                                                                        (typepred
                                                                         "i!1")
                                                                        (("2"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide-all-but
                                                             1)
                                                            (("2"
                                                              (typepred
                                                               "i!1")
                                                              (("2"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide-all-but
                                                         (-1 2 3))
                                                        (("2"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (hide-all-but (-1 1))
      (("2" (rewrite "preserv_all_parallel_positions") nil nil)) nil)
     ("3" (hide-all-but (-1 1))
      (("3" (typepred "y!2")
        (("3" (expand "SPP?")
          (("3" (flatten)
            (("3" (rewrite "add_last_parallel_pos_to_PP_is_PP")
              (("3" (rewrite "add_last_parallel_pos_to_SP_is_SP") nil
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("4" (hide-all-but 1)
      (("4" (skosimp*)
        (("4" (rewrite "preserv_all_parallel_positions") nil nil))
        nil))
      nil)
     ("5" (hide-all-but 1)
      (("5" (skosimp*)
        (("5" (typepred "y!2")
          (("5" (expand "SPP?")
            (("5" (flatten)
              (("5" (rewrite "add_last_parallel_pos_to_PP_is_PP")
                (("5" (rewrite "add_last_parallel_pos_to_SP_is_SP") nil
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("6" (hide-all-but 1)
      (("6" (skosimp*)
        (("6" (rewrite "preserv_all_parallel_positions") nil nil))
        nil))
      nil)
     ("7" (hide-all-but (-1 1))
      (("7" (rewrite "preserv_all_parallel_positions") nil nil)) nil)
     ("8" (hide-all-but (-1 1))
      (("8" (typepred "y!1`2")
        (("8" (expand "SPP?")
          (("8" (flatten)
            (("8" (rewrite "add_last_parallel_pos_to_PP_is_PP")
              (("8" (rewrite "add_last_parallel_pos_to_SP_is_SP") nil
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("9" (hide-all-but 1)
      (("9" (skosimp*)
        (("9" (typepred "x!1`2")
          (("9" (expand "SPP?")
            (("9" (flatten)
              (("9" (rewrite "add_last_parallel_pos_to_PP_is_PP")
                (("9" (rewrite "add_last_parallel_pos_to_SP_is_SP") nil
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("10" (hide-all-but (-1 1))
      (("10" (rewrite "preserv_all_parallel_positions") nil nil)) nil)
     ("11" (hide-all-but (-1 1))
      (("11" (typepred "y!1`2")
        (("11" (expand "SPP?")
          (("11" (flatten)
            (("11" (rewrite "add_last_parallel_pos_to_PP_is_PP")
              (("11" (rewrite "add_last_parallel_pos_to_SP_is_SP") nil
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("12" (hide-all-but 1)
      (("12" (skosimp*)
        (("12" (rewrite "preserv_all_parallel_positions") nil nil))
        nil))
      nil)
     ("13" (hide-all-but 1)
      (("13" (skosimp*)
        (("13" (typepred "y!1`2")
          (("13" (expand "SPP?")
            (("13" (flatten)
              (("13" (rewrite "add_last_parallel_pos_to_PP_is_PP")
                (("13" (rewrite "add_last_parallel_pos_to_SP_is_SP")
                  nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("14" (hide-all-but (-1 1))
      (("14" (rewrite "preserv_all_parallel_positions") nil nil)) nil)
     ("15" (hide 2)
      (("15" (typepred "fss!1")
        (("15" (expand "SPP?")
          (("15" (flatten)
            (("15" (rewrite "add_last_parallel_pos_to_PP_is_PP")
              (("15" (rewrite "add_last_parallel_pos_to_SP_is_SP") nil
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((add_last_parallel_pos_to_PP_is_PP formula-decl nil positions nil)
    (add_last_parallel_pos_to_SP_is_SP formula-decl nil positions nil)
    (SP type-eq-decl nil positions nil)
    (rest_of_PP_is_PP formula-decl nil positions nil)
    (PP? const-decl "bool" positions nil)
    (PP type-eq-decl nil positions nil)
    (replace_preserv_parallel_pos formula-decl nil replacement nil)
    (SP? const-decl "bool" positions nil)
    (rest_pos formula-decl nil seq_extras structures)
    (<= const-decl "bool" positions nil)
    (O const-decl "finseq" finite_sequences nil)
    (nth_add_last formula-decl nil seq_extras structures)
    (length_rest formula-decl nil seq_extras structures)
    (rest_add_last formula-decl nil seq_extras structures)
    (rest const-decl "finseq" seq_extras structures)
    (^ const-decl "finseq" finite_sequences nil)
    (empty_seq const-decl "finseq" finite_sequences nil)
    (insert? const-decl "finseq" seq_extras structures)
    (replaceTerm def-decl "term" replacement nil)
    (positions type-eq-decl nil positions nil)
    (positionsOF def-decl "positions" positions nil)
    (positions? type-eq-decl nil positions nil)
    (parallel const-decl "bool" positions nil)
    (finseq_appl const-decl "[below[length(fs)] -> T]" finite_sequences
     nil)
    (add_last const-decl "finseq" seq_extras structures)
    (SPP type-eq-decl nil positions nil)
    (SPP? const-decl "bool" positions nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (position type-eq-decl nil positions nil)
    (term type-decl nil term_adt nil)
    (well_founded? const-decl "bool" orders nil))
   shostak))
 (CP_lemma_aux2a1 0
  (CP_lemma_aux2a1-2 "" 3804386324
   ("" (measure-induct+ "length(fss)" ("s" "fss"))
    (("1" (skosimp*)
      (("1" (case "length(x!2) = 0")
        (("1" (hide (-2 -3))
          (("1" (expand "replace_pos")
            (("1" (lift-if)
              (("1" (lift-if)
                (("1" (prop)
                  (("1" (hide 1) (("1" (grind) nil nil)) nil)
                   ("2" (lemma "fspos.nth_add_first")
                    (("2" (inst?)
                      (("1" (replaces -1)
                        (("1" (rewrite "rest_add_first")
                          (("1" (expand "replace_pos")
                            (("1" (assert) nil nil)) nil))
                          nil))
                        nil)
                       ("2" (hide 3) (("2" (assert) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (expand "replace_pos" 2 1)
          (("2" (lift-if)
            (("2" (prop)
              (("1" (hide-all-but (-1 2)) (("1" (grind) nil nil)) nil)
               ("2" (rewrite "rest_add_first")
                (("2" (lemma "fspos.nth_add_first")
                  (("2" (inst?)
                    (("1" (replaces -1)
                      (("1" (expand "replace_pos" 2 1)
                        (("1" (lift-if)
                          (("1" (assert)
                            (("1" (expand "finseq_appl")
                              (("1"
                                (lemma "replace_commutativity")
                                (("1"
                                  (inst
                                   -1
                                   "q!1"
                                   "x!2`seq(0)"
                                   "t!1"
                                   "x!1"
                                   "t!1")
                                  (("1"
                                    (prop)
                                    (("1"
                                      (replaces -1)
                                      (("1"
                                        (inst
                                         -1
                                         "replaceTerm(x!1, t!1, x!2`seq(0))"
                                         "rest(x!2)")
                                        (("1"
                                          (inst -1 "t!1" "q!1")
                                          (("1"
                                            (rewrite "length_rest")
                                            (("1"
                                              (prop)
                                              (("1"
                                                (expand
                                                 "replace_pos"
                                                 -1
                                                 1)
                                                (("1"
                                                  (lift-if)
                                                  (("1"
                                                    (prop)
                                                    (("1"
                                                      (hide-all-but
                                                       (-1 3))
                                                      (("1"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (rewrite
                                                       "rest_add_first")
                                                      (("2"
                                                        (lemma
                                                         "fspos.nth_add_first")
                                                        (("2"
                                                          (inst?)
                                                          (("1"
                                                            (replaces
                                                             -1)
                                                            (("1"
                                                              (replaces
                                                               -1)
                                                              (("1"
                                                                (expand
                                                                 "replace_pos"
                                                                 3
                                                                 2)
                                                                (("1"
                                                                  (expand
                                                                   "finseq_appl")
                                                                  (("1"
                                                                    (propax)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide-all-but (-1 1 4))
                                                (("2"
                                                  (case
                                                   "length(rest(x!2)) = 0")
                                                  (("1"
                                                    (hide -2)
                                                    (("1"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (skosimp*)
                                                    (("2"
                                                      (lemma
                                                       "fspos.rest_pos")
                                                      (("2"
                                                        (inst?)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (inst
                                                             -1
                                                             "i!1")
                                                            (("1"
                                                              (expand
                                                               "finseq_appl")
                                                              (("1"
                                                                (inst
                                                                 -2
                                                                 "i!1 + 1")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil)
                                                                 ("2"
                                                                  (hide-all-but
                                                                   1)
                                                                  (("2"
                                                                    (typepred
                                                                     "i!1")
                                                                    (("2"
                                                                      (grind)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide-all-but
                                                               1)
                                                              (("2"
                                                                (typepred
                                                                 "i!1")
                                                                (("2"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (hide-all-but (-1 1 4))
                                          (("2"
                                            (typepred "x!2")
                                            (("2"
                                              (expand "SPP?")
                                              (("2"
                                                (flatten)
                                                (("2"
                                                  (rewrite
                                                   "rest_of_PP_is_PP")
                                                  (("2"
                                                    (expand*
                                                     "PP?"
                                                     "SP?")
                                                    (("2"
                                                      (prop)
                                                      (("1"
                                                        (grind)
                                                        nil
                                                        nil)
                                                       ("2"
                                                        (lemma
                                                         "fspos.rest_pos")
                                                        (("2"
                                                          (inst?)
                                                          (("2"
                                                            (prop)
                                                            (("1"
                                                              (skosimp*)
                                                              (("1"
                                                                (inst
                                                                 -1
                                                                 "i!1")
                                                                (("1"
                                                                  (inst
                                                                   -2
                                                                   "0"
                                                                   "i!1 + 1")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (copy
                                                                       -3)
                                                                      (("1"
                                                                        (inst
                                                                         -1
                                                                         "0")
                                                                        (("1"
                                                                          (inst
                                                                           -4
                                                                           "i!1 + 1")
                                                                          (("1"
                                                                            (expand
                                                                             "finseq_appl")
                                                                            (("1"
                                                                              (replace
                                                                               -2
                                                                               2
                                                                               rl)
                                                                              (("1"
                                                                                (hide
                                                                                 -2)
                                                                                (("1"
                                                                                  (lemma
                                                                                   "replace_preserv_parallel_pos")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -1
                                                                                     "x!2`seq(0)"
                                                                                     "x!2`seq(1 + i!1)"
                                                                                     "x!1"
                                                                                     "t!1")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("2"
                                                                              (typepred
                                                                               "i!1")
                                                                              (("2"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide-all-but
                                                                   1)
                                                                  (("2"
                                                                    (typepred
                                                                     "i!1")
                                                                    (("2"
                                                                      (grind)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide-all-but
                                                               (-1
                                                                2
                                                                3))
                                                              (("2"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (typepred "q!1")
                                      (("2" (propax) nil nil))
                                      nil)
                                     ("3"
                                      (hide-all-but (-2 1 4))
                                      (("3"
                                        (typepred "x!2")
                                        (("3"
                                          (expand "SPP?")
                                          (("3"
                                            (flatten)
                                            (("3"
                                              (hide -1)
                                              (("3"
                                                (expand "SP?")
                                                (("3"
                                                  (inst -1 "0")
                                                  (("3"
                                                    (expand
                                                     "finseq_appl")
                                                    (("3"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("4"
                                      (hide-all-but (-2 1))
                                      (("4"
                                        (inst -1 "0")
                                        (("4"
                                          (rewrite "parallel_comm")
                                          nil
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (assert) nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (hide-all-but (-2 1))
      (("2" (rewrite "preserv_all_parallel_positions") nil nil)) nil)
     ("3" (hide-all-but (-2 1))
      (("3" (typepred "y!2")
        (("3" (expand "SPP?")
          (("3" (flatten)
            (("3" (rewrite "add_first_parallel_pos_to_PP_is_PP")
              (("3" (rewrite "add_first_parallel_pos_to_SP_is_SP") nil
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("4" (hide-all-but 1)
      (("4" (skosimp*)
        (("4" (rewrite "preserv_all_parallel_positions") nil nil))
        nil))
      nil)
     ("5" (hide-all-but 1)
      (("5" (skosimp*)
        (("5" (typepred "y!2")
          (("5" (expand "SPP?")
            (("5" (flatten)
              (("5" (rewrite "add_first_parallel_pos_to_PP_is_PP")
                (("5" (rewrite "add_first_parallel_pos_to_SP_is_SP")
                  nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("6" (hide-all-but 1)
      (("6" (skosimp*)
        (("6" (rewrite "preserv_all_parallel_positions") nil nil))
        nil))
      nil)
     ("7" (hide-all-but (-2 1))
      (("7" (rewrite "preserv_all_parallel_positions") nil nil)) nil)
     ("8" (hide-all-but (-2 1))
      (("8" (typepred "y!1`2")
        (("8" (expand "SPP?")
          (("8" (flatten)
            (("8" (rewrite "add_first_parallel_pos_to_PP_is_PP")
              (("8" (rewrite "add_first_parallel_pos_to_SP_is_SP") nil
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("9" (hide-all-but 1)
      (("9" (skosimp*)
        (("9" (typepred "x!1`2")
          (("9" (expand "SPP?")
            (("9" (flatten)
              (("9" (rewrite "add_first_parallel_pos_to_PP_is_PP")
                (("9" (rewrite "add_first_parallel_pos_to_SP_is_SP")
                  nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("10" (hide-all-but (-2 1))
      (("10" (rewrite "preserv_all_parallel_positions") nil nil)) nil)
     ("11" (hide-all-but (-2 1))
      (("11" (typepred "y!1`2")
        (("11" (expand "SPP?")
          (("11" (flatten)
            (("11" (rewrite "add_first_parallel_pos_to_PP_is_PP")
              (("11" (rewrite "add_first_parallel_pos_to_SP_is_SP") nil
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("12" (hide-all-but 1)
      (("12" (skosimp*)
        (("12" (rewrite "preserv_all_parallel_positions") nil nil))
        nil))
      nil)
     ("13" (hide-all-but 1)
      (("13" (skosimp*)
        (("13" (typepred "y!1`2")
          (("13" (expand "SPP?")
            (("13" (flatten)
              (("13" (rewrite "add_first_parallel_pos_to_PP_is_PP")
                (("13" (rewrite "add_first_parallel_pos_to_SP_is_SP")
                  nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("14" (hide-all-but (-1 1))
      (("14" (rewrite "preserv_all_parallel_positions") nil nil)) nil)
     ("15" (hide 2)
      (("15" (typepred "fss!1")
        (("15" (expand "SPP?")
          (("15" (flatten)
            (("15" (rewrite "add_first_parallel_pos_to_PP_is_PP")
              (("15" (rewrite "add_first_parallel_pos_to_SP_is_SP") nil
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (CP_lemma_aux2a1-1 nil 3455273040
   ("" (measure-induct+ "length(fss)" ("s" "fss"))
    (("1" (skosimp*)
      (("1" (case "length(x!2) = 0")
        (("1" (hide (-2 -3))
          (("1" (expand "replace_pos")
            (("1" (lift-if)
              (("1" (lift-if)
                (("1" (prop)
                  (("1" (hide 1) (("1" (grind) nil nil)) nil)
                   ("2" (lemma "fspos.nth_add_first")
                    (("2" (inst?)
                      (("1" (replaces -1)
                        (("1" (rewrite "rest_add_first")
                          (("1" (expand "replace_pos")
                            (("1" (assert) nil nil)) nil))
                          nil))
                        nil)
                       ("2" (hide 3) (("2" (assert) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (expand "replace_pos" 2 1)
          (("2" (lift-if)
            (("2" (prop)
              (("1" (hide-all-but (-1 2)) (("1" (grind) nil nil)) nil)
               ("2" (rewrite "rest_add_first")
                (("2" (lemma "fspos.nth_add_first")
                  (("2" (inst?)
                    (("1" (replaces -1)
                      (("1" (expand "replace_pos" 2 1)
                        (("1" (lift-if)
                          (("1" (assert)
                            (("1" (expand "finseq_appl")
                              (("1"
                                (lemma "replace_commutativity")
                                (("1"
                                  (inst
                                   -1
                                   "q!1"
                                   "x!2`seq(0)"
                                   "t!1"
                                   "x!1"
                                   "t!1")
                                  (("1"
                                    (prop)
                                    (("1"
                                      (replaces -1)
                                      (("1"
                                        (inst
                                         -1
                                         "replaceTerm(x!1, t!1, x!2`seq(0))"
                                         "rest(x!2)")
                                        (("1"
                                          (inst -1 "t!1" "q!1")
                                          (("1"
                                            (rewrite "length_rest")
                                            (("1"
                                              (prop)
                                              (("1"
                                                (expand
                                                 "replace_pos"
                                                 -1
                                                 1)
                                                (("1"
                                                  (lift-if)
                                                  (("1"
                                                    (prop)
                                                    (("1"
                                                      (hide-all-but
                                                       (-1 3))
                                                      (("1"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (rewrite
                                                       "rest_add_first")
                                                      (("2"
                                                        (lemma
                                                         "fspos.nth_add_first")
                                                        (("2"
                                                          (inst?)
                                                          (("1"
                                                            (replaces
                                                             -1)
                                                            (("1"
                                                              (replaces
                                                               -1)
                                                              (("1"
                                                                (expand
                                                                 "replace_pos"
                                                                 3
                                                                 2)
                                                                (("1"
                                                                  (expand
                                                                   "finseq_appl")
                                                                  (("1"
                                                                    (propax)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide-all-but (-1 1 4))
                                                (("2"
                                                  (case
                                                   "length(rest(x!2)) = 0")
                                                  (("1"
                                                    (hide -2)
                                                    (("1"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (skosimp*)
                                                    (("2"
                                                      (lemma
                                                       "fspos.rest_pos")
                                                      (("2"
                                                        (inst?)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (inst
                                                             -1
                                                             "i!1")
                                                            (("1"
                                                              (expand
                                                               "finseq_appl")
                                                              (("1"
                                                                (inst
                                                                 -2
                                                                 "i!1 + 1")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil)
                                                                 ("2"
                                                                  (hide-all-but
                                                                   1)
                                                                  (("2"
                                                                    (typepred
                                                                     "i!1")
                                                                    (("2"
                                                                      (grind)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide-all-but
                                                               1)
                                                              (("2"
                                                                (typepred
                                                                 "i!1")
                                                                (("2"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (hide-all-but (-1 1 4))
                                          (("2"
                                            (typepred "x!2")
                                            (("2"
                                              (expand "SPP?")
                                              (("2"
                                                (flatten)
                                                (("2"
                                                  (rewrite
                                                   "rest_of_PP_is_PP")
                                                  (("2"
                                                    (expand*
                                                     "PP?"
                                                     "SP?")
                                                    (("2"
                                                      (prop)
                                                      (("1"
                                                        (grind)
                                                        nil
                                                        nil)
                                                       ("2"
                                                        (lemma
                                                         "fspos.rest_pos")
                                                        (("2"
                                                          (inst?)
                                                          (("2"
                                                            (prop)
                                                            (("1"
                                                              (skosimp*)
                                                              (("1"
                                                                (inst
                                                                 -1
                                                                 "i!1")
                                                                (("1"
                                                                  (inst
                                                                   -2
                                                                   "0"
                                                                   "i!1 + 1")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (copy
                                                                       -3)
                                                                      (("1"
                                                                        (inst
                                                                         -1
                                                                         "0")
                                                                        (("1"
                                                                          (inst
                                                                           -4
                                                                           "i!1 + 1")
                                                                          (("1"
                                                                            (expand
                                                                             "finseq_appl")
                                                                            (("1"
                                                                              (replace
                                                                               -2
                                                                               2
                                                                               rl)
                                                                              (("1"
                                                                                (hide
                                                                                 -2)
                                                                                (("1"
                                                                                  (lemma
                                                                                   "replace_preserv_parallel_pos")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -1
                                                                                     "x!2`seq(0)"
                                                                                     "x!2`seq(1 + i!1)"
                                                                                     "x!1"
                                                                                     "t!1")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("2"
                                                                              (typepred
                                                                               "i!1")
                                                                              (("2"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide-all-but
                                                                   1)
                                                                  (("2"
                                                                    (typepred
                                                                     "i!1")
                                                                    (("2"
                                                                      (grind)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide-all-but
                                                               (-1
                                                                2
                                                                3))
                                                              (("2"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (typepred "q!1")
                                      (("2" (propax) nil nil))
                                      nil)
                                     ("3"
                                      (hide-all-but (-2 1 4))
                                      (("3"
                                        (typepred "x!2")
                                        (("3"
                                          (expand "SPP?")
                                          (("3"
                                            (flatten)
                                            (("3"
                                              (hide -1)
                                              (("3"
                                                (expand "SP?")
                                                (("3"
                                                  (inst -1 "0")
                                                  (("3"
                                                    (expand
                                                     "finseq_appl")
                                                    (("3"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("4"
                                      (hide-all-but (-2 1))
                                      (("4"
                                        (inst -1 "0")
                                        (("4"
                                          (rewrite "parallel_comm")
                                          nil
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (assert) nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (hide-all-but (-1 1))
      (("2" (rewrite "preserv_all_parallel_positions") nil nil)) nil)
     ("3" (hide-all-but (-1 1))
      (("3" (typepred "y!2")
        (("3" (expand "SPP?")
          (("3" (flatten)
            (("3" (rewrite "add_first_parallel_pos_to_PP_is_PP")
              (("3" (rewrite "add_first_parallel_pos_to_SP_is_SP") nil
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("4" (hide-all-but 1)
      (("4" (skosimp*)
        (("4" (rewrite "preserv_all_parallel_positions") nil nil))
        nil))
      nil)
     ("5" (hide-all-but 1)
      (("5" (skosimp*)
        (("5" (typepred "y!2")
          (("5" (expand "SPP?")
            (("5" (flatten)
              (("5" (rewrite "add_first_parallel_pos_to_PP_is_PP")
                (("5" (rewrite "add_first_parallel_pos_to_SP_is_SP")
                  nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("6" (hide-all-but 1)
      (("6" (skosimp*)
        (("6" (rewrite "preserv_all_parallel_positions") nil nil))
        nil))
      nil)
     ("7" (hide-all-but (-1 1))
      (("7" (rewrite "preserv_all_parallel_positions") nil nil)) nil)
     ("8" (hide-all-but (-1 1))
      (("8" (typepred "y!1`2")
        (("8" (expand "SPP?")
          (("8" (flatten)
            (("8" (rewrite "add_first_parallel_pos_to_PP_is_PP")
              (("8" (rewrite "add_first_parallel_pos_to_SP_is_SP") nil
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("9" (hide-all-but 1)
      (("9" (skosimp*)
        (("9" (typepred "x!1`2")
          (("9" (expand "SPP?")
            (("9" (flatten)
              (("9" (rewrite "add_first_parallel_pos_to_PP_is_PP")
                (("9" (rewrite "add_first_parallel_pos_to_SP_is_SP")
                  nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("10" (hide-all-but (-1 1))
      (("10" (rewrite "preserv_all_parallel_positions") nil nil)) nil)
     ("11" (hide-all-but (-1 1))
      (("11" (typepred "y!1`2")
        (("11" (expand "SPP?")
          (("11" (flatten)
            (("11" (rewrite "add_first_parallel_pos_to_PP_is_PP")
              (("11" (rewrite "add_first_parallel_pos_to_SP_is_SP") nil
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("12" (hide-all-but 1)
      (("12" (skosimp*)
        (("12" (rewrite "preserv_all_parallel_positions") nil nil))
        nil))
      nil)
     ("13" (hide-all-but 1)
      (("13" (skosimp*)
        (("13" (typepred "y!1`2")
          (("13" (expand "SPP?")
            (("13" (flatten)
              (("13" (rewrite "add_first_parallel_pos_to_PP_is_PP")
                (("13" (rewrite "add_first_parallel_pos_to_SP_is_SP")
                  nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("14" (hide-all-but (-1 1))
      (("14" (rewrite "preserv_all_parallel_positions") nil nil)) nil)
     ("15" (hide 2)
      (("15" (typepred "fss!1")
        (("15" (expand "SPP?")
          (("15" (flatten)
            (("15" (rewrite "add_first_parallel_pos_to_PP_is_PP")
              (("15" (rewrite "add_first_parallel_pos_to_SP_is_SP") nil
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((add_first_parallel_pos_to_PP_is_PP formula-decl nil positions nil)
    (add_first_parallel_pos_to_SP_is_SP formula-decl nil positions nil)
    (SP type-eq-decl nil positions nil)
    (parallel_comm formula-decl nil positions nil)
    (replace_preserv_parallel_pos formula-decl nil replacement nil)
    (SP? const-decl "bool" positions nil)
    (rest_of_PP_is_PP formula-decl nil positions nil)
    (PP? const-decl "bool" positions nil)
    (PP type-eq-decl nil positions nil)
    (rest_pos formula-decl nil seq_extras structures)
    (<= const-decl "bool" positions nil)
    (O const-decl "finseq" finite_sequences nil)
    (^ const-decl "finseq" finite_sequences nil)
    (empty_seq const-decl "finseq" finite_sequences nil)
    (length_rest formula-decl nil seq_extras structures)
    (rest const-decl "finseq" seq_extras structures)
    (replace_commutativity formula-decl nil replacement nil)
    (rest_add_first formula-decl nil seq_extras structures)
    (nth_add_first formula-decl nil seq_extras structures)
    (insert? const-decl "finseq" seq_extras structures)
    (replaceTerm def-decl "term" replacement nil)
    (positions type-eq-decl nil positions nil)
    (positionsOF def-decl "positions" positions nil)
    (positions? type-eq-decl nil positions nil)
    (parallel const-decl "bool" positions nil)
    (finseq_appl const-decl "[below[length(fs)] -> T]" finite_sequences
     nil)
    (add_first const-decl "finseq" seq_extras structures)
    (SPP type-eq-decl nil positions nil)
    (SPP? const-decl "bool" positions nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (position type-eq-decl nil positions nil)
    (term type-decl nil term_adt nil)
    (well_founded? const-decl "bool" orders nil))
   shostak))
 (CP_lemma_aux2a2_TCC1 0
  (CP_lemma_aux2a2_TCC1-1 nil 3455272825
   ("" (skolem-typepred)
    (("" (expand "SPP?")
      (("" (flatten)
        (("" (rewrite "delete_of_PP_is_PP")
          (("" (rewrite "delete_of_SP_is_SP") nil nil)) nil))
        nil))
      nil))
    nil)
   ((delete_of_PP_is_PP formula-decl nil positions nil)
    (PP? const-decl "bool" positions nil)
    (PP type-eq-decl nil positions nil)
    (delete_of_SP_is_SP formula-decl nil positions nil)
    (SP? const-decl "bool" positions nil)
    (SP type-eq-decl nil positions nil)
    (SPP type-eq-decl nil positions nil)
    (SPP? const-decl "bool" positions nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (position type-eq-decl nil positions nil)
    (term type-decl nil term_adt nil))
   nil
   (CP_lemma_aux2a2 subtype
    "seq_extras[position[variable, symbol, arity]].delete(replace_positions.fss, replace_positions.i)"
    "positions[replace_positions.variable, replace_positions.symbol, replace_positions.arity].SPP(replace_positions.s)")))
 (CP_lemma_aux2a2_TCC2 0
  (CP_lemma_aux2a2_TCC2-1 nil 3455272825
   ("" (skolem-typepred)
    (("" (expand "finseq_appl")
      (("" (expand "SPP?")
        (("" (flatten)
          (("" (expand* "PP?" "SP?")
            (("" (rewrite "preserv_all_parallel_positions")
              (("1" (hide (-2 2))
                (("1" (prop)
                  (("1" (grind) nil nil)
                   ("2" (skosimp*)
                    (("2" (expand* "delete" "finseq_appl")
                      (("2" (lift-if)
                        (("2" (prop)
                          (("1" (inst -2 "i!2" "i!1")
                            (("1" (assert) nil nil)) nil)
                           ("2" (inst -1 "i!2 + 1" "i!1")
                            (("1" (assert) nil nil)
                             ("2" (typepred "i!2")
                              (("2"
                                (hide 3)
                                (("2" (grind) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (hide (-1 2))
                (("2" (inst -1 "i!1")
                  (("2" (expand "finseq_appl") (("2" (propax) nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((finseq_appl const-decl "[below[length(fs)] -> T]" finite_sequences
     nil)
    (delete const-decl "finseq" seq_extras structures)
    (positions type-eq-decl nil positions nil)
    (positionsOF def-decl "positions" positions nil)
    (positions? type-eq-decl nil positions nil)
    (parallel const-decl "bool" positions nil)
    (<= const-decl "bool" positions nil)
    (O const-decl "finseq" finite_sequences nil)
    (PP? const-decl "bool" positions nil)
    (SP? const-decl "bool" positions nil)
    (SPP type-eq-decl nil positions nil)
    (SPP? const-decl "bool" positions nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (position type-eq-decl nil positions nil)
    (term type-decl nil term_adt nil))
   nil
   (CP_lemma_aux2a2 subtype
    "finite_sequences[position[variable, symbol, arity]].finseq_appl(replace_positions.fss)(replace_positions.i)"
    "positions[replace_positions.variable, replace_positions.symbol, replace_positions.arity].positions?(replace_positions.replace_pos(replace_positions.s, replace_positions.t, seq_extras[position[variable, symbol, arity]].delete(replace_positions.fss, replace_positions.i)))")))
 (CP_lemma_aux2a2 0
  (CP_lemma_aux2a2-2 "" 3804386654
   ("" (measure-induct+ "length(fss)" ("s" "fss"))
    (("1" (case "length(x!2) = 0")
      (("1" (hide -2)
        (("1" (skolem 1 ("t" "_")) (("1" (grind) nil nil)) nil)) nil)
       ("2" (skosimp*)
        (("2" (expand* "finseq_appl")
          (("2" (case-replace "i!1 = 0")
            (("1" (hide -2)
              (("1" (lemma "fspos.delete_rest")
                (("1" (inst?)
                  (("1" (assert)
                    (("1" (replaces -1)
                      (("1" (lemma "CP_lemma_aux2a1")
                        (("1" (inst?)
                          (("1" (prop)
                            (("1" (lemma "fspos.seq_first_rest")
                              (("1"
                                (inst?)
                                (("1"
                                  (assert)
                                  (("1"
                                    (expand* "first" "finseq_appl")
                                    (("1"
                                      (replace -1 -2 rl)
                                      (("1" (propax) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide 3)
                              (("2"
                                (expand "finseq_appl")
                                (("2"
                                  (typepred "x!2")
                                  (("2"
                                    (expand "SPP?")
                                    (("2"
                                      (flatten)
                                      (("2"
                                        (hide -2)
                                        (("2"
                                          (expand "PP?")
                                          (("2"
                                            (prop)
                                            (("1" (grind) nil nil)
                                             ("2"
                                              (skosimp*)
                                              (("2"
                                                (inst -1 "i!2 + 1" "0")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (expand
                                                     "finseq_appl")
                                                    (("1"
                                                      (lemma
                                                       "fspos.rest_pos")
                                                      (("1"
                                                        (inst?)
                                                        (("1"
                                                          (prop)
                                                          (("1"
                                                            (inst
                                                             -1
                                                             "i!2")
                                                            (("1"
                                                              (expand
                                                               "finseq_appl")
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide-all-but
                                                               (1 4))
                                                              (("2"
                                                                (typepred
                                                                 "i!2")
                                                                (("2"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide 2)
                                                            (("2"
                                                              (grind)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide-all-but (1 4))
                                                  (("2"
                                                    (typepred "i!2")
                                                    (("2"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 3)
                            (("2" (typepred "x!2")
                              (("2"
                                (expand "SPP?")
                                (("2"
                                  (flatten)
                                  (("2"
                                    (hide -1)
                                    (("2"
                                      (expand "SP?")
                                      (("2"
                                        (inst -1 "0")
                                        (("2"
                                          (expand "finseq_appl")
                                          (("2" (propax) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (expand "replace_pos" 3 1)
              (("2" (expand "finseq_appl")
                (("2"
                  (inst -1 "replaceTerm(x!1, t!1, x!2`seq(0))"
                   "rest(x!2)")
                  (("2" (inst -1 "t!1" "i!1 - 1")
                    (("1" (rewrite "length_rest")
                      (("1" (lemma "fspos.rest_pos")
                        (("1" (inst?)
                          (("1" (prop)
                            (("1" (inst -1 "i!1 - 1")
                              (("1"
                                (expand "finseq_appl")
                                (("1"
                                  (replace -1 -2 rl)
                                  (("1"
                                    (hide -1)
                                    (("1"
                                      (lemma "fspos.delete_rest")
                                      (("1"
                                        (inst?)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (replaces -1)
                                            (("1"
                                              (expand
                                               "replace_pos"
                                               3
                                               2)
                                              (("1"
                                                (lift-if)
                                                (("1"
                                                  (prop)
                                                  (("1"
                                                    (hide (-2 1))
                                                    (("1"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (expand
                                                     "finseq_appl")
                                                    (("2"
                                                      (expand
                                                       "delete"
                                                       2
                                                       1)
                                                      (("2"
                                                        (expand
                                                         "finseq_appl")
                                                        (("2"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (assert) nil nil))
                              nil)
                             ("2" (hide (-2 3)) (("2" (grind) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide 4)
                      (("2" (typepred "i!1") (("2" (grind) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (hide-all-but 1)
      (("2" (rewrite "preserv_all_parallel_positions")
        (("1" (hide 2)
          (("1" (case "length(delete(y!2, i!1)) = 0")
            (("1" (grind) nil nil)
             ("2" (skosimp*)
              (("2" (expand "finseq_appl")
                (("2" (typepred "y!2")
                  (("2" (expand "SPP?")
                    (("2" (flatten)
                      (("2" (hide -2)
                        (("2" (expand "PP?")
                          (("2" (prop)
                            (("1" (grind) nil nil)
                             ("2" (case "i!2 < i!1")
                              (("1"
                                (expand* "delete" "finseq_appl")
                                (("1"
                                  (assert)
                                  (("1"
                                    (inst -2 "i!2" "i!1")
                                    (("1" (assert) nil nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (expand* "delete" "finseq_appl")
                                (("2"
                                  (assert)
                                  (("2"
                                    (inst -1 "i!2 + 1" "i!1")
                                    (("1" (assert) nil nil)
                                     ("2"
                                      (typepred "i!2")
                                      (("2"
                                        (hide 5)
                                        (("2" (grind) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (typepred "y!2")
          (("2" (expand "SPP?")
            (("2" (flatten)
              (("2" (hide (-1 2))
                (("2" (expand "SP?") (("2" (inst -1 "i!1") nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("3" (hide-all-but 1)
      (("3" (typepred "y!2")
        (("3" (expand "SPP?")
          (("3" (flatten)
            (("3" (rewrite "delete_of_PP_is_PP")
              (("3" (rewrite "delete_of_SP_is_SP") nil nil)) nil))
            nil))
          nil))
        nil))
      nil)
     ("4" (hide-all-but 1)
      (("4" (skosimp*)
        (("4" (rewrite "preserv_all_parallel_positions")
          (("1" (hide 2)
            (("1" (case "length(delete(y!2, i!1)) = 0")
              (("1" (grind) nil nil)
               ("2" (skosimp*)
                (("2" (expand "finseq_appl")
                  (("2" (typepred "y!2")
                    (("2" (expand "SPP?")
                      (("2" (flatten)
                        (("2" (hide -2)
                          (("2" (expand "PP?")
                            (("2" (prop)
                              (("1" (grind) nil nil)
                               ("2"
                                (case "i!2 < i!1")
                                (("1"
                                  (expand* "delete" "finseq_appl")
                                  (("1"
                                    (assert)
                                    (("1"
                                      (inst -2 "i!2" "i!1")
                                      (("1" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (expand* "delete" "finseq_appl")
                                  (("2"
                                    (assert)
                                    (("2"
                                      (inst -1 "i!2 + 1" "i!1")
                                      (("1" (assert) nil nil)
                                       ("2"
                                        (typepred "i!2")
                                        (("2"
                                          (hide 5)
                                          (("2" (grind) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (typepred "y!2")
            (("2" (expand "SPP?")
              (("2" (flatten)
                (("2" (hide (-1 2))
                  (("2" (expand "SP?") (("2" (inst -1 "i!1") nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("5" (expand "finseq_appl")
      (("5" (hide-all-but 1)
        (("5" (skosimp*)
          (("5" (typepred "y!2")
            (("5" (expand "SPP?")
              (("5" (flatten)
                (("5" (rewrite "delete_of_PP_is_PP")
                  (("5" (rewrite "delete_of_SP_is_SP") nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("6" (hide-all-but 1)
      (("6" (skosimp*)
        (("6" (rewrite "preserv_all_parallel_positions")
          (("1" (hide 2)
            (("1" (case "length(delete(x!1`2, i!1)) = 0")
              (("1" (grind) nil nil)
               ("2" (skosimp*)
                (("2" (expand "finseq_appl")
                  (("2" (typepred "x!1`2")
                    (("2" (expand "SPP?")
                      (("2" (flatten)
                        (("2" (hide -2)
                          (("2" (expand "PP?")
                            (("2" (prop)
                              (("1" (grind) nil nil)
                               ("2"
                                (expand* "delete" "finseq_appl")
                                (("2"
                                  (lift-if)
                                  (("2"
                                    (prop)
                                    (("1"
                                      (inst -2 "i!2" "i!1")
                                      (("1" (assert) nil nil))
                                      nil)
                                     ("2"
                                      (inst?)
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (hide 2)
            (("2" (typepred "x!1`2")
              (("2" (expand "SPP?")
                (("2" (flatten)
                  (("2" (hide -1)
                    (("2" (expand "SP?") (("2" (inst?) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("7" (expand "finseq_appl")
      (("7" (hide-all-but 1)
        (("7" (typepred "y!1`2")
          (("7" (expand "SPP?")
            (("7" (flatten)
              (("7" (expand* "PP?" "SP?")
                (("7" (rewrite "preserv_all_parallel_positions")
                  (("1" (hide (-2 2))
                    (("1" (prop)
                      (("1" (grind) nil nil)
                       ("2" (skosimp*)
                        (("2" (expand* "delete" "finseq_appl")
                          (("2" (lift-if)
                            (("2" (prop)
                              (("1"
                                (inst -2 "i!2" "i!1")
                                (("1" (assert) nil nil))
                                nil)
                               ("2"
                                (inst -1 "i!2 + 1" "i!1")
                                (("1" (assert) nil nil)
                                 ("2"
                                  (typepred "i!2")
                                  (("2"
                                    (hide 3)
                                    (("2" (grind) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (hide (-1 2))
                    (("2" (inst -1 "i!1")
                      (("2" (expand "finseq_appl")
                        (("2" (propax) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("8" (hide-all-but 1)
      (("8" (typepred "y!1`2")
        (("8" (expand "SPP?")
          (("8" (flatten)
            (("8" (rewrite "delete_of_PP_is_PP")
              (("8" (rewrite "delete_of_SP_is_SP") nil nil)) nil))
            nil))
          nil))
        nil))
      nil)
     ("9" (hide-all-but 1)
      (("9" (skosimp*)
        (("9" (typepred "x!1`2")
          (("9" (expand "SPP?")
            (("9" (flatten)
              (("9" (rewrite "delete_of_PP_is_PP")
                (("9" (rewrite "delete_of_SP_is_SP") nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("10" (hide-all-but 1)
      (("10" (typepred "y!1`2")
        (("10" (expand "SPP?")
          (("10" (flatten)
            (("10" (expand* "PP?" "SP?")
              (("10" (rewrite "preserv_all_parallel_positions")
                (("1" (hide (-2 2))
                  (("1" (prop)
                    (("1" (grind) nil nil)
                     ("2" (skosimp*)
                      (("2" (expand* "delete" "finseq_appl")
                        (("2" (lift-if)
                          (("2" (prop)
                            (("1" (inst -2 "i!2" "i!1")
                              (("1" (assert) nil nil)) nil)
                             ("2" (inst -1 "i!2 + 1" "i!1")
                              (("1" (assert) nil nil)
                               ("2"
                                (typepred "i!2")
                                (("2"
                                  (hide 3)
                                  (("2" (grind) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide (-1 2)) (("2" (inst -1 "i!1") nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("11" (expand "finseq_appl")
      (("11" (hide-all-but 1)
        (("11" (typepred "y!1`2")
          (("11" (expand "SPP?")
            (("11" (flatten)
              (("11" (rewrite "delete_of_PP_is_PP")
                (("11" (rewrite "delete_of_SP_is_SP") nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("12" (hide-all-but 1)
      (("12" (skosimp*)
        (("12" (typepred "y!1`2")
          (("12" (expand "SPP?")
            (("12" (flatten)
              (("12" (expand* "PP?" "SP?")
                (("12" (rewrite "preserv_all_parallel_positions")
                  (("1" (hide (-2 2))
                    (("1" (prop)
                      (("1" (grind) nil nil)
                       ("2" (skosimp*)
                        (("2" (expand* "delete" "finseq_appl")
                          (("2" (lift-if)
                            (("2" (prop)
                              (("1"
                                (inst -2 "i!2" "i!1")
                                (("1" (assert) nil nil))
                                nil)
                               ("2"
                                (inst -1 "i!2 + 1" "i!1")
                                (("1" (assert) nil nil)
                                 ("2"
                                  (typepred "i!2")
                                  (("2"
                                    (hide 3)
                                    (("2" (grind) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (hide (-1 2)) (("2" (inst -1 "i!1") nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("13" (expand "finseq_appl")
      (("13" (hide-all-but 1)
        (("13" (skosimp*)
          (("13" (typepred "y!1`2")
            (("13" (expand "SPP?")
              (("13" (flatten)
                (("13" (rewrite "delete_of_PP_is_PP")
                  (("13" (rewrite "delete_of_SP_is_SP") nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("14" (hide-all-but 1)
      (("14" (typepred "fss!1")
        (("14" (expand "SPP?")
          (("14" (flatten)
            (("14" (expand* "PP?" "SP?")
              (("14" (rewrite "preserv_all_parallel_positions")
                (("1" (hide (-2 2))
                  (("1" (prop)
                    (("1" (grind) nil nil)
                     ("2" (skosimp*)
                      (("2" (expand* "delete" "finseq_appl")
                        (("2" (lift-if)
                          (("2" (prop)
                            (("1" (inst -2 "i!2" "i!1")
                              (("1" (assert) nil nil)) nil)
                             ("2" (inst -1 "i!2 + 1" "i!1")
                              (("1" (assert) nil nil)
                               ("2"
                                (typepred "i!2")
                                (("2"
                                  (hide 3)
                                  (("2" (grind) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide (-1 2)) (("2" (inst -1 "i!1") nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("15" (expand "finseq_appl")
      (("15" (hide-all-but 1)
        (("15" (typepred "fss!1")
          (("15" (expand "SPP?")
            (("15" (flatten)
              (("15" (rewrite "delete_of_PP_is_PP")
                (("15" (rewrite "delete_of_SP_is_SP") nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (CP_lemma_aux2a2-1 nil 3455273190
   ("" (measure-induct+ "length(fss)" ("s" "fss"))
    (("1" (case "length(x!2) = 0")
      (("1" (hide -2)
        (("1" (skolem 1 ("t" "_")) (("1" (grind) nil nil)) nil)) nil)
       ("2" (skosimp*)
        (("2" (expand* "finseq_appl")
          (("2" (case-replace "i!1 = 0")
            (("1" (hide -2)
              (("1" (lemma "fspos.delete_rest")
                (("1" (inst?)
                  (("1" (assert)
                    (("1" (replaces -1)
                      (("1" (lemma "CP_lemma_aux2a1")
                        (("1" (inst?)
                          (("1" (prop)
                            (("1" (lemma "fspos.seq_first_rest")
                              (("1"
                                (inst?)
                                (("1"
                                  (assert)
                                  (("1"
                                    (expand* "first" "finseq_appl")
                                    (("1"
                                      (replace -1 -2 rl)
                                      (("1" (propax) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide 3)
                              (("2"
                                (expand "finseq_appl")
                                (("2"
                                  (typepred "x!2")
                                  (("2"
                                    (expand "SPP?")
                                    (("2"
                                      (flatten)
                                      (("2"
                                        (hide -2)
                                        (("2"
                                          (expand "PP?")
                                          (("2"
                                            (prop)
                                            (("1" (grind) nil nil)
                                             ("2"
                                              (skosimp*)
                                              (("2"
                                                (inst -1 "i!2 + 1" "0")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (expand
                                                     "finseq_appl")
                                                    (("1"
                                                      (lemma
                                                       "fspos.rest_pos")
                                                      (("1"
                                                        (inst?)
                                                        (("1"
                                                          (prop)
                                                          (("1"
                                                            (inst
                                                             -1
                                                             "i!2")
                                                            (("1"
                                                              (expand
                                                               "finseq_appl")
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide-all-but
                                                               (1 4))
                                                              (("2"
                                                                (typepred
                                                                 "i!2")
                                                                (("2"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide 2)
                                                            (("2"
                                                              (grind)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide-all-but (1 4))
                                                  (("2"
                                                    (typepred "i!2")
                                                    (("2"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 3)
                            (("2" (typepred "x!2")
                              (("2"
                                (expand "SPP?")
                                (("2"
                                  (flatten)
                                  (("2"
                                    (hide -1)
                                    (("2"
                                      (expand "SP?")
                                      (("2"
                                        (inst -1 "0")
                                        (("2"
                                          (expand "finseq_appl")
                                          (("2" (propax) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (expand "replace_pos" 3 1)
              (("2" (expand "finseq_appl")
                (("2"
                  (inst -1 "replaceTerm(x!1, t!1, x!2`seq(0))"
                   "rest(x!2)")
                  (("2" (inst -1 "t!1" "i!1 - 1")
                    (("1" (rewrite "length_rest")
                      (("1" (lemma "fspos.rest_pos")
                        (("1" (inst?)
                          (("1" (prop)
                            (("1" (inst -1 "i!1 - 1")
                              (("1"
                                (expand "finseq_appl")
                                (("1"
                                  (replace -1 -2 rl)
                                  (("1"
                                    (hide -1)
                                    (("1"
                                      (lemma "fspos.delete_rest")
                                      (("1"
                                        (inst?)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (replaces -1)
                                            (("1"
                                              (expand
                                               "replace_pos"
                                               3
                                               2)
                                              (("1"
                                                (lift-if)
                                                (("1"
                                                  (prop)
                                                  (("1"
                                                    (hide (-2 1))
                                                    (("1"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (expand
                                                     "finseq_appl")
                                                    (("2"
                                                      (expand
                                                       "delete"
                                                       2
                                                       1)
                                                      (("2"
                                                        (expand
                                                         "finseq_appl")
                                                        (("2"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (assert) nil nil))
                              nil)
                             ("2" (hide (-2 3)) (("2" (grind) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide 4)
                      (("2" (typepred "i!1") (("2" (grind) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (hide-all-but 1)
      (("2" (rewrite "preserv_all_parallel_positions")
        (("1" (hide 2)
          (("1" (case "length(delete(y!2, i!1)) = 0")
            (("1" (grind) nil nil)
             ("2" (skosimp*)
              (("2" (expand "finseq_appl")
                (("2" (typepred "y!2")
                  (("2" (expand "SPP?")
                    (("2" (flatten)
                      (("2" (hide -2)
                        (("2" (expand "PP?")
                          (("2" (prop)
                            (("1" (grind) nil nil)
                             ("2" (case "i!2 < i!1")
                              (("1"
                                (expand* "delete" "finseq_appl")
                                (("1"
                                  (assert)
                                  (("1"
                                    (inst -2 "i!2" "i!1")
                                    (("1" (assert) nil nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (expand* "delete" "finseq_appl")
                                (("2"
                                  (assert)
                                  (("2"
                                    (inst -1 "i!2 + 1" "i!1")
                                    (("1" (assert) nil nil)
                                     ("2"
                                      (typepred "i!2")
                                      (("2"
                                        (hide 5)
                                        (("2" (grind) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (typepred "y!2")
          (("2" (expand "SPP?")
            (("2" (flatten)
              (("2" (hide (-1 2))
                (("2" (expand "SP?") (("2" (inst -1 "i!1") nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("3" (hide-all-but 1)
      (("3" (typepred "y!2")
        (("3" (expand "SPP?")
          (("3" (flatten)
            (("3" (rewrite "delete_of_PP_is_PP")
              (("3" (rewrite "delete_of_SP_is_SP") nil nil)) nil))
            nil))
          nil))
        nil))
      nil)
     ("4" (hide-all-but 1)
      (("4" (skosimp*)
        (("4" (rewrite "preserv_all_parallel_positions")
          (("1" (hide 2)
            (("1" (case "length(delete(y!2, i!1)) = 0")
              (("1" (grind) nil nil)
               ("2" (skosimp*)
                (("2" (expand "finseq_appl")
                  (("2" (typepred "y!2")
                    (("2" (expand "SPP?")
                      (("2" (flatten)
                        (("2" (hide -2)
                          (("2" (expand "PP?")
                            (("2" (prop)
                              (("1" (grind) nil nil)
                               ("2"
                                (case "i!2 < i!1")
                                (("1"
                                  (expand* "delete" "finseq_appl")
                                  (("1"
                                    (assert)
                                    (("1"
                                      (inst -2 "i!2" "i!1")
                                      (("1" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (expand* "delete" "finseq_appl")
                                  (("2"
                                    (assert)
                                    (("2"
                                      (inst -1 "i!2 + 1" "i!1")
                                      (("1" (assert) nil nil)
                                       ("2"
                                        (typepred "i!2")
                                        (("2"
                                          (hide 5)
                                          (("2" (grind) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (typepred "y!2")
            (("2" (expand "SPP?")
              (("2" (flatten)
                (("2" (hide (-1 2))
                  (("2" (expand "SP?") (("2" (inst -1 "i!1") nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("5" (expand "finseq_appl")
      (("5" (hide-all-but 1)
        (("5" (skosimp*)
          (("5" (typepred "y!2")
            (("5" (expand "SPP?")
              (("5" (flatten)
                (("5" (rewrite "delete_of_PP_is_PP")
                  (("5" (rewrite "delete_of_SP_is_SP") nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("6" (hide-all-but 1)
      (("6" (skosimp*)
        (("6" (rewrite "preserv_all_parallel_positions")
          (("1" (hide 2)
            (("1" (case "length(delete(x!1`2, i1!1)) = 0")
              (("1" (grind) nil nil)
               ("2" (skosimp*)
                (("2" (expand "finseq_appl")
                  (("2" (typepred "x!1`2")
                    (("2" (expand "SPP?")
                      (("2" (flatten)
                        (("2" (hide -2)
                          (("2" (expand "PP?")
                            (("2" (prop)
                              (("1" (grind) nil nil)
                               ("2"
                                (expand* "delete" "finseq_appl")
                                (("2"
                                  (lift-if)
                                  (("2"
                                    (prop)
                                    (("1"
                                      (inst -2 "i!1" "i1!1")
                                      (("1" (assert) nil nil))
                                      nil)
                                     ("2"
                                      (inst -1 "i!1 + 1" "i1!1")
                                      (("1" (assert) nil nil)
                                       ("2"
                                        (typepred "i!1")
                                        (("2"
                                          (hide 3)
                                          (("2" (grind) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (hide 2)
            (("2" (typepred "x!1`2")
              (("2" (expand "SPP?")
                (("2" (flatten)
                  (("2" (hide -1)
                    (("2" (expand "SP?")
                      (("2" (inst -1 "i1!1") nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("7" (expand "finseq_appl")
      (("7" (hide-all-but 1)
        (("7" (typepred "y!1`2")
          (("7" (expand "SPP?")
            (("7" (flatten)
              (("7" (expand* "PP?" "SP?")
                (("7" (rewrite "preserv_all_parallel_positions")
                  (("1" (hide (-2 2))
                    (("1" (prop)
                      (("1" (grind) nil nil)
                       ("2" (skosimp*)
                        (("2" (expand* "delete" "finseq_appl")
                          (("2" (lift-if)
                            (("2" (prop)
                              (("1"
                                (inst -2 "i!2" "i!1")
                                (("1" (assert) nil nil))
                                nil)
                               ("2"
                                (inst -1 "i!2 + 1" "i!1")
                                (("1" (assert) nil nil)
                                 ("2"
                                  (typepred "i!2")
                                  (("2"
                                    (hide 3)
                                    (("2" (grind) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (hide (-1 2))
                    (("2" (inst -1 "i!1")
                      (("2" (expand "finseq_appl")
                        (("2" (propax) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("8" (hide-all-but 1)
      (("8" (typepred "y!1`2")
        (("8" (expand "SPP?")
          (("8" (flatten)
            (("8" (rewrite "delete_of_PP_is_PP")
              (("8" (rewrite "delete_of_SP_is_SP") nil nil)) nil))
            nil))
          nil))
        nil))
      nil)
     ("9" (hide-all-but 1)
      (("9" (skosimp*)
        (("9" (typepred "x!1`2")
          (("9" (expand "SPP?")
            (("9" (flatten)
              (("9" (rewrite "delete_of_PP_is_PP")
                (("9" (rewrite "delete_of_SP_is_SP") nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("10" (hide-all-but 1)
      (("10" (typepred "y!1`2")
        (("10" (expand "SPP?")
          (("10" (flatten)
            (("10" (expand* "PP?" "SP?")
              (("10" (rewrite "preserv_all_parallel_positions")
                (("1" (hide (-2 2))
                  (("1" (prop)
                    (("1" (grind) nil nil)
                     ("2" (skosimp*)
                      (("2" (expand* "delete" "finseq_appl")
                        (("2" (lift-if)
                          (("2" (prop)
                            (("1" (inst -2 "i!2" "i!1")
                              (("1" (assert) nil nil)) nil)
                             ("2" (inst -1 "i!2 + 1" "i!1")
                              (("1" (assert) nil nil)
                               ("2"
                                (typepred "i!2")
                                (("2"
                                  (hide 3)
                                  (("2" (grind) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide (-1 2)) (("2" (inst -1 "i!1") nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("11" (expand "finseq_appl")
      (("11" (hide-all-but 1)
        (("11" (typepred "y!1`2")
          (("11" (expand "SPP?")
            (("11" (flatten)
              (("11" (rewrite "delete_of_PP_is_PP")
                (("11" (rewrite "delete_of_SP_is_SP") nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("12" (hide-all-but 1)
      (("12" (skosimp*)
        (("12" (typepred "y!1`2")
          (("12" (expand "SPP?")
            (("12" (flatten)
              (("12" (expand* "PP?" "SP?")
                (("12" (rewrite "preserv_all_parallel_positions")
                  (("1" (hide (-2 2))
                    (("1" (prop)
                      (("1" (grind) nil nil)
                       ("2" (skosimp*)
                        (("2" (expand* "delete" "finseq_appl")
                          (("2" (lift-if)
                            (("2" (prop)
                              (("1"
                                (inst -2 "i!2" "i!1")
                                (("1" (assert) nil nil))
                                nil)
                               ("2"
                                (inst -1 "i!2 + 1" "i!1")
                                (("1" (assert) nil nil)
                                 ("2"
                                  (typepred "i!2")
                                  (("2"
                                    (hide 3)
                                    (("2" (grind) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (hide (-1 2)) (("2" (inst -1 "i!1") nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("13" (expand "finseq_appl")
      (("13" (hide-all-but 1)
        (("13" (skosimp*)
          (("13" (typepred "y!1`2")
            (("13" (expand "SPP?")
              (("13" (flatten)
                (("13" (rewrite "delete_of_PP_is_PP")
                  (("13" (rewrite "delete_of_SP_is_SP") nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("14" (hide-all-but 1)
      (("14" (typepred "fss!1")
        (("14" (expand "SPP?")
          (("14" (flatten)
            (("14" (expand* "PP?" "SP?")
              (("14" (rewrite "preserv_all_parallel_positions")
                (("1" (hide (-2 2))
                  (("1" (prop)
                    (("1" (grind) nil nil)
                     ("2" (skosimp*)
                      (("2" (expand* "delete" "finseq_appl")
                        (("2" (lift-if)
                          (("2" (prop)
                            (("1" (inst -2 "i!2" "i!1")
                              (("1" (assert) nil nil)) nil)
                             ("2" (inst -1 "i!2 + 1" "i!1")
                              (("1" (assert) nil nil)
                               ("2"
                                (typepred "i!2")
                                (("2"
                                  (hide 3)
                                  (("2" (grind) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide (-1 2)) (("2" (inst -1 "i!1") nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("15" (expand "finseq_appl")
      (("15" (hide-all-but 1)
        (("15" (typepred "fss!1")
          (("15" (expand "SPP?")
            (("15" (flatten)
              (("15" (rewrite "delete_of_PP_is_PP")
                (("15" (rewrite "delete_of_SP_is_SP") nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((delete_of_SP_is_SP formula-decl nil positions nil)
    (SP type-eq-decl nil positions nil)
    (delete_of_PP_is_PP formula-decl nil positions nil)
    (PP type-eq-decl nil positions nil)
    (length_rest formula-decl nil seq_extras structures)
    (SP? const-decl "bool" positions nil)
    (rest_pos formula-decl nil seq_extras structures)
    (parallel const-decl "bool" positions nil)
    (<= const-decl "bool" positions nil)
    (O const-decl "finseq" finite_sequences nil)
    (^ const-decl "finseq" finite_sequences nil)
    (empty_seq const-decl "finseq" finite_sequences nil)
    (PP? const-decl "bool" positions nil)
    (first const-decl "T" seq_extras structures)
    (seq_first_rest formula-decl nil seq_extras structures)
    (rest const-decl "finseq" seq_extras structures)
    (delete_rest formula-decl nil seq_extras structures)
    (replaceTerm def-decl "term" replacement nil)
    (positions? type-eq-decl nil positions nil)
    (positions type-eq-decl nil positions nil)
    (positionsOF def-decl "positions" positions nil)
    (finseq_appl const-decl "[below[length(fs)] -> T]" finite_sequences
     nil)
    (delete const-decl "finseq" seq_extras structures)
    (SPP type-eq-decl nil positions nil)
    (SPP? const-decl "bool" positions nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (position type-eq-decl nil positions nil)
    (term type-decl nil term_adt nil)
    (well_founded? const-decl "bool" orders nil))
   shostak))
 (CP_lemma_aux2a3 0
  (CP_lemma_aux2a3-1 nil 3455273398
   ("" (measure-induct+ "fss1`length" ("s" "fss1"))
    (("" (skosimp*)
      (("" (copy -2)
        (("" (expand "equivalent" -3)
          (("" (flatten)
            (("" (case-replace "length(x!2) = 0")
              (("1" (hide-all-but (-1 -2 -4 1))
                (("1" (expand "replace_pos") (("1" (assert) nil nil))
                  nil))
                nil)
               ("2" (lemma "CP_lemma_aux2a2")
                (("2" (copy -1)
                  (("2" (inst -1 "t!1" "x!1" "x!2" "0")
                    (("1" (replaces -1)
                      (("1" (inst -7 "0")
                        (("1" (skosimp*)
                          (("1" (expand "finseq_appl")
                            (("1" (inst -1 "t!1" "x!1" "fss2!1" "j!1")
                              (("1"
                                (replaces -1)
                                (("1"
                                  (replace -6 2)
                                  (("1"
                                    (inst -2 "x!1" "delete(x!2, 0)")
                                    (("1"
                                      (inst
                                       -2
                                       "t!1"
                                       "delete(fss2!1, j!1)")
                                      (("1"
                                        (prop)
                                        (("1" (assert) nil nil)
                                         ("2"
                                          (hide 3)
                                          (("2"
                                            (expand "equivalent")
                                            (("2"
                                              (prop)
                                              (("1"
                                                (hide (-2 -3 -4))
                                                (("1"
                                                  (expand "delete")
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide-all-but (-2 1 2))
                                                (("2"
                                                  (expand
                                                   "different_elements")
                                                  (("2"
                                                    (skosimp*)
                                                    (("2"
                                                      (expand "delete")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (expand
                                                           "finseq_appl")
                                                          (("2"
                                                            (inst
                                                             -2
                                                             "1 + i!1"
                                                             "1 + j!2")
                                                            (("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("3"
                                                (hide-all-but
                                                 (-3 -5 1 2))
                                                (("3"
                                                  (replaces -2)
                                                  (("3"
                                                    (expand
                                                     "different_elements")
                                                    (("3"
                                                      (skosimp*)
                                                      (("3"
                                                        (expand
                                                         "delete")
                                                        (("3"
                                                          (expand
                                                           "finseq_appl")
                                                          (("3"
                                                            (lift-if)
                                                            (("3"
                                                              (lift-if)
                                                              (("3"
                                                                (prop)
                                                                (("1"
                                                                  (inst
                                                                   -4
                                                                   "i!1"
                                                                   "j!2")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (inst
                                                                   -3
                                                                   "i!1"
                                                                   "1 + j!2")
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil)
                                                                 ("3"
                                                                  (lift-if)
                                                                  (("3"
                                                                    (prop)
                                                                    (("1"
                                                                      (inst
                                                                       -3
                                                                       "1 + i!1"
                                                                       "j!2")
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (inst
                                                                       -2
                                                                       "1 + i!1"
                                                                       "1 + j!2")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("4"
                                                (skosimp*)
                                                (("4"
                                                  (expand
                                                   "finseq_appl")
                                                  (("4"
                                                    (hide (-5 -6 -7))
                                                    (("4"
                                                      (lemma
                                                       "fspos.delete_equivalent")
                                                      (("4"
                                                        (inst
                                                         -1
                                                         "x!2"
                                                         "fss2!1"
                                                         "0"
                                                         "j!1")
                                                        (("4"
                                                          (expand
                                                           "finseq_appl")
                                                          (("4"
                                                            (prop)
                                                            (("1"
                                                              (expand
                                                               "equivalent")
                                                              (("1"
                                                                (expand
                                                                 "finseq_appl")
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (inst
                                                                     -4
                                                                     "i!1")
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (expand
                                                               "equivalent")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (skosimp*)
                                                                  (("2"
                                                                    (expand
                                                                     "finseq_appl")
                                                                    (("2"
                                                                      (inst
                                                                       -4
                                                                       "i!2")
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("3"
                                          (hide (-1 -3 -4 3))
                                          (("3" (grind) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (assert) nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((different_elements const-decl "bool" seq_extras structures)
    (delete_equivalent formula-decl nil seq_extras structures)
    (delete const-decl "finseq" seq_extras structures)
    (finseq_appl const-decl "[below[length(fs)] -> T]" finite_sequences
     nil)
    (equivalent const-decl "bool" seq_extras structures)
    (SPP type-eq-decl nil positions nil)
    (SPP? const-decl "bool" positions nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (position type-eq-decl nil positions nil)
    (term type-decl nil term_adt nil)
    (well_founded? const-decl "bool" orders nil))
   shostak)))