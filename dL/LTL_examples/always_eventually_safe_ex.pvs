always_eventually_safe_ex  % [ parameters ]
		: THEORY

  BEGIN
  
%-----------------------------------
%% Importing Differential Dynamic Logic
%-----------------------------------
  IMPORTING dL@top,
            dL@temporal_logic,
            analysis@derivative_props

%-----------------------------------
%% Define the variables
%-----------------------------------
  x: dLVar = dlvar(0)
  y: dLVar = dlvar(1)
  X: RealExpr = val(x)
  Y: RealExpr = val(y)

  %%Dynamics defined by
  f:{ff:(ODEs_s?(hp(0))) | length(ff)=2 AND nth(ff,1)`1 = y AND 
            EXISTS(eps:posreal): 
              FORALL(env:Environment): (nth(ff,1)`2)(env) > eps}

  Always_eventually_safe: LEMMA
  ALLRUNS_tr(SEQ(DIFF(f),TEST((Y>=0))),
              DLEVENTUALLY(DLGLOBALLY(State_Trace((Y>=0)))))


  END always_eventually_safe_ex
