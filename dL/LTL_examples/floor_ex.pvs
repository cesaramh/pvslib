floor_ex : THEORY

  BEGIN

%-----------------------------------
%% Importing Differential Dynamic Logic
%-----------------------------------
  IMPORTING dL@top

%-----------------------------------
%% Define the variables
%-----------------------------------
x: dLVar 


%------------------------------------
%% The Hybrid Program
%% 〈 {x'=6};(x:=5) 〉◇(x!=5)
%------------------------------------
eventually_not_assign: LEMMA
SOMERUNS_tr(SEQ(DIFF((: x << cnst(6) :)),ASSIGN((: x << cnst(5) :))),
                      DLEVENTUALLY(State_Trace(DLNOT(val(x)=5))))

end_state_5: LEMMA
ALLRUNS(SEQ(DIFF((:(x,cnst(6)):)),ASSIGN((: x << cnst(5) :))),(val(x)=5))


% floor example
IMPORTING ints@rem
floor_re(re:RealExpr)(env:Environment): (integer?) = floor(re(env))
integer_re?(re:RealExpr)(env:Environment): bool = integer?(re(env))

% □ 
eventually_not_int: LEMMA
SOMERUNS_tr(SEQ(DIFF((: x << cnst(6) :)),ASSIGN((: x << floor_re(val(x)) :))),
                  DLEVENTUALLY(State_Trace(NOT integer_re?(val(x)))))

end_state_int: LEMMA
ALLRUNS(SEQ(DIFF((: x << cnst(6) :)),ASSIGN((: x << floor_re(val(x)) :))),
                                              integer_re?(val(x)))

  END floor_ex
