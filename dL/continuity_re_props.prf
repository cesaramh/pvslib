(continuity_re_props
 (cont_re_val 0
  (cont_re_val-1 nil 3870861590
   ("" (skeep)
    (("" (expand "cont_re?")
      (("" (skeep)
        (("" (expand "inf_norm_bound?")
          (("" (expand "val")
            (("" (inst 1 "epsilon")
              (("" (skeep) (("" (inst -1 "dlvar_index(v)") nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((real_minus_real_is_real application-judgement "real" reals nil)
    (cont_re? const-decl "bool" continuity_re_def nil)
    (inf_norm_bound? const-decl "bool" continuity_re_def nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (dLVar type-decl nil hp_def nil)
    (dlvar_index adt-accessor-decl "[dLVar -> nat]" hp_def nil)
    (val const-decl "real" hp_def nil))
   shostak))
 (cont_re_cnst 0
  (cont_re_cnst-1 nil 3870861751
   ("" (skeep)
    (("" (expand "cont_re?")
      (("" (skeep)
        (("" (inst 1 "epsilon")
          (("" (skeep)
            (("" (expand "cnst")
              (("" (assert)
                (("" (typepred "epsilon")
                  (("" (expand "abs") (("" (assert) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((real_minus_real_is_real application-judgement "real" reals nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (cnst const-decl "real" hp_def nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs
         nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_abs_is_nonneg application-judgement "{j: nonneg_int | j >= i}"
     real_defs nil))
   shostak))
 (cont_re_prod 0
  (cont_re_prod-1 nil 3870862284
   ("" (skeep)
    (("" (typepred "re1")
      (("" (typepred "re2")
        (("" (expand "cont_re?")
          (("" (skeep)
            (("" (expand "inf_norm_bound?")
              (("" (expand "*")
                ((""
                  (inst -1 "env0"
                   "epsilon/(2*(abs(re1(env0))+epsilon))")
                  (("" (skeep)
                    (("" (inst -2 "env0" _)
                      (("" (copy -2)
                        (("" (inst -1 "epsilon")
                          (("" (skeep)
                            ((""
                              (inst -3 "epsilon/(2*abs(re2(env0))+1)")
                              ((""
                                (skeep)
                                ((""
                                  (inst
                                   1
                                   "min(delta,min(delta!1,delta!2))")
                                  ((""
                                    (skeep)
                                    ((""
                                      (inst -1 "env")
                                      ((""
                                        (inst -2 "env")
                                        ((""
                                          (inst -3 "env")
                                          ((""
                                            (split)
                                            (("1"
                                              (split)
                                              (("1"
                                                (split)
                                                (("1"
                                                  (hide -4)
                                                  (("1"
                                                    (case
                                                     "re1(env) * re2(env) - re1(env0) * re2(env0) = re1(env) * (re2(env)-re2(env0)) +(re1(env)- re1(env0)) * re2(env0)")
                                                    (("1"
                                                      (replace -1)
                                                      (("1"
                                                        (hide -1)
                                                        (("1"
                                                          (lemma
                                                           "triangle")
                                                          (("1"
                                                            (inst
                                                             -1
                                                             "re1(env) * (re2(env) - re2(env0))"
                                                             "(re1(env) - re1(env0)) * re2(env0)")
                                                            (("1"
                                                              (lemma
                                                               "abs_mult")
                                                              (("1"
                                                                (copy
                                                                 -1)
                                                                (("1"
                                                                  (inst
                                                                   -1
                                                                   "re1(env)"
                                                                   "(re2(env) - re2(env0))")
                                                                  (("1"
                                                                    (replace
                                                                     -1)
                                                                    (("1"
                                                                      (hide
                                                                       -1)
                                                                      (("1"
                                                                        (inst
                                                                         -1
                                                                         "(re1(env) - re1(env0))"
                                                                         "re2(env0)")
                                                                        (("1"
                                                                          (replace
                                                                           -1)
                                                                          (("1"
                                                                            (hide
                                                                             -1)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (case
                                                                                 "re1(env) = 0 AND re2(env0) = 0")
                                                                                (("1"
                                                                                  (flatten)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -1)
                                                                                      (("1"
                                                                                        (replace
                                                                                         -2)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (case
                                                                                   "abs(re1(env) * re2(env) - re1(env0) * re2(env0)) < abs(re1(env))*epsilon / (2 * abs(re1(env0)) + 2 * epsilon) + abs(re2(env0))*epsilon / (1 + 2 * abs(re2(env0)))")
                                                                                  (("1"
                                                                                    (hide
                                                                                     -2
                                                                                     -3
                                                                                     -4)
                                                                                    (("1"
                                                                                      (lemma
                                                                                       "abs_diff")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -1
                                                                                         "re1(env)"
                                                                                         "re1(env0)")
                                                                                        (("1"
                                                                                          (case
                                                                                           "abs(re1(env)) <= abs(re1(env0)) + epsilon")
                                                                                          (("1"
                                                                                            (hide
                                                                                             -4
                                                                                             -2)
                                                                                            (("1"
                                                                                              (case
                                                                                               "abs(re1(env)) * epsilon / (2 * abs(re1(env0)) + 2 * epsilon) <= epsilon/2")
                                                                                              (("1"
                                                                                                (case
                                                                                                 "abs(re2(env0)) * epsilon / (1 + 2 * abs(re2(env0))) <= epsilon/2")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (grind-reals)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (case
                                                                                                 "abs(re1(env)) * epsilon / (2 * abs(re1(env0)) + 2 * epsilon) = (abs(re1(env))/(abs(re1(env0)) + epsilon))*epsilon/2")
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (case
                                                                                                       "abs(re1(env))/(abs(re1(env0)) + epsilon) <= 1")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (name
                                                                                                           "X"
                                                                                                           "abs(re1(env)) / (abs(re1(env0)) + epsilon)")
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (hide
                                                                                                               -1
                                                                                                               -3
                                                                                                               -4
                                                                                                               -5
                                                                                                               2)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (typepred
                                                                                                                   "epsilon")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (hide
                                                                                                                       2)
                                                                                                                      (("1"
                                                                                                                        (grind)
                                                                                                                        (("1"
                                                                                                                          (both-sides
                                                                                                                           "*"
                                                                                                                           "2/epsilon")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (hide
                                                                                                         2
                                                                                                         3
                                                                                                         4
                                                                                                         -1
                                                                                                         -3)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (both-sides
                                                                                                             "*"
                                                                                                             "(abs(re1(env0)) + epsilon)")
                                                                                                            (("1"
                                                                                                              (name
                                                                                                               "X"
                                                                                                               "abs(re1(env0)) + epsilon")
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (hide
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (grind)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (hide
                                                                                                     2
                                                                                                     3
                                                                                                     4
                                                                                                     -)
                                                                                                    (("2"
                                                                                                      (name
                                                                                                       "X"
                                                                                                       "abs(re1(env))")
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (hide
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (name
                                                                                                             "Y"
                                                                                                             "abs(re1(env0))")
                                                                                                            (("2"
                                                                                                              (replace
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (hide
                                                                                                                 -1)
                                                                                                                (("2"
                                                                                                                  (grind-reals)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (hide
                                                                                     3
                                                                                     -4)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (name
                                                                                         "X"
                                                                                         "abs(re1(env) * re2(env) - re1(env0) * re2(env0))")
                                                                                        (("2"
                                                                                          (replace
                                                                                           -1)
                                                                                          (("2"
                                                                                            (hide
                                                                                             -1)
                                                                                            (("2"
                                                                                              (name
                                                                                               "Y"
                                                                                               "abs((re2(env) - re2(env0)))")
                                                                                              (("2"
                                                                                                (replace
                                                                                                 -1)
                                                                                                (("2"
                                                                                                  (hide
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (name
                                                                                                     "Z"
                                                                                                     "abs((re1(env) - re1(env0)))")
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (hide
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (name
                                                                                                           "A"
                                                                                                           "epsilon / (2 * abs(re1(env0)) + 2 * epsilon)")
                                                                                                          (("2"
                                                                                                            (replace
                                                                                                             -1)
                                                                                                            (("2"
                                                                                                              (name
                                                                                                               "B"
                                                                                                               "epsilon / (1 + 2 * abs(re2(env0)))")
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -1)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (case
                                                                                                                     "abs(re1(env)) * epsilon / (2 * abs(re1(env0)) + 2 * epsilon) + abs(re2(env0)) * epsilon / (1 + 2 * abs(re2(env0))) = abs(re1(env)) * (epsilon / (2 * abs(re1(env0)) + 2 * epsilon)) + abs(re2(env0)) * (epsilon / (1 + 2 * abs(re2(env0))))")
                                                                                                                    (("1"
                                                                                                                      (replace
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (replace
                                                                                                                         -2)
                                                                                                                        (("1"
                                                                                                                          (replace
                                                                                                                           -3)
                                                                                                                          (("1"
                                                                                                                            (hide
                                                                                                                             -1
                                                                                                                             -2
                                                                                                                             -3)
                                                                                                                            (("1"
                                                                                                                              (name
                                                                                                                               "a"
                                                                                                                               "abs(re1(env))")
                                                                                                                              (("1"
                                                                                                                                (name
                                                                                                                                 "b"
                                                                                                                                 "abs(re2(env0))")
                                                                                                                                (("1"
                                                                                                                                  (replace
                                                                                                                                   -1)
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -2)
                                                                                                                                    (("1"
                                                                                                                                      (case
                                                                                                                                       "Z * b + a * Y < a * A + b * B")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (case
                                                                                                                                         "a>0 OR b>0")
                                                                                                                                        (("1"
                                                                                                                                          (typepred
                                                                                                                                           "a")
                                                                                                                                          (("1"
                                                                                                                                            (typepred
                                                                                                                                             "b")
                                                                                                                                            (("1"
                                                                                                                                              (hide
                                                                                                                                               -2
                                                                                                                                               -3
                                                                                                                                               -5
                                                                                                                                               -6
                                                                                                                                               -8
                                                                                                                                               -9
                                                                                                                                               3
                                                                                                                                               2)
                                                                                                                                              (("1"
                                                                                                                                                (split)
                                                                                                                                                (("1"
                                                                                                                                                  (case
                                                                                                                                                   "a*Y < a*A")
                                                                                                                                                  (("1"
                                                                                                                                                    (case
                                                                                                                                                     "Z*b <= b*B")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (grind)
                                                                                                                                                      (("2"
                                                                                                                                                        (grind-reals)
                                                                                                                                                        (("2"
                                                                                                                                                          (case
                                                                                                                                                           "b*Z = Z*b")
                                                                                                                                                          (("1"
                                                                                                                                                            (replace
                                                                                                                                                             -1)
                                                                                                                                                            (("1"
                                                                                                                                                              (replace
                                                                                                                                                               -1
                                                                                                                                                               1
                                                                                                                                                               rl)
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (grind)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (assert)
                                                                                                                                                    (("2"
                                                                                                                                                      (grind-reals)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (case
                                                                                                                                                   "a*Y <= a*A")
                                                                                                                                                  (("1"
                                                                                                                                                    (case
                                                                                                                                                     "Z*b < b*B")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (case
                                                                                                                                                       "Z*b = b*Z")
                                                                                                                                                      (("1"
                                                                                                                                                        (replace
                                                                                                                                                         -1)
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          (("1"
                                                                                                                                                            (grind)
                                                                                                                                                            (("1"
                                                                                                                                                              (grind-reals)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (grind)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (grind-reals)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (hide
                                                                                                                                           2
                                                                                                                                           3
                                                                                                                                           -3
                                                                                                                                           -4
                                                                                                                                           -5)
                                                                                                                                          (("2"
                                                                                                                                            (split)
                                                                                                                                            (("1"
                                                                                                                                              (flatten)
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "abs")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (expand
                                                                                                                                               "abs")
                                                                                                                                              (("2"
                                                                                                                                                (assert)
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (skeep)
                                                  (("2"
                                                    (inst?)
                                                    (("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (skeep)
                                                (("2"
                                                  (inst?)
                                                  (("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (skeep)
                                              (("2"
                                                (inst?)
                                                (("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((RealExpr type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (Environment type-eq-decl nil hp_def nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (inf_norm_bound? const-decl "bool" continuity_re_def nil)
    (posreal_div_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (/= const-decl "boolean" notequal nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs
         nil)
    (nnreal_plus_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (posreal_min application-judgement
     "{z: posreal | z <= x AND z <= y}" real_defs nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (<= const-decl "bool" reals nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (triangle formula-decl nil real_props nil)
    (abs_mult formula-decl nil real_props nil)
    (posreal_plus_nnreal_is_posreal application-judgement "posreal"
     real_types nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (< const-decl "bool" reals nil)
    (abs_diff formula-decl nil abs_lems reals)
    (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (times_div1 formula-decl nil real_props nil)
    (div_mult_pos_le1 formula-decl nil real_props nil)
    (div_mult_pos_le2 formula-decl nil real_props nil)
    (div_div2 formula-decl nil real_props nil)
    (times_div2 formula-decl nil real_props nil)
    (nnreal type-eq-decl nil real_types nil)
    (both_sides_times_pos_le2 formula-decl nil real_props nil)
    (neg_times_lt formula-decl nil real_props nil)
    (neg_times_le formula-decl nil real_props nil)
    (div_simp formula-decl nil real_props nil)
    (div_times formula-decl nil real_props nil)
    (both_sides_div_pos_le1 formula-decl nil real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (div_cancel2 formula-decl nil real_props nil)
    (le_times_le_pos formula-decl nil real_props nil)
    (TRUE const-decl "bool" booleans nil)
    (lt_times_lt_pos1 formula-decl nil real_props nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (odd_plus_even_is_odd application-judgement "odd_int" integers nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (int_abs_is_nonneg application-judgement "{j: nonneg_int | j >= i}"
     real_defs nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil))
   shostak))
 (cont_re_pow 0
  (cont_re_pow-1 nil 3870868809
   ("" (induct "p")
    (("1" (skeep)
      (("1" (expand "^")
        (("1" (expand "^")
          (("1" (expand "expt")
            (("1" (lemma "cont_re_cnst")
              (("1" (inst -1 "P" "1")
                (("1" (expand "cnst") (("1" (propax) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (skeep)
      (("2" (expand "^" 1)
        (("2" (expand "^" 1)
          (("2" (expand "expt")
            (("2" (expand "^")
              (("2" (expand "^")
                (("2" (skeep)
                  (("2" (inst -1 "P" "re")
                    (("2" (typepred "re")
                      (("2" (lemma "cont_re_prod")
                        (("2" (inst -1 "P" "re" "re^j")
                          (("1" (expand "^")
                            (("1" (expand "^") (("1" (grind) nil nil))
                              nil))
                            nil)
                           ("2" (expand "^")
                            (("2" (expand "^") (("2" (propax) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((NOT const-decl "[bool -> bool]" booleans nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (inf_norm_bound? const-decl "bool" continuity_re_def nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs
         nil)
    (cont_re_prod formula-decl nil continuity_re_props nil)
    (^ const-decl "real" exponentiation nil)
    (cont_re_cnst formula-decl nil continuity_re_props nil)
    (cnst const-decl "real" hp_def nil)
    (expt def-decl "real" exponentiation nil)
    (nat_induction formula-decl nil naturalnumbers nil)
    (^ const-decl "[T -> real]" real_fun_ops reals)
    (RealExpr type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (Environment type-eq-decl nil hp_def nil)
    (pred type-eq-decl nil defined_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil))
   shostak))
 (cont_re_sum 0
  (cont_re_sum-1 nil 3870863788
   ("" (skeep)
    (("" (typepred "re1")
      (("" (typepred "re2")
        (("" (expand "cont_re?")
          (("" (skeep)
            (("" (expand "+")
              (("" (inst -1 "env0" "epsilon/2")
                (("" (inst -2 "env0" "epsilon/2")
                  (("" (skeep)
                    (("" (skeep)
                      (("" (inst 1 "min(delta,delta!1)")
                        (("" (skeep)
                          (("" (inst?)
                            (("" (inst?)
                              ((""
                                (assert)
                                ((""
                                  (expand "inf_norm_bound?")
                                  ((""
                                    (split)
                                    (("1"
                                      (lemma "triangle")
                                      (("1"
                                        (inst
                                         -1
                                         "re1(env) - re1(env0)"
                                         "re2(env) - re2(env0)")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (skeep)
                                            (("1"
                                              (inst?)
                                              (("1" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (skeep)
                                      (("2"
                                        (inst?)
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((RealExpr type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (Environment type-eq-decl nil hp_def nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (inf_norm_bound? const-decl "bool" continuity_re_def nil)
    (triangle formula-decl nil real_props nil)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (<= const-decl "bool" reals nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (posreal_min application-judgement
     "{z: posreal | z <= x AND z <= y}" real_defs nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/= const-decl "boolean" notequal nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal_div_posreal_is_posreal application-judgement "posreal"
     real_types nil))
   shostak))
 (cont_re_diff 0
  (cont_re_diff-1 nil 3871485658
   ("" (skeep)
    (("" (lemma "cont_re_sum")
      (("" (lemma "cont_re_prod")
        (("" (inst -1 "P" "cnst(-1)" "re2")
          (("1" (inst -2 "P" "re1" "cnst(-1) * re2")
            (("1" (assert)
              (("1" (expand "cnst")
                (("1" (expand "*")
                  (("1" (expand "+")
                    (("1" (expand "-") (("1" (propax) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (lemma "cont_re_cnst") (("2" (inst? -1) nil nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((cont_re_sum formula-decl nil continuity_re_props nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (cnst const-decl "real" hp_def nil)
    (RealExpr type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (Environment type-eq-decl nil hp_def nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (cont_re_cnst formula-decl nil continuity_re_props nil)
    (cont_re_prod formula-decl nil continuity_re_props nil))
   shostak))
 (cont_re_div_aux 0
  (cont_re_div_aux-2 nil 3901962590
   ("" (skeep)
    (("" (typepred "re1")
      (("" (typepred "re2")
        (("" (expand "cont_re?")
          (("" (skeep)
            (("" (expand "/")
              (("" (copy -2)
                (("" (inst -1 "env0" "epsilon")
                  (("" (inst -3 "env0" "abs(re2(env0))*epsilon/2")
                    (("1" (skeep*)
                      (("1" (copy -2)
                        (("1" (inst -1 "env0" "abs(re2(env0))/2")
                          (("1" (skeep*)
                            (("1"
                              (inst -3 "env0"
                               "(abs(re2(env0))^2)/(abs(re1(env0))+epsilon)*epsilon/6")
                              (("1"
                                (skeep*)
                                (("1"
                                  (inst
                                   1
                                   "min(delta,min(delta!1,min(delta!2,delta!3)))")
                                  (("1"
                                    (skeep)
                                    (("1"
                                      (inst -1 "env")
                                      (("1"
                                        (inst -2 "env")
                                        (("1"
                                          (inst -3 "env")
                                          (("1"
                                            (inst -4 "env")
                                            (("1"
                                              (split)
                                              (("1"
                                                (split)
                                                (("1"
                                                  (split)
                                                  (("1"
                                                    (split)
                                                    (("1"
                                                      (name
                                                       "x1"
                                                       "re1(env)")
                                                      (("1"
                                                        (replace -1)
                                                        (("1"
                                                          (name
                                                           "x2"
                                                           "re1(env0)")
                                                          (("1"
                                                            (replace
                                                             -1)
                                                            (("1"
                                                              (name
                                                               "y1"
                                                               "re2(env)")
                                                              (("1"
                                                                (replace
                                                                 -1)
                                                                (("1"
                                                                  (name
                                                                   "y2"
                                                                   "re2(env0)")
                                                                  (("1"
                                                                    (replace
                                                                     -1)
                                                                    (("1"
                                                                      (hide
                                                                       -1
                                                                       -2
                                                                       -3
                                                                       -4)
                                                                      (("1"
                                                                        (case
                                                                         "x1 / y1 - x2 / y2 = (x1-x2)/y2 + x1/(y1*y2)*(y2-y1)")
                                                                        (("1"
                                                                          (replace
                                                                           -1)
                                                                          (("1"
                                                                            (hide
                                                                             -1)
                                                                            (("1"
                                                                              (hide
                                                                               -6)
                                                                              (("1"
                                                                                (lemma
                                                                                 "triangle")
                                                                                (("1"
                                                                                  (inst
                                                                                   -1
                                                                                   "(x1 - x2) / y2"
                                                                                   "x1 / (y1 * y2) * (y2 - y1)")
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "abs_mult")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -1
                                                                                       "x1 / (y1 * y2)"
                                                                                       "(y2 - y1)")
                                                                                      (("1"
                                                                                        (replace
                                                                                         -1)
                                                                                        (("1"
                                                                                          (hide
                                                                                           -1)
                                                                                          (("1"
                                                                                            (lemma
                                                                                             "abs_div")
                                                                                            (("1"
                                                                                              (inst
                                                                                               -1
                                                                                               "y2"
                                                                                               "(x1 - x2)")
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (hide
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "abs_div")
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -1
                                                                                                       "y1*y2"
                                                                                                       "x1")
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (hide
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (lemma
                                                                                                             "abs_diff")
                                                                                                            (("1"
                                                                                                              (copy
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -1
                                                                                                                 "x1"
                                                                                                                 "x2")
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -2
                                                                                                                   "y2"
                                                                                                                   "y1")
                                                                                                                  (("1"
                                                                                                                    (case
                                                                                                                     "abs(y1) >= abs(y2)/2")
                                                                                                                    (("1"
                                                                                                                      (case
                                                                                                                       "abs(x1) <= (epsilon + abs(x2))")
                                                                                                                      (("1"
                                                                                                                        (hide
                                                                                                                         -3
                                                                                                                         -4
                                                                                                                         -8
                                                                                                                         -9)
                                                                                                                        (("1"
                                                                                                                          (case
                                                                                                                           "abs((x1 - x2)) / abs(y2) < epsilon/2")
                                                                                                                          (("1"
                                                                                                                            (case
                                                                                                                             "abs(x1)/(epsilon + abs(x2)) <= 1")
                                                                                                                            (("1"
                                                                                                                              (case
                                                                                                                               "abs(x1) / abs(y1 * y2) * abs((y2 - y1)) < epsilon/2")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (case
                                                                                                                                 "x1=0")
                                                                                                                                (("1"
                                                                                                                                  (replace
                                                                                                                                   -1)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "abs"
                                                                                                                                     1
                                                                                                                                     1)
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (case
                                                                                                                                   "abs((y2-y1)) = abs(y1 - y2)")
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (hide
                                                                                                                                       -1)
                                                                                                                                      (("1"
                                                                                                                                        (mult-by
                                                                                                                                         -7
                                                                                                                                         "abs(x1) / abs(y1 * y2)")
                                                                                                                                        (("1"
                                                                                                                                          (lemma
                                                                                                                                           "abs_mult")
                                                                                                                                          (("1"
                                                                                                                                            (inst
                                                                                                                                             -1
                                                                                                                                             "y1"
                                                                                                                                             "y2")
                                                                                                                                            (("1"
                                                                                                                                              (replace
                                                                                                                                               -1)
                                                                                                                                              (("1"
                                                                                                                                                (hide
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "^"
                                                                                                                                                     -7)
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "expt")
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "expt")
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "expt")
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            (("1"
                                                                                                                                                              (case
                                                                                                                                                               "abs(y2) * abs(y2) / (abs(x2) + epsilon) * epsilon / 6 * (abs(x1) / (abs(y1) * abs(y2))) = (abs(x1) / (abs(x2) + epsilon) )*(abs(y2)/abs(y1))* epsilon / 6 ")
                                                                                                                                                              (("1"
                                                                                                                                                                (replace
                                                                                                                                                                 -1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (hide
                                                                                                                                                                   -1)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (mult-by
                                                                                                                                                                     -4
                                                                                                                                                                     "2")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (case
                                                                                                                                                                         "(abs(x1) / (abs(x2) + epsilon)) * (abs(y2) / abs(y1)) * epsilon / 6 < epsilon/2")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (hide
                                                                                                                                                                           2
                                                                                                                                                                           3
                                                                                                                                                                           4
                                                                                                                                                                           -3
                                                                                                                                                                           -4
                                                                                                                                                                           -5
                                                                                                                                                                           -6
                                                                                                                                                                           -7
                                                                                                                                                                           -8)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (name
                                                                                                                                                                             "X"
                                                                                                                                                                             "abs(x1) / (abs(x2) + epsilon)")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (replace
                                                                                                                                                                               -1)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (hide
                                                                                                                                                                                 -1)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (div-by
                                                                                                                                                                                   -1
                                                                                                                                                                                   "abs(y1)")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (case
                                                                                                                                                                                       "2 * (abs(y2) / 2) / abs(y1) = abs(y2) / abs(y1)")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (replace
                                                                                                                                                                                         -1)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (hide
                                                                                                                                                                                           -1)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (name
                                                                                                                                                                                             "Y"
                                                                                                                                                                                             "abs(y2) / abs(y1)")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (replace
                                                                                                                                                                                               -1)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (hide
                                                                                                                                                                                                 -1)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (mult-by
                                                                                                                                                                                                   -2
                                                                                                                                                                                                   "Y*epsilon/6")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (mult-by
                                                                                                                                                                                                       -2
                                                                                                                                                                                                       "epsilon/6")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        nil
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil)
                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                    (typepred
                                                                                                                                                                                                     "Y")
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (case
                                                                                                                                                                                                       "Y>0")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (mult-by
                                                                                                                                                                                                           -1
                                                                                                                                                                                                           "epsilon/6")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            nil
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil)
                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                        (hide
                                                                                                                                                                                                         2
                                                                                                                                                                                                         3
                                                                                                                                                                                                         -)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (reveal
                                                                                                                                                                                                           -)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (replace
                                                                                                                                                                                                             -5
                                                                                                                                                                                                             1
                                                                                                                                                                                                             rl)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (copy
                                                                                                                                                                                                               -15)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (inst
                                                                                                                                                                                                                 -1
                                                                                                                                                                                                                 "env")
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (inst
                                                                                                                                                                                                                   -16
                                                                                                                                                                                                                   "env0")
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (replace
                                                                                                                                                                                                                     -37)
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (replace
                                                                                                                                                                                                                       -38)
                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                        (case
                                                                                                                                                                                                                         "abs(y2) > 0 and abs(y1) > 0")
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (flatten)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (name
                                                                                                                                                                                                                             "X2"
                                                                                                                                                                                                                             "abs(y2)")
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (replace
                                                                                                                                                                                                                               -1)
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (name
                                                                                                                                                                                                                                 "X1"
                                                                                                                                                                                                                                 "abs(y1)")
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (replace
                                                                                                                                                                                                                                   -1)
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (div-by
                                                                                                                                                                                                                                     -3
                                                                                                                                                                                                                                     "X1")
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (hide
                                                                                                                                                                                                                                       -)
                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                        (reveal
                                                                                                                                                                                                                                         -3)
                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                                          (split)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                             "abs"
                                                                                                                                                                                                                             1)
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (split)
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (flatten)
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (hide
                                                                                                                                                                                                                                     2
                                                                                                                                                                                                                                     3
                                                                                                                                                                                                                                     4
                                                                                                                                                                                                                                     -)
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (reveal
                                                                                                                                                                                                                                       -1)
                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                        (grind)
                                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil)
                                                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                                                  (flatten)
                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil)
                                                                                                                                                                                                                           ("2"
                                                                                                                                                                                                                            (hide
                                                                                                                                                                                                                             -
                                                                                                                                                                                                                             2)
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (reveal
                                                                                                                                                                                                                               -1)
                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                                 "abs")
                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                  (lift-if)
                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                    (split)
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (flatten)
                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil)
                                                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                                                      (flatten)
                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (grind-reals)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "abs"
                                                                                                                                       1)
                                                                                                                                      (("2"
                                                                                                                                        (lift-if)
                                                                                                                                        (("2"
                                                                                                                                          (lift-if)
                                                                                                                                          (("2"
                                                                                                                                            (lift-if)
                                                                                                                                            (("2"
                                                                                                                                              (grind)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (grind-reals)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (grind-reals)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (grind-reals)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (case
                                                                                                                         "abs(y1-y2) = abs(y2-y1)")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (grind)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (grind)
                                                                          nil
                                                                          nil)
                                                                         ("3"
                                                                          (reveal
                                                                           -)
                                                                          (("3"
                                                                            (replace
                                                                             -1
                                                                             1
                                                                             rl)
                                                                            (("3"
                                                                              (replace
                                                                               -2
                                                                               1
                                                                               rl)
                                                                              (("3"
                                                                                (copy
                                                                                 -15)
                                                                                (("3"
                                                                                  (inst
                                                                                   -1
                                                                                   "env")
                                                                                  (("3"
                                                                                    (inst
                                                                                     -16
                                                                                     "env0")
                                                                                    (("3"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand
                                                       "inf_norm_bound?")
                                                      (("2"
                                                        (skeep)
                                                        (("2"
                                                          (inst -5 "i")
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (expand
                                                     "inf_norm_bound?")
                                                    (("2"
                                                      (skeep)
                                                      (("2"
                                                        (inst -5 "i")
                                                        (("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (expand
                                                   "inf_norm_bound?")
                                                  (("2"
                                                    (skeep)
                                                    (("2"
                                                      (inst -5 "i")
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (expand
                                                 "inf_norm_bound?")
                                                (("2"
                                                  (skeep)
                                                  (("2"
                                                    (inst -5 "i")
                                                    (("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (typepred "epsilon")
                                (("2"
                                  (assert)
                                  (("2"
                                    (name "Y" "abs(re2(env0))")
                                    (("2"
                                      (replace -1)
                                      (("2"
                                        (name "X" "abs(re1(env0))")
                                        (("2"
                                          (replace -1)
                                          (("2"
                                            (assert)
                                            (("2"
                                              (hide -)
                                              (("2"
                                                (hide 2)
                                                (("2"
                                                  (grind-reals)
                                                  (("2"
                                                    (both-sides
                                                     "*"
                                                     "(6 * X + 6 * epsilon)")
                                                    (("1"
                                                      (case
                                                       "(((Y ^ 2) * epsilon) / (6 * X + 6 * epsilon)) = ((Y ^ 2) * epsilon) / (6 * X + 6 * epsilon)")
                                                      (("1"
                                                        (replace -1)
                                                        (("1"
                                                          (hide -1)
                                                          (("1"
                                                            (name
                                                             "Z"
                                                             "(6 * X + 6 * epsilon)")
                                                            (("1"
                                                              (replace
                                                               -1)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (hide
                                                                   -1)
                                                                  (("1"
                                                                    (case
                                                                     "Y/=0")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (grind-reals)
                                                                        (("1"
                                                                          (reveal
                                                                           -)
                                                                          (("1"
                                                                            (inst
                                                                             -11
                                                                             "env0")
                                                                            (("1"
                                                                              (replace
                                                                               -5
                                                                               1
                                                                               rl)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (reveal
                                                                       -)
                                                                      (("2"
                                                                        (inst
                                                                         -11
                                                                         "env0")
                                                                        (("2"
                                                                          (replace
                                                                           -5
                                                                           1
                                                                           rl)
                                                                          (("2"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (assert)
                                                      (("2"
                                                        (name
                                                         "Z"
                                                         "(6 * X + 6 * epsilon)")
                                                        (("2"
                                                          (replace -1)
                                                          (("2"
                                                            (both-sides
                                                             "*"
                                                             "Z")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (hide
                                                                 -1)
                                                                (("1"
                                                                  (grind)
                                                                  (("1"
                                                                    (grind-reals)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (grind-reals)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (grind) nil nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide 2 -2 -1)
                      (("2" (inst -1 "env0")
                        (("2" (assert)
                          (("2" (name "X" "re2(env0)")
                            (("2" (replace -1)
                              (("2"
                                (hide -1)
                                (("2"
                                  (expand "abs")
                                  (("2"
                                    (assert)
                                    (("2"
                                      (lift-if)
                                      (("2"
                                        (split)
                                        (("1"
                                          (flatten)
                                          (("1" (grind-reals) nil nil))
                                          nil)
                                         ("2" (grind-reals) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    nil nil nil nil
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs
         nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/= const-decl "boolean" notequal nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (div_cancel2 formula-decl nil real_props nil)
    (nnreal_expt application-judgement "nnreal" exponentiation nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (triangle formula-decl nil real_props nil)
    (abs_mult formula-decl nil real_props nil)
    (abs_div formula-decl nil real_props nil)
    (abs_diff formula-decl nil abs_lems reals)
    (div_mult_pos_lt1 formula-decl nil real_props nil)
    (div_div2 formula-decl nil real_props nil)
    (times_div2 formula-decl nil real_props nil)
    (nonzero_times2 formula-decl nil real_props nil)
    (div_mult_pos_ge2 formula-decl nil real_props nil)
    (div_mult_pos_lt2 formula-decl nil real_props nil)
    (times_div1 formula-decl nil real_props nil)
    (both_sides_times_pos_lt1 formula-decl nil real_props nil) nil nil
    nil
    (both_sides_times_pos_ge1_imp formula-decl nil extra_real_props
     nil)
    (nnreal type-eq-decl nil real_types nil)
    (nonzero_abs_is_pos application-judgement "{y: posreal | y >= x}"
     real_defs nil)
    (both_sides_div_pos_gt1 formula-decl nil real_props nil) nil
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (both_sides_times_pos_gt1 formula-decl nil real_props nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    nil
    (both_sides_times_pos_le1_imp formula-decl nil extra_real_props
     nil)
    (times_div_cancel2 formula-decl nil extra_real_props nil)
    (both_sides_div_pos_ge1 formula-decl nil real_props nil)
    (expt def-decl "real" exponentiation nil)
    (neg_times_le formula-decl nil real_props nil)
    (neg_times_lt formula-decl nil real_props nil)
    (zero_times1 formula-decl nil real_props nil)
    (div_mult_pos_ge1 formula-decl nil real_props nil)
    (nonzero_times3 formula-decl nil real_props nil)
    (neg_times_gt formula-decl nil real_props nil)
    (pos_times_gt formula-decl nil real_props nil)
    (pos_div_gt formula-decl nil real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (div_mult_pos_le1 formula-decl nil real_props nil)
    (< const-decl "bool" reals nil)
    (posreal_div_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (posreal_plus_nnreal_is_posreal application-judgement "posreal"
     real_types nil)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (inf_norm_bound? const-decl "bool" continuity_re_def nil)
    (<= const-decl "bool" reals nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (posreal_min application-judgement
     "{z: posreal | z <= x AND z <= y}" real_defs nil)
    nil
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (^ const-decl "real" exponentiation nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (nnreal_plus_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (nnreal_exp application-judgement "nnreal" exponentiation nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (TRUE const-decl "bool" booleans nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil) nil
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (Environment type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil) nil
    (RealExpr type-eq-decl nil hp_def nil) nil)
   nil)
  (cont_re_div_aux-1 nil 3901891742
   ("" (skeep)
    (("" (typepred "re1")
      (("" (typepred "re2")
        (("" (expand "cont_re?")
          (("" (skeep)
            (("" (copy -2)
              (("" (inst -1 "env0" "epsilon")
                (("" (inst -3 "env0" "abs(re2(env0))*epsilon/2")
                  (("1" (skeep*)
                    (("1" (copy -2)
                      (("1" (inst -1 "env0" "abs(re2(env0))/2")
                        (("1" (skeep*)
                          (("1"
                            (inst -3 "env0"
                             "(abs(re2(env0))^2)/(abs(re1(env0))+epsilon)*epsilon/6")
                            (("1" (skeep*)
                              (("1"
                                (inst
                                 1
                                 "min(delta,min(delta!1,min(delta!2,delta!3)))")
                                (("1"
                                  (skeep)
                                  (("1"
                                    (inst -1 "env")
                                    (("1"
                                      (inst -2 "env")
                                      (("1"
                                        (inst -3 "env")
                                        (("1"
                                          (inst -4 "env")
                                          (("1"
                                            (split)
                                            (("1"
                                              (split)
                                              (("1"
                                                (split)
                                                (("1"
                                                  (split)
                                                  (("1"
                                                    (name
                                                     "x1"
                                                     "re1(env)")
                                                    (("1"
                                                      (replace -1)
                                                      (("1"
                                                        (name
                                                         "x2"
                                                         "re1(env0)")
                                                        (("1"
                                                          (replace -1)
                                                          (("1"
                                                            (name
                                                             "y1"
                                                             "re2(env)")
                                                            (("1"
                                                              (replace
                                                               -1)
                                                              (("1"
                                                                (name
                                                                 "y2"
                                                                 "re2(env0)")
                                                                (("1"
                                                                  (replace
                                                                   -1)
                                                                  (("1"
                                                                    (hide
                                                                     -1
                                                                     -2
                                                                     -3
                                                                     -4)
                                                                    (("1"
                                                                      (case
                                                                       "x1 / y1 - x2 / y2 = (x1-x2)/y2 + x1/(y1*y2)*(y2-y1)")
                                                                      (("1"
                                                                        (replace
                                                                         -1)
                                                                        (("1"
                                                                          (hide
                                                                           -1)
                                                                          (("1"
                                                                            (hide
                                                                             -6)
                                                                            (("1"
                                                                              (lemma
                                                                               "triangle")
                                                                              (("1"
                                                                                (inst
                                                                                 -1
                                                                                 "(x1 - x2) / y2"
                                                                                 "x1 / (y1 * y2) * (y2 - y1)")
                                                                                (("1"
                                                                                  (lemma
                                                                                   "abs_mult")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -1
                                                                                     "x1 / (y1 * y2)"
                                                                                     "(y2 - y1)")
                                                                                    (("1"
                                                                                      (replace
                                                                                       -1)
                                                                                      (("1"
                                                                                        (hide
                                                                                         -1)
                                                                                        (("1"
                                                                                          (lemma
                                                                                           "abs_div")
                                                                                          (("1"
                                                                                            (inst
                                                                                             -1
                                                                                             "y2"
                                                                                             "(x1 - x2)")
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("1"
                                                                                                (hide
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "abs_div")
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -1
                                                                                                     "y1*y2"
                                                                                                     "x1")
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (lemma
                                                                                                           "abs_diff")
                                                                                                          (("1"
                                                                                                            (copy
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -1
                                                                                                               "x1"
                                                                                                               "x2")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -2
                                                                                                                 "y2"
                                                                                                                 "y1")
                                                                                                                (("1"
                                                                                                                  (case
                                                                                                                   "abs(y1) >= abs(y2)/2")
                                                                                                                  (("1"
                                                                                                                    (case
                                                                                                                     "abs(x1) <= (epsilon + abs(x2))")
                                                                                                                    (("1"
                                                                                                                      (hide
                                                                                                                       -3
                                                                                                                       -4
                                                                                                                       -8
                                                                                                                       -9)
                                                                                                                      (("1"
                                                                                                                        (case
                                                                                                                         "abs((x1 - x2)) / abs(y2) < epsilon/2")
                                                                                                                        (("1"
                                                                                                                          (case
                                                                                                                           "abs(x1)/(epsilon + abs(x2)) <= 1")
                                                                                                                          (("1"
                                                                                                                            (case
                                                                                                                             "abs(x1) / abs(y1 * y2) * abs((y2 - y1)) < epsilon/2")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (case
                                                                                                                               "x1=0")
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "abs"
                                                                                                                                   1
                                                                                                                                   1)
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (case
                                                                                                                                 "abs((y2-y1)) = abs(y1 - y2)")
                                                                                                                                (("1"
                                                                                                                                  (replace
                                                                                                                                   -1)
                                                                                                                                  (("1"
                                                                                                                                    (hide
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (mult-by
                                                                                                                                       -7
                                                                                                                                       "abs(x1) / abs(y1 * y2)")
                                                                                                                                      (("1"
                                                                                                                                        (lemma
                                                                                                                                         "abs_mult")
                                                                                                                                        (("1"
                                                                                                                                          (inst
                                                                                                                                           -1
                                                                                                                                           "y1"
                                                                                                                                           "y2")
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -1)
                                                                                                                                            (("1"
                                                                                                                                              (hide
                                                                                                                                               -1)
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "^"
                                                                                                                                                   -7)
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "expt")
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "expt")
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "expt")
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          (("1"
                                                                                                                                                            (case
                                                                                                                                                             "abs(y2) * abs(y2) / (abs(x2) + epsilon) * epsilon / 6 * (abs(x1) / (abs(y1) * abs(y2))) = (abs(x1) / (abs(x2) + epsilon) )*(abs(y2)/abs(y1))* epsilon / 6 ")
                                                                                                                                                            (("1"
                                                                                                                                                              (replace
                                                                                                                                                               -1)
                                                                                                                                                              (("1"
                                                                                                                                                                (hide
                                                                                                                                                                 -1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (mult-by
                                                                                                                                                                   -4
                                                                                                                                                                   "2")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (case
                                                                                                                                                                       "(abs(x1) / (abs(x2) + epsilon)) * (abs(y2) / abs(y1)) * epsilon / 6 < epsilon/2")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        nil
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (hide
                                                                                                                                                                         2
                                                                                                                                                                         3
                                                                                                                                                                         4
                                                                                                                                                                         -3
                                                                                                                                                                         -4
                                                                                                                                                                         -5
                                                                                                                                                                         -6
                                                                                                                                                                         -7
                                                                                                                                                                         -8)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (name
                                                                                                                                                                           "X"
                                                                                                                                                                           "abs(x1) / (abs(x2) + epsilon)")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (replace
                                                                                                                                                                             -1)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (hide
                                                                                                                                                                               -1)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (div-by
                                                                                                                                                                                 -1
                                                                                                                                                                                 "abs(y1)")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (case
                                                                                                                                                                                     "2 * (abs(y2) / 2) / abs(y1) = abs(y2) / abs(y1)")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (replace
                                                                                                                                                                                       -1)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (hide
                                                                                                                                                                                         -1)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (name
                                                                                                                                                                                           "Y"
                                                                                                                                                                                           "abs(y2) / abs(y1)")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (replace
                                                                                                                                                                                             -1)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (hide
                                                                                                                                                                                               -1)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (mult-by
                                                                                                                                                                                                 -2
                                                                                                                                                                                                 "Y*epsilon/6")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (mult-by
                                                                                                                                                                                                     -2
                                                                                                                                                                                                     "epsilon/6")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil)
                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                  (typepred
                                                                                                                                                                                                   "Y")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (case
                                                                                                                                                                                                     "Y>0")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (mult-by
                                                                                                                                                                                                         -1
                                                                                                                                                                                                         "epsilon/6")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                      (hide
                                                                                                                                                                                                       2
                                                                                                                                                                                                       3
                                                                                                                                                                                                       -)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (reveal
                                                                                                                                                                                                         -)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (replace
                                                                                                                                                                                                           -5
                                                                                                                                                                                                           1
                                                                                                                                                                                                           rl)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (copy
                                                                                                                                                                                                             -15)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (inst
                                                                                                                                                                                                               -1
                                                                                                                                                                                                               "env")
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (inst
                                                                                                                                                                                                                 -16
                                                                                                                                                                                                                 "env0")
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (replace
                                                                                                                                                                                                                   -37)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (replace
                                                                                                                                                                                                                     -38)
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (case
                                                                                                                                                                                                                       "abs(y2) > 0 and abs(y1) > 0")
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (flatten)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (name
                                                                                                                                                                                                                           "X2"
                                                                                                                                                                                                                           "abs(y2)")
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (replace
                                                                                                                                                                                                                             -1)
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (name
                                                                                                                                                                                                                               "X1"
                                                                                                                                                                                                                               "abs(y1)")
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (replace
                                                                                                                                                                                                                                 -1)
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (div-by
                                                                                                                                                                                                                                   -3
                                                                                                                                                                                                                                   "X1")
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (hide
                                                                                                                                                                                                                                     -)
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (reveal
                                                                                                                                                                                                                                       -3)
                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil)
                                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                                        (split)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (expand
                                                                                                                                                                                                                           "abs"
                                                                                                                                                                                                                           1)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (lift-if)
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (split)
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (hide
                                                                                                                                                                                                                                   2
                                                                                                                                                                                                                                   3
                                                                                                                                                                                                                                   4
                                                                                                                                                                                                                                   -)
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (reveal
                                                                                                                                                                                                                                     -1)
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (grind)
                                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil)
                                                                                                                                                                                                                               ("2"
                                                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                                          (hide
                                                                                                                                                                                                                           -
                                                                                                                                                                                                                           2)
                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                            (reveal
                                                                                                                                                                                                                             -1)
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                               "abs")
                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                (lift-if)
                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                  (split)
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (flatten)
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil)
                                                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                                                    (flatten)
                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil)
                                                                                                                                                                                     ("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      nil
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (grind-reals)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "abs"
                                                                                                                                     1)
                                                                                                                                    (("2"
                                                                                                                                      (lift-if)
                                                                                                                                      (("2"
                                                                                                                                        (lift-if)
                                                                                                                                        (("2"
                                                                                                                                          (lift-if)
                                                                                                                                          (("2"
                                                                                                                                            (grind)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (grind-reals)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (grind-reals)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (grind-reals)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (case
                                                                                                                       "abs(y1-y2) = abs(y2-y1)")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (grind)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (grind)
                                                                        nil
                                                                        nil)
                                                                       ("3"
                                                                        (reveal
                                                                         -)
                                                                        (("3"
                                                                          (replace
                                                                           -1
                                                                           1
                                                                           rl)
                                                                          (("3"
                                                                            (replace
                                                                             -2
                                                                             1
                                                                             rl)
                                                                            (("3"
                                                                              (copy
                                                                               -15)
                                                                              (("3"
                                                                                (inst
                                                                                 -1
                                                                                 "env")
                                                                                (("3"
                                                                                  (inst
                                                                                   -16
                                                                                   "env0")
                                                                                  (("3"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (expand
                                                     "inf_norm_bound?")
                                                    (("2"
                                                      (skeep)
                                                      (("2"
                                                        (inst -5 "i")
                                                        (("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (expand
                                                   "inf_norm_bound?")
                                                  (("2"
                                                    (skeep)
                                                    (("2"
                                                      (inst -5 "i")
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (expand
                                                 "inf_norm_bound?")
                                                (("2"
                                                  (skeep)
                                                  (("2"
                                                    (inst -5 "i")
                                                    (("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (expand
                                               "inf_norm_bound?")
                                              (("2"
                                                (skeep)
                                                (("2"
                                                  (inst -5 "i")
                                                  (("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (typepred "epsilon")
                              (("2"
                                (assert)
                                (("2"
                                  (name "Y" "abs(re2(env0))")
                                  (("2"
                                    (replace -1)
                                    (("2"
                                      (name "X" "abs(re1(env0))")
                                      (("2"
                                        (replace -1)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (hide -)
                                            (("2"
                                              (hide 2)
                                              (("2"
                                                (grind-reals)
                                                (("2"
                                                  (both-sides
                                                   "*"
                                                   "(6 * X + 6 * epsilon)")
                                                  (("1"
                                                    (case
                                                     "(((Y ^ 2) * epsilon) / (6 * X + 6 * epsilon)) = ((Y ^ 2) * epsilon) / (6 * X + 6 * epsilon)")
                                                    (("1"
                                                      (replace -1)
                                                      (("1"
                                                        (hide -1)
                                                        (("1"
                                                          (name
                                                           "Z"
                                                           "(6 * X + 6 * epsilon)")
                                                          (("1"
                                                            (replace
                                                             -1)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (hide
                                                                 -1)
                                                                (("1"
                                                                  (case
                                                                   "Y/=0")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (grind-reals)
                                                                      (("1"
                                                                        (reveal
                                                                         -)
                                                                        (("1"
                                                                          (inst
                                                                           -11
                                                                           "env0")
                                                                          (("1"
                                                                            (replace
                                                                             -5
                                                                             1
                                                                             rl)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (reveal
                                                                     -)
                                                                    (("2"
                                                                      (inst
                                                                       -11
                                                                       "env0")
                                                                      (("2"
                                                                        (replace
                                                                         -5
                                                                         1
                                                                         rl)
                                                                        (("2"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    (("2"
                                                      (name
                                                       "Z"
                                                       "(6 * X + 6 * epsilon)")
                                                      (("2"
                                                        (replace -1)
                                                        (("2"
                                                          (both-sides
                                                           "*"
                                                           "Z")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (hide -1)
                                                              (("1"
                                                                (grind)
                                                                (("1"
                                                                  (grind-reals)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (grind-reals)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (grind) nil nil))
                        nil))
                      nil))
                    nil)
                   ("2" (hide 2 -2 -1)
                    (("2" (inst -1 "env0")
                      (("2" (assert)
                        (("2" (name "X" "re2(env0)")
                          (("2" (replace -1)
                            (("2" (hide -1)
                              (("2"
                                (expand "abs")
                                (("2"
                                  (assert)
                                  (("2"
                                    (lift-if)
                                    (("2"
                                      (split)
                                      (("1"
                                        (flatten)
                                        (("1" (grind-reals) nil nil))
                                        nil)
                                       ("2" (grind-reals) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (TRUE const-decl "bool" booleans nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nnreal_exp application-judgement "nnreal" exponentiation nil)
    (nnreal_plus_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (^ const-decl "real" exponentiation nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (posreal_min application-judgement
     "{z: posreal | z <= x AND z <= y}" real_defs nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (<= const-decl "bool" reals nil)
    (inf_norm_bound? const-decl "bool" continuity_re_def nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (posreal_plus_nnreal_is_posreal application-judgement "posreal"
     real_types nil)
    (posreal_div_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (< const-decl "bool" reals nil)
    (div_mult_pos_le1 formula-decl nil real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (pos_div_gt formula-decl nil real_props nil)
    (pos_times_gt formula-decl nil real_props nil)
    (neg_times_gt formula-decl nil real_props nil)
    (nonzero_times3 formula-decl nil real_props nil)
    (div_mult_pos_ge1 formula-decl nil real_props nil)
    (zero_times1 formula-decl nil real_props nil)
    (neg_times_lt formula-decl nil real_props nil)
    (neg_times_le formula-decl nil real_props nil)
    (expt def-decl "real" exponentiation nil)
    (both_sides_div_pos_ge1 formula-decl nil real_props nil)
    (times_div_cancel2 formula-decl nil extra_real_props nil)
    (both_sides_times_pos_le1_imp formula-decl nil extra_real_props
     nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (both_sides_times_pos_gt1 formula-decl nil real_props nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (both_sides_div_pos_gt1 formula-decl nil real_props nil)
    (nonzero_abs_is_pos application-judgement "{y: posreal | y >= x}"
     real_defs nil)
    (nnreal type-eq-decl nil real_types nil)
    (both_sides_times_pos_ge1_imp formula-decl nil extra_real_props
     nil)
    (both_sides_times_pos_lt1 formula-decl nil real_props nil)
    (times_div1 formula-decl nil real_props nil)
    (div_mult_pos_lt2 formula-decl nil real_props nil)
    (div_mult_pos_ge2 formula-decl nil real_props nil)
    (nonzero_times2 formula-decl nil real_props nil)
    (times_div2 formula-decl nil real_props nil)
    (div_div2 formula-decl nil real_props nil)
    (div_mult_pos_lt1 formula-decl nil real_props nil)
    (abs_diff formula-decl nil abs_lems reals)
    (abs_div formula-decl nil real_props nil)
    (abs_mult formula-decl nil real_props nil)
    (triangle formula-decl nil real_props nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (nnreal_expt application-judgement "nnreal" exponentiation nil)
    (div_cancel2 formula-decl nil real_props nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (/= const-decl "boolean" notequal nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs
         nil)
    (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (Environment type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (RealExpr type-eq-decl nil hp_def nil))
   nil))
 (cont_re_div 0
  (cont_re_div-1 nil 3871560627
   ("" (skeep)
    (("" (lemma "cont_re_div_aux")
      (("" (insteep)
        (("" (split -1)
          (("1" (case "div_safe_re(re1,re2) = real_fun_ops./(re1,re2)")
            (("1" (assert) nil nil)
             ("2" (hide-all-but (-2 1))
              (("2" (decompose-equality) (("2" (grind) nil nil)) nil))
              nil))
            nil)
           ("2" (propax) nil nil))
          nil))
        nil))
      nil))
    nil)
   ((cont_re_div_aux formula-decl nil continuity_re_props nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (div_safe const-decl "real" reals_safe_ops reals)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (div_safe_re const-decl "real" hp_def nil)
    (/= const-decl "boolean" notequal nil)
    (nzreal nonempty-type-eq-decl nil reals nil) nil
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (Environment type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil) nil
    (RealExpr type-eq-decl nil hp_def nil) nil)
   shostak)))