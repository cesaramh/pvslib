(temporal_logic
 (norm_DLGLOBALLY 0
  (norm_DLGLOBALLY-1 nil 3888914764
   ("" (skeep)
    (("" (expand "normDLGLOBALLY")
      (("" (expand "DLBOOL") (("" (decompose-equality) nil nil)) nil))
      nil))
    nil)
   ((normDLGLOBALLY const-decl "bool" ltl_expr nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (list type-decl nil list_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (State_Trace const-decl "bool" ltl_expr nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (Environment type-eq-decl nil hp_def nil)
    (DLGLOBALLY const-decl "bool" ltl_expr nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (DLBOOL const-decl "bool" bool_expr nil))
   shostak))
 (norm_DLEVENTUALLY 0
  (norm_DLEVENTUALLY-1 nil 3888914799
   ("" (skeep)
    (("" (expand "DLBOOL")
      (("" (expand "normDLEVENTUALLY")
        (("" (decompose-equality) nil nil)) nil))
      nil))
    nil)
   ((DLBOOL const-decl "bool" bool_expr nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (list type-decl nil list_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (State_Trace const-decl "bool" ltl_expr nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (Environment type-eq-decl nil hp_def nil)
    (DLEVENTUALLY const-decl "bool" ltl_expr nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (normDLEVENTUALLY const-decl "bool" ltl_expr nil))
   shostak))
 (norm_DLGE 0
  (norm_DLGE-1 nil 3888914821
   ("" (skeep)
    (("" (decompose-equality)
      (("" (expand "normDLGE")
        (("" (lift-if)
          (("" (split)
            (("1" (flatten)
              (("1" (expand "DLGLOBALLY")
                (("1" (iff)
                  (("1" (split)
                    (("1" (flatten)
                      (("1" (expand "final_env")
                        (("1" (assert)
                          (("1" (expand "finite_trace?")
                            (("1" (inst -1 "(: last(x!1) :)")
                              (("1"
                                (assert)
                                (("1"
                                  (split -2)
                                  (("1"
                                    (assert)
                                    (("1"
                                      (lemma "DLEVENTUALLY_EXISTS")
                                      (("1"
                                        (inst?)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (skeep)
                                            (("1"
                                              (typepred "i")
                                              (("1"
                                                (expand "length")
                                                (("1"
                                                  (expand "length")
                                                  (("1"
                                                    (expand "nth")
                                                    (("1"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (assert)
                                    (("2"
                                      (inst -2 "max_ci(D(last(x!1)))")
                                      (("2"
                                        (lemma "DLEVENTUALLY_EXISTS")
                                        (("2"
                                          (inst?)
                                          (("2"
                                            (assert)
                                            (("2"
                                              (skeep)
                                              (("2"
                                                (expand
                                                 "cut_state_diff")
                                                (("2"
                                                  (typepred "i")
                                                  (("2"
                                                    (expand "length")
                                                    (("2"
                                                      (expand "length")
                                                      (("2"
                                                        (expand "nth")
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (expand
                                                             "cut_state_diff")
                                                            (("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (split)
                                (("1" (grind) nil nil)
                                 ("2"
                                  (lemma "suffix_supl[TraceState]")
                                  (("2"
                                    (inst?)
                                    (("2"
                                      (assert)
                                      (("2"
                                        (inst 1 "rdc(x!1)")
                                        (("2"
                                          (lemma "rdc_rac[TraceState]")
                                          (("2"
                                            (inst?)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (expand "rac")
                                                (("2"
                                                  (expand "last")
                                                  (("2"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("3"
                                (typepred "x!1")
                                (("3"
                                  (expand "wf_trace?")
                                  (("3" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (flatten)
                      (("2" (skeep)
                        (("2" (expand "final_env")
                          (("2" (expand "finite_trace?")
                            (("2" (split -2)
                              (("1"
                                (assert)
                                (("1"
                                  (split)
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (expand "DLEVENTUALLY")
                                      (("1"
                                        (inst 1 "(: last(x!1) :)")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (expand "State_Trace")
                                            (("1"
                                              (expand "init_env")
                                              (("1" (propax) nil nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (split)
                                          (("1" (grind) nil nil)
                                           ("2"
                                            (lemma
                                             "suffix_supl[TraceState]")
                                            (("2"
                                              (inst?)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (inst
                                                   1
                                                   "rdc(suffix)")
                                                  (("1"
                                                    (lemma
                                                     "rdc_rac[TraceState]")
                                                    (("1"
                                                      (inst?)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (expand
                                                           "last")
                                                          (("1"
                                                            (expand
                                                             "rac")
                                                            (("1"
                                                              (lemma
                                                               "suffix_nth[TraceState]")
                                                              (("1"
                                                                (typepred
                                                                 "suffix")
                                                                (("1"
                                                                  (inst
                                                                   -3
                                                                   "x!1"
                                                                   "suffix")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (inst
                                                                       -3
                                                                       "length(suffix) - 1")
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil)
                                                                       ("2"
                                                                        (expand
                                                                         "wf_trace?")
                                                                        (("2"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (typepred "suffix")
                                                    (("2"
                                                      (expand
                                                       "wf_trace?")
                                                      (("2"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (flatten)
                                    (("2"
                                      (split)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (skeep)
                                          (("1"
                                            (typepred "suffix")
                                            (("1"
                                              (expand "wf_trace?")
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (lemma
                                                   "DLEVENTUALLY_EXISTS")
                                                  (("1"
                                                    (inst?)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (inst
                                                         1
                                                         "length(suffix)-1")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (split)
                                                            (("1"
                                                              (expand
                                                               "cut_state_diff")
                                                              (("1"
                                                                (lift-if)
                                                                (("1"
                                                                  (expand
                                                                   "nth"
                                                                   -1)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (lift-if)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (split
                                                                           -1)
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (split)
                                                                                (("1"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil)
                                                                                 ("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (lemma
                                                                                     "suffix_nth[TraceState]")
                                                                                    (("2"
                                                                                      (inst?)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -1
                                                                                           "length(suffix)-1")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "last")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "nth"
                                                                                                 -1
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (lift-if)
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (split)
                                                                                    (("1"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil)
                                                                                     ("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (lemma
                                                                                         "suffix_nth[TraceState]")
                                                                                        (("2"
                                                                                          (inst?)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (inst
                                                                                               -1
                                                                                               "length(suffix)-1")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "last")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "nth"
                                                                                                     -1
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (grind)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (flatten)
                                                              (("2"
                                                                (lemma
                                                                 "suffix_nth[TraceState]")
                                                                (("2"
                                                                  (inst?)
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (inst
                                                                       -1
                                                                       "length(suffix)-1")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (expand
                                                                           "last")
                                                                          (("1"
                                                                            (expand
                                                                             "cut_state_diff"
                                                                             +)
                                                                            (("1"
                                                                              (expand
                                                                               "nth"
                                                                               +)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (lift-if)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "nth"
                                                                                       -1
                                                                                       1)
                                                                                      (("1"
                                                                                        (lift-if)
                                                                                        (("1"
                                                                                          (split
                                                                                           -1)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (grind)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (expand
                                                           "cut_state_diff")
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (grind)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (flatten)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (typepred "suffix")
                                            (("2"
                                              (expand "wf_trace?")
                                              (("2"
                                                (flatten)
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (skeep)
                                                    (("2"
                                                      (lemma
                                                       "DLEVENTUALLY_EXISTS")
                                                      (("2"
                                                        (inst?)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (case
                                                             "length(suffix)=1")
                                                            (("1"
                                                              (expand
                                                               "last")
                                                              (("1"
                                                                (lemma
                                                                 "suffix_nth[TraceState]")
                                                                (("1"
                                                                  (inst?)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (inst
                                                                       -1
                                                                       "0")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (replace
                                                                           -2)
                                                                          (("1"
                                                                            (expand
                                                                             "nth"
                                                                             -1
                                                                             1)
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (inst
                                                               -2
                                                               "0")
                                                              (("1"
                                                                (expand
                                                                 "nth")
                                                                (("1"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (assert)
                                (("2"
                                  (split)
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (lemma "DLEVENTUALLY_EXISTS")
                                      (("1"
                                        (inst?)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (expand "last")
                                            (("1"
                                              (typepred "suffix")
                                              (("1"
                                                (expand "wf_trace?")
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (lemma
                                                     "suffix_nth[TraceState]")
                                                    (("1"
                                                      (inst?)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (inst
                                                           -1
                                                           "length(suffix)-1")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (inst
                                                               1
                                                               "length(suffix) - 1")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (inst
                                                                   1
                                                                   "max_ci(D(nth(x!1, length(x!1) - 1)))")
                                                                  (("1"
                                                                    (replace
                                                                     -1)
                                                                    (("1"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (typepred
                                                                     "x!1")
                                                                    (("2"
                                                                      (expand
                                                                       "wf_trace?")
                                                                      (("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (grind)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (flatten)
                                    (("2"
                                      (assert)
                                      (("2"
                                        (expand "last")
                                        (("2"
                                          (typepred "x!1")
                                          (("2"
                                            (typepred "suffix")
                                            (("2"
                                              (expand "wf_trace?")
                                              (("2"
                                                (flatten)
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (split)
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (skeep)
                                                        (("1"
                                                          (lemma
                                                           "DLEVENTUALLY_EXISTS")
                                                          (("1"
                                                            (inst?)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (inst
                                                                 1
                                                                 "length(suffix)-1")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (expand
                                                                     "cut_state_diff"
                                                                     +)
                                                                    (("1"
                                                                      (expand
                                                                       "nth"
                                                                       +)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (lift-if)
                                                                          (("1"
                                                                            (split
                                                                             1)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (split
                                                                                   1)
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (inst
                                                                                       1
                                                                                       "max_ci(D(car(suffix)))-t")
                                                                                      (("1"
                                                                                        (lemma
                                                                                         "suffix_nth[TraceState]")
                                                                                        (("1"
                                                                                          (inst?)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (inst
                                                                                               -1
                                                                                               "0")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "nth"
                                                                                                 -1
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (expand
                                                                                         "cut_state_diff"
                                                                                         1)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "nth"
                                                                                             1)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "closed_interval")
                                                                                                (("2"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (lemma
                                                                                       "suffix_nth[TraceState]")
                                                                                      (("2"
                                                                                        (inst?)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (inst
                                                                                             -1
                                                                                             "0")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "nth"
                                                                                               -1
                                                                                               1)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (lemma
                                                                                   "suffix_nth[TraceState]")
                                                                                  (("2"
                                                                                    (inst?)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (inst
                                                                                         -1
                                                                                         "length(suffix)-1")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "nth"
                                                                                             -1
                                                                                             1)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (inst
                                                                                                 2
                                                                                                 "max_ci(D(nth(x!1, length(x!1) - 1)))")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (expand
                                                                                                   "cut_state_diff"
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "nth"
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (grind)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("3"
                                                                                                  (grind)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (flatten)
                                                      (("2"
                                                        (skeep)
                                                        (("2"
                                                          (expand
                                                           "cut_inf_diff")
                                                          (("2"
                                                            (lemma
                                                             "suffix_nth[TraceState]")
                                                            (("2"
                                                              (inst?)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (inst
                                                                   -1
                                                                   "0")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (case
                                                                       "length(suffix)=1")
                                                                      (("1"
                                                                        (replace
                                                                         -1)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (expand
                                                                             "nth"
                                                                             -2
                                                                             1)
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (inst
                                                                         -3
                                                                         "0")
                                                                        (("1"
                                                                          (grind)
                                                                          nil
                                                                          nil)
                                                                         ("2"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (grind)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (propax) nil nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (DLGLOBALLY const-decl "bool" ltl_expr nil)
    (DLEVENTUALLY const-decl "bool" ltl_expr nil)
    (Environment type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (State_Trace const-decl "bool" ltl_expr nil)
    (normDLGE const-decl "bool" ltl_expr nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (list type-decl nil list_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (suffix_nth formula-decl nil more_list_props structures)
    (init_env const-decl "Environment" trace_semantics nil)
    (error? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (inf_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (hp const-decl "bool" interval_def ODEs)
    (cut_inf_diff const-decl "Trace" ltl_expr nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (last const-decl "T" more_list_props structures)
    (suffix? def-decl "bool" more_list_props structures)
    (DLEVENTUALLY_EXISTS formula-decl nil ltl_expr nil)
    (max_ci const-decl "{rr: (d) | FORALL (x: (d)): x <= rr}"
     more_ci_props ODEs)
    (D adt-accessor-decl "[(state_diff?) ->
   {D: (dd?) | EXISTS (b: posreal): D = closed_interval(0, b)}]"
     TraceState_adt nil)
    (closed_interval const-decl "(closed_interval?(a, b))" interval_def
     ODEs)
    (dd? const-decl "bool" hp_expr nil)
    (state_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (cut_state_diff const-decl
     "{tt: Trace | length(tt) = length(trace)}" ltl_expr nil)
    (car adt-accessor-decl "[(cons?) -> T]" list_adt nil)
    (suffix_supl formula-decl nil more_list_props structures)
    (rdc_rac formula-decl nil more_list_props structures)
    (rac const-decl "T" more_list_props structures)
    (rdc const-decl "list[T]" more_list_props structures)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (final_env const-decl "Environment" trace_semantics nil))
   shostak))
 (norm_DLEG 0
  (norm_DLEG-1 nil 3888918402
   ("" (skeep)
    (("" (decompose-equality)
      (("" (expand "normDLEG")
        (("" (lift-if)
          (("" (split)
            (("1" (flatten)
              (("1" (iff)
                (("1" (expand "DLEVENTUALLY")
                  (("1" (expand "final_env")
                    (("1" (split)
                      (("1" (flatten)
                        (("1" (skeep)
                          (("1" (lemma "caret_suffix[TraceState]")
                            (("1" (typepred "suffix")
                              (("1"
                                (inst?)
                                (("1"
                                  (assert)
                                  (("1"
                                    (skeep)
                                    (("1"
                                      (split -4)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (lemma "DLGLOBALLY_FORALL")
                                          (("1"
                                            (inst?)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (inst
                                                 -1
                                                 "length(suffix)-1")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (lemma
                                                     "suffix_nth[TraceState]")
                                                    (("1"
                                                      (inst?)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (inst
                                                           -1
                                                           "length(suffix)-1")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (expand
                                                               "last")
                                                              (("1"
                                                                (expand
                                                                 "finite_trace?")
                                                                (("1"
                                                                  (replace
                                                                   -1)
                                                                  (("1"
                                                                    (split
                                                                     -2)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (grind)
                                                                        nil
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil)
                                                                     ("3"
                                                                      (flatten)
                                                                      (("3"
                                                                        (assert)
                                                                        (("3"
                                                                          (inst
                                                                           -2
                                                                           "max_ci(D(nth(x!1, length(x!1) - 1)))")
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("4"
                                                                      (flatten)
                                                                      (("4"
                                                                        (assert)
                                                                        (("4"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (expand
                                                             "wf_trace?")
                                                            (("2"
                                                              (flatten)
                                                              (("2"
                                                                (expand
                                                                 "length"
                                                                 1)
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (expand "wf_trace?")
                                                  (("2"
                                                    (flatten)
                                                    (("2"
                                                      (expand
                                                       "length"
                                                       1)
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (flatten)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (split -1)
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (skeep)
                                                (("1"
                                                  (lemma
                                                   "DLGLOBALLY_FORALL")
                                                  (("1"
                                                    (inst?)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (typepred
                                                         "cut_state_diff(suffix, t)")
                                                        (("1"
                                                          (inst
                                                           -3
                                                           "length(cut_state_diff(suffix, t))-1")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (replace
                                                               -2)
                                                              (("1"
                                                                (case
                                                                 "length(suffix)=1")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (expand
                                                                     "nth"
                                                                     -4)
                                                                    (("1"
                                                                      (expand
                                                                       "cut_state_diff"
                                                                       -4)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (lift-if)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (expand
                                                                               "last")
                                                                              (("1"
                                                                                (lemma
                                                                                 "suffix_nth[TraceState]")
                                                                                (("1"
                                                                                  (inst?)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (inst
                                                                                       -1
                                                                                       "length(suffix)-1")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "nth"
                                                                                           -1
                                                                                           1)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (split
                                                                                                 -5)
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -2
                                                                                                     "max_ci(D(nth(x!1, length(x!1) - 1)))-t")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (replace
                                                                                                       -5)
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         -3)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "nth"
                                                                                                           1
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "cut_state_diff"
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (typepred
                                                                                                                 "max_ci(D(car(suffix)))")
                                                                                                                (("2"
                                                                                                                  (replace
                                                                                                                   -4)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "closed_interval"
                                                                                                                     1)
                                                                                                                    (("2"
                                                                                                                      (propax)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (flatten)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (expand
                                                                     "nth"
                                                                     -3)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (expand
                                                                         "cut_state_diff"
                                                                         -3)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (lemma
                                                                             "suffix_nth[TraceState]")
                                                                            (("2"
                                                                              (inst?)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (inst
                                                                                   -1
                                                                                   "length(suffix)-1")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "nth"
                                                                                       -1
                                                                                       1)
                                                                                      (("1"
                                                                                        (replace
                                                                                         -1)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "finite_trace?")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "last")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (split
                                                                                                 -4)
                                                                                                (("1"
                                                                                                  (split
                                                                                                   -10)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (flatten)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("3"
                                                                                                  (flatten)
                                                                                                  (("3"
                                                                                                    (assert)
                                                                                                    (("3"
                                                                                                      (inst
                                                                                                       -2
                                                                                                       "max_ci(D(nth(x!1, length(x!1) - 1)))")
                                                                                                      (("3"
                                                                                                        (assert)
                                                                                                        (("3"
                                                                                                          (replace
                                                                                                           -4)
                                                                                                          (("3"
                                                                                                            (expand
                                                                                                             "nth"
                                                                                                             1
                                                                                                             1)
                                                                                                            (("3"
                                                                                                              (expand
                                                                                                               "cut_state_diff"
                                                                                                               1)
                                                                                                              (("3"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("4"
                                                                                                  (flatten)
                                                                                                  (("4"
                                                                                                    (split
                                                                                                     -11)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (expand
                                                                                     "wf_trace?")
                                                                                    (("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "length"
                                                                                         1)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (expand
                                                             "cut_state_diff")
                                                            (("2"
                                                              (expand
                                                               "length"
                                                               1)
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (flatten)
                                              (("2"
                                                (skeep)
                                                (("2"
                                                  (lemma
                                                   "DLGLOBALLY_FORALL")
                                                  (("2"
                                                    (inst?)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (inst -1 "0")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (expand
                                                             "last")
                                                            (("1"
                                                              (expand
                                                               "finite_trace?")
                                                              (("1"
                                                                (expand
                                                                 "last")
                                                                (("1"
                                                                  (lemma
                                                                   "suffix_nth[TraceState]")
                                                                  (("1"
                                                                    (inst?)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (inst-cp
                                                                         -1
                                                                         "length(suffix)-1")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (case
                                                                             "length(suffix)=1")
                                                                            (("1"
                                                                              (expand
                                                                               "nth"
                                                                               -3
                                                                               1)
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (expand
                                                                               "wf_trace?")
                                                                              (("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (inst
                                                                                   -6
                                                                                   "0")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "nth")
                                                                                      (("1"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (expand
                                                                                     "length"
                                                                                     1)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (expand
                                                                           "wf_trace?")
                                                                          (("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (expand
                                                                               "length"
                                                                               1)
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (expand
                                                           "cut_inf_diff")
                                                          (("2"
                                                            (expand
                                                             "length"
                                                             1)
                                                            (("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (flatten)
                        (("2" (inst 1 "(: last(x!1) :)")
                          (("1" (assert)
                            (("1" (expand "finite_trace?")
                              (("1"
                                (split -2)
                                (("1"
                                  (assert)
                                  (("1"
                                    (lemma "DLGLOBALLY_FORALL")
                                    (("1"
                                      (inst?)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (skeep)
                                          (("1"
                                            (typepred "i")
                                            (("1"
                                              (expand "length" -1)
                                              (("1"
                                                (expand "length" -1)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (expand "nth")
                                                    (("1"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (assert)
                                  (("2"
                                    (inst 1 "max_ci(D(last(x!1)))")
                                    (("2"
                                      (lemma "DLGLOBALLY_FORALL")
                                      (("2"
                                        (inst?)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (skeep)
                                            (("2"
                                              (typepred "i")
                                              (("2"
                                                (expand
                                                 "cut_state_diff")
                                                (("2"
                                                  (expand "length" -1)
                                                  (("2"
                                                    (expand
                                                     "length"
                                                     -1)
                                                    (("2"
                                                      (expand "nth")
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (split)
                            (("1" (grind) nil nil)
                             ("2" (lemma "suffix_supl[TraceState]")
                              (("2"
                                (inst?)
                                (("2"
                                  (assert)
                                  (("2"
                                    (inst 1 "rdc(x!1)")
                                    (("2"
                                      (expand "last")
                                      (("2"
                                        (lemma "rdc_rac[TraceState]")
                                        (("2"
                                          (inst?)
                                          (("2"
                                            (assert)
                                            (("2"
                                              (expand "rac")
                                              (("2" (propax) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("3" (expand "finite_trace?")
                              (("3"
                                (split -3)
                                (("1" (assert) nil nil)
                                 ("2" (assert) nil nil))
                                nil))
                              nil))
                            nil)
                           ("3" (typepred "x!1")
                            (("3" (expand "wf_trace?")
                              (("3" (assert) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (propax) nil nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (DLEVENTUALLY const-decl "bool" ltl_expr nil)
    (DLGLOBALLY const-decl "bool" ltl_expr nil)
    (Environment type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (State_Trace const-decl "bool" ltl_expr nil)
    (normDLEG const-decl "bool" ltl_expr nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (list type-decl nil list_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (suffix? def-decl "bool" more_list_props structures)
    (error? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (car adt-accessor-decl "[(cons?) -> T]" list_adt nil)
    (DLGLOBALLY_FORALL formula-decl nil ltl_expr nil)
    (last const-decl "T" more_list_props structures)
    (D adt-accessor-decl "[(state_diff?) ->
   {D: (dd?) | EXISTS (b: posreal): D = closed_interval(0, b)}]"
     TraceState_adt nil)
    (closed_interval const-decl "(closed_interval?(a, b))" interval_def
     ODEs)
    (dd? const-decl "bool" hp_expr nil)
    (state_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (init_env const-decl "Environment" trace_semantics nil)
    (max_ci const-decl "{rr: (d) | FORALL (x: (d)): x <= rr}"
     more_ci_props ODEs)
    (cut_state_diff const-decl
     "{tt: Trace | length(tt) = length(trace)}" ltl_expr nil)
    (cut_inf_diff const-decl "Trace" ltl_expr nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (suffix_nth formula-decl nil more_list_props structures)
    (length_null formula-decl nil more_list_props structures)
    (inf_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (hp const-decl "bool" interval_def ODEs)
    (caret_suffix formula-decl nil even_more_list_props nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (length_singleton formula-decl nil more_list_props structures)
    (suffix_supl formula-decl nil more_list_props structures)
    (rac const-decl "T" more_list_props structures)
    (rdc_rac formula-decl nil more_list_props structures)
    (rdc const-decl "list[T]" more_list_props structures)
    (final_env const-decl "Environment" trace_semantics nil))
   shostak))
 (dltl_SEQcap 0
  (dltl_SEQcap-1 nil 3888506957
   ("" (skeep)
    (("" (lemma "dlSequent_equiv")
      (("" (inst?)
        (("" (assert)
          (("" (hide 2)
            (("" (expand "dlSequent")
              (("" (skeep)
                (("" (inst -1 "0")
                  (("" (inst 1 "0")
                    (("" (expand "nth")
                      (("" (expand "ALLRUNS_tr")
                        (("" (skeep)
                          (("" (expand "trace_semantic_rel" -3)
                            (("" (split -3)
                              (("1"
                                (skeep)
                                (("1"
                                  (inst -6 "trace1")
                                  (("1"
                                    (assert)
                                    (("1"
                                      (split)
                                      (("1"
                                        (expand "normDLGLOBALLY")
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (inst -1 "trace2")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (replace -7)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (expand
                                                     "finite_trace?")
                                                    (("1"
                                                      (expand
                                                       "final_env")
                                                      (("1"
                                                        (typepred
                                                         "trace2")
                                                        (("1"
                                                          (expand
                                                           "wf_trace?")
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (lemma
                                                               "last_append[TraceState]")
                                                              (("1"
                                                                (inst?)
                                                                (("1"
                                                                  (replace
                                                                   -1)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (case
                                                                       "DLGLOBALLY(State_Trace(Q))(trace2)")
                                                                      (("1"
                                                                        (case
                                                                         "DLGLOBALLY(State_Trace(Q))(append(trace1, trace2))")
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil)
                                                                         ("2"
                                                                          (lemma
                                                                           "DLGLOBALLY_append")
                                                                          (("2"
                                                                            (inst?)
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (typepred "trace")
                                              (("2"
                                                (expand "valid_trace?")
                                                (("2"
                                                  (expand
                                                   "finite_trace?")
                                                  (("2"
                                                    (replace -8)
                                                    (("2"
                                                      (typepred
                                                       "trace2")
                                                      (("2"
                                                        (expand
                                                         "wf_trace?")
                                                        (("2"
                                                          (flatten)
                                                          (("2"
                                                            (lemma
                                                             "last_append[TraceState]")
                                                            (("2"
                                                              (inst?)
                                                              (("2"
                                                                (replace
                                                                 -1)
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (replace -5)
                                        (("2"
                                          (typepred "trace1")
                                          (("2"
                                            (expand "wf_trace?")
                                            (("2"
                                              (flatten)
                                              (("2"
                                                (lemma
                                                 "car_append[TraceState]")
                                                (("2"
                                                  (inst?)
                                                  (("1"
                                                    (expand "init_env")
                                                    (("1"
                                                      (replace -1)
                                                      (("1"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (expand "valid_trace?")
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (flatten)
                                (("2"
                                  (expand "normDLGLOBALLY")
                                  (("2"
                                    (expand "finite_trace?")
                                    (("2"
                                      (inst -3 "trace")
                                      (("2"
                                        (assert)
                                        (("2"
                                          (split 1)
                                          (("1"
                                            (flatten)
                                            (("1" (grind) nil nil))
                                            nil)
                                           ("2"
                                            (flatten)
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((dlSequent_equiv formula-decl nil dynamic_logic nil)
    (dlSequent const-decl "bool" dynamic_logic nil)
    (length_singleton formula-decl nil more_list_props structures)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (final_env const-decl "Environment" trace_semantics nil)
    (last_append formula-decl nil more_list_props structures)
    (State_Trace const-decl "bool" ltl_expr nil)
    (DLGLOBALLY const-decl "bool" ltl_expr nil)
    (DLGLOBALLY_append formula-decl nil ltl_expr nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (init_env const-decl "Environment" trace_semantics nil)
    (car_append formula-decl nil more_list_props structures)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (normDLGLOBALLY const-decl "bool" ltl_expr nil)
    (SEQ adt-constructor-decl "[[HP, HP] -> (seq?)]" HP_adt nil)
    (seq? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (ALLRUNS_tr const-decl "bool" ltl_expr nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (TraceState type-decl nil TraceState_adt nil)
    (HP type-decl nil HP_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (Formulas type-eq-decl nil bool_expr nil)
    (list type-decl nil list_adt nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (Environment type-eq-decl nil hp_def nil))
   shostak))
 (dltl_SEQcap_con 0
  (dltl_SEQcap_con-1 nil 3901984894
   ("" (skeep)
    (("" (lemma "dlSequent_equiv")
      (("" (inst?)
        (("" (assert)
          (("" (hide 2)
            (("" (expand "dlSequent")
              (("" (skeep)
                (("" (inst -1 "0")
                  (("" (inst 1 "0")
                    (("" (expand "nth")
                      (("" (expand "DLOR")
                        (("" (flatten)
                          (("" (expand "ALLRUNS_tr")
                            (("" (expand "SOMERUNS_st")
                              ((""
                                (skeep)
                                ((""
                                  (expand "normDLGLOBALLY")
                                  ((""
                                    (split 2)
                                    (("1"
                                      (flatten)
                                      (("1"
                                        (inst 2 "trace")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (skeep)
                                            (("1"
                                              (inst
                                               -2
                                               "append(trace,trace_2)")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (split -2)
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (lemma
                                                       "DLGLOBALLY_append")
                                                      (("1"
                                                        (inst?)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (lemma
                                                             "wf_append_finite")
                                                            (("1"
                                                              (inst?)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (expand
                                                                       "DLBOOL")
                                                                      (("1"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (flatten)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (lemma
                                                         "DLGLOBALLY_append")
                                                        (("2"
                                                          (inst?)
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (lemma
                                                               "wf_append_finite")
                                                              (("2"
                                                                (inst?)
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (expand
                                                                         "DLBOOL")
                                                                        (("2"
                                                                          (propax)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("3"
                                                    (typepred "trace")
                                                    (("3"
                                                      (expand
                                                       "wf_trace?")
                                                      (("3"
                                                        (flatten)
                                                        (("3"
                                                          (lemma
                                                           "car_append[TraceState]")
                                                          (("3"
                                                            (inst?)
                                                            (("1"
                                                              (expand
                                                               "init_env")
                                                              (("1"
                                                                (replace
                                                                 -1)
                                                                (("1"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("4"
                                                    (expand
                                                     "trace_semantic_rel"
                                                     1)
                                                    (("4"
                                                      (flatten)
                                                      (("4"
                                                        (inst
                                                         1
                                                         "trace"
                                                         "trace_2")
                                                        (("4"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (lemma
                                                 "wf_append_finite")
                                                (("2"
                                                  (inst?)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (typepred
                                                       "trace_2")
                                                      (("2"
                                                        (expand
                                                         "valid_trace?")
                                                        (("2"
                                                          (expand
                                                           "finite_trace?")
                                                          (("2"
                                                            (expand
                                                             "wf_trace?")
                                                            (("2"
                                                              (flatten)
                                                              (("2"
                                                                (lemma
                                                                 "last_append[TraceState]")
                                                                (("2"
                                                                  (inst?)
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil)
                                                                   ("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (flatten)
                                      (("2"
                                        (inst -1 "trace")
                                        (("2"
                                          (assert)
                                          (("2"
                                            (expand
                                             "trace_semantic_rel"
                                             3)
                                            (("2"
                                              (flatten)
                                              (("2"
                                                (expand
                                                 "finite_trace?")
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (flatten)
                                                    (("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((dlSequent_equiv formula-decl nil dynamic_logic nil)
    (dlSequent const-decl "bool" dynamic_logic nil)
    (length_singleton formula-decl nil more_list_props structures)
    (DLGLOBALLY_append formula-decl nil ltl_expr nil)
    (wf_append_finite formula-decl nil trace_semantics nil)
    (car_append formula-decl nil more_list_props structures)
    (init_env const-decl "Environment" trace_semantics nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (last_append formula-decl nil more_list_props structures)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (SEQ adt-constructor-decl "[[HP, HP] -> (seq?)]" HP_adt nil)
    (seq? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (DLBOOL const-decl "bool" bool_expr nil)
    (normDLGLOBALLY const-decl "bool" ltl_expr nil)
    (ALLRUNS_tr const-decl "bool" ltl_expr nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (TraceState type-decl nil TraceState_adt nil)
    (SOMERUNS_st const-decl "bool" ltl_expr nil)
    (HP type-decl nil HP_adt nil)
    (DLOR const-decl "bool" bool_expr nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (Formulas type-eq-decl nil bool_expr nil)
    (list type-decl nil list_adt nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (Environment type-eq-decl nil hp_def nil))
   shostak))
 (dltl_SEQcap_dual 0
  (dltl_SEQcap_dual-1 nil 3901363869
   ("" (skeep)
    (("" (decompose-equality)
      (("" (iff)
        (("" (expand "SOMERUNS_tr")
          (("" (split)
            (("1" (flatten)
              (("1" (skeep)
                (("1" (expand "normDLGLOBALLY")
                  (("1" (split -3)
                    (("1" (flatten)
                      (("1" (skeep)
                        (("1" (inst 1 "append(trace_1,trace)")
                          (("1" (split 1)
                            (("1" (expand "init_env")
                              (("1"
                                (typepred "trace_1")
                                (("1"
                                  (expand "wf_trace?")
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (lemma "car_append[TraceState]")
                                      (("1"
                                        (inst?)
                                        (("1"
                                          (replace -1)
                                          (("1" (propax) nil nil))
                                          nil)
                                         ("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "trace_semantic_rel" 1)
                              (("2"
                                (flatten)
                                (("2"
                                  (inst 1 "trace_1" "trace")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil)
                             ("3" (flatten)
                              (("3"
                                (expand "finite_trace?")
                                (("3"
                                  (expand "final_env")
                                  (("3"
                                    (typepred "trace_1")
                                    (("3"
                                      (typepred "trace")
                                      (("3"
                                        (expand "wf_trace?")
                                        (("3"
                                          (flatten)
                                          (("3"
                                            (lemma
                                             "last_append[TraceState]")
                                            (("3"
                                              (inst?)
                                              (("1"
                                                (replace -1)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (split 3)
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (flatten)
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("3"
                                                      (assert)
                                                      (("3"
                                                        (case
                                                         "DLGLOBALLY(State_Trace(Q))(trace)")
                                                        (("1"
                                                          (lemma
                                                           "DLGLOBALLY_append")
                                                          (("1"
                                                            (inst?)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (lemma
                                                                 "wf_append_finite")
                                                                (("1"
                                                                  (inst?)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (expand
                                                                       "finite_trace?")
                                                                      (("1"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("4" (flatten)
                              (("4"
                                (expand "finite_trace?")
                                (("4"
                                  (expand "final_env")
                                  (("4"
                                    (typepred "trace_1")
                                    (("4"
                                      (typepred "trace")
                                      (("4"
                                        (expand "wf_trace?")
                                        (("4"
                                          (flatten)
                                          (("4"
                                            (lemma
                                             "last_append[TraceState]")
                                            (("4"
                                              (inst?)
                                              (("1"
                                                (replace -1)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (lemma
                                                     "DLGLOBALLY_append")
                                                    (("1"
                                                      (inst?)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (lemma
                                                           "wf_append_finite")
                                                          (("1"
                                                            (inst?)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (expand
                                                                 "finite_trace?")
                                                                (("1"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (lemma "wf_append_finite")
                            (("2" (inst?)
                              (("2"
                                (assert)
                                (("2"
                                  (typepred "trace")
                                  (("2"
                                    (expand "valid_trace?")
                                    (("2"
                                      (expand "finite_trace?")
                                      (("2"
                                        (expand "wf_trace?")
                                        (("2"
                                          (flatten)
                                          (("2"
                                            (lemma
                                             "last_append[TraceState]")
                                            (("2"
                                              (inst?)
                                              (("1" (assert) nil nil)
                                               ("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (flatten)
                      (("2" (inst 2 "trace_1")
                        (("2" (assert)
                          (("2" (expand "trace_semantic_rel" 2)
                            (("2" (flatten)
                              (("2"
                                (expand "finite_trace?")
                                (("2"
                                  (flatten)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (flatten)
              (("2" (skeep)
                (("2" (expand "trace_semantic_rel" -2)
                  (("2" (split)
                    (("1" (skeep)
                      (("1" (inst 1 "trace1")
                        (("1" (assert)
                          (("1" (split)
                            (("1" (replace -5)
                              (("1"
                                (typepred "trace1")
                                (("1"
                                  (expand "wf_trace?")
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (lemma "car_append[TraceState]")
                                      (("1"
                                        (inst?)
                                        (("1"
                                          (expand "init_env")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (replace -1)
                                              (("1" (propax) nil nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "normDLGLOBALLY")
                              (("2"
                                (split)
                                (("1"
                                  (inst 1 "trace2")
                                  (("1"
                                    (assert)
                                    (("1"
                                      (replace -5)
                                      (("1"
                                        (expand "final_env")
                                        (("1"
                                          (expand "finite_trace?")
                                          (("1"
                                            (typepred "trace1")
                                            (("1"
                                              (typepred "trace2")
                                              (("1"
                                                (expand "wf_trace?")
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (lemma
                                                     "last_append[TraceState]")
                                                    (("1"
                                                      (inst?)
                                                      (("1"
                                                        (replace -1)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (case
                                                             "DLGLOBALLY(State_Trace(Q))(trace2)")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (case
                                                               "DLGLOBALLY(State_Trace(Q))(append(trace1, trace2))")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (lemma
                                                                   "DLGLOBALLY_append")
                                                                  (("1"
                                                                    (inst?)
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (typepred "trace2")
                                    (("2"
                                      (typepred "trace")
                                      (("2"
                                        (expand "valid_trace?")
                                        (("2"
                                          (expand "finite_trace?")
                                          (("2"
                                            (expand "wf_trace?")
                                            (("2"
                                              (flatten)
                                              (("2"
                                                (lemma
                                                 "last_append[TraceState]")
                                                (("2"
                                                  (inst?)
                                                  (("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (replace -5)
                                  (("2"
                                    (case
                                     "DLGLOBALLY(State_Trace(Q))(append(trace1, trace2))")
                                    (("1"
                                      (lemma "DLGLOBALLY_append")
                                      (("1"
                                        (inst?)
                                        (("1" (assert) nil nil))
                                        nil))
                                      nil)
                                     ("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (expand "valid_trace?")
                          (("2" (assert) nil nil)) nil))
                        nil))
                      nil)
                     ("2" (flatten)
                      (("2" (inst 1 "trace")
                        (("2" (assert)
                          (("2" (expand "normDLGLOBALLY")
                            (("2" (expand "finite_trace?")
                              (("2"
                                (split 1)
                                (("1"
                                  (flatten)
                                  (("1" (grind) nil nil))
                                  nil)
                                 ("2"
                                  (flatten)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((HP type-decl nil HP_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (list type-decl nil list_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (Environment type-eq-decl nil hp_def nil)
    (SOMERUNS_tr const-decl "bool" ltl_expr nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (normDLGLOBALLY const-decl "bool" ltl_expr nil)
    (seq? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (SEQ adt-constructor-decl "[[HP, HP] -> (seq?)]" HP_adt nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (final_env const-decl "Environment" trace_semantics nil)
    (DLGLOBALLY_append formula-decl nil ltl_expr nil)
    (wf_append_finite formula-decl nil trace_semantics nil)
    (DLGLOBALLY const-decl "bool" ltl_expr nil)
    (State_Trace const-decl "bool" ltl_expr nil)
    (last_append formula-decl nil more_list_props structures)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (init_env const-decl "Environment" trace_semantics nil)
    (car_append formula-decl nil more_list_props structures)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil))
   shostak))
 (dltl_SEQcup 0
  (dltl_SEQcup-1 nil 3889013508
   ("" (skeep)
    (("" (decompose-equality)
      (("" (iff)
        (("" (split)
          (("1" (flatten)
            (("1" (expand "ALLRUNS_tr")
              (("1" (skeep)
                (("1" (expand "trace_semantic_rel" -3)
                  (("1" (split -3)
                    (("1" (skeep)
                      (("1" (typepred "trace1")
                        (("1" (typepred "trace2")
                          (("1" (expand "wf_trace?")
                            (("1" (flatten)
                              (("1"
                                (inst -10 "trace1")
                                (("1"
                                  (assert)
                                  (("1"
                                    (split -10)
                                    (("1"
                                      (expand "normDLEVENTUALLY" -1)
                                      (("1"
                                        (split -1)
                                        (("1"
                                          (inst -1 "trace2")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (expand
                                               "normDLEVENTUALLY"
                                               3)
                                              (("1"
                                                (replace -10)
                                                (("1"
                                                  (expand
                                                   "finite_trace?")
                                                  (("1"
                                                    (expand
                                                     "final_env")
                                                    (("1"
                                                      (lemma
                                                       "last_append[TraceState]")
                                                      (("1"
                                                        (inst?)
                                                        (("1"
                                                          (replace -1)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (case
                                                               "DLEVENTUALLY(State_Trace(Q))(trace2)")
                                                              (("1"
                                                                (case
                                                                 "DLEVENTUALLY(State_Trace(Q))(append(trace1, trace2))")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil)
                                                                 ("2"
                                                                  (hide-all-but
                                                                   (-1
                                                                    -4
                                                                    -6
                                                                    1))
                                                                  (("2"
                                                                    (lemma
                                                                     "wf_append_finite")
                                                                    (("2"
                                                                      (inst?)
                                                                      (("2"
                                                                        (lemma
                                                                         "DLEVENTUALLY_append")
                                                                        (("2"
                                                                          (inst?)
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (assert)
                                                                (("2"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (typepred "trace")
                                            (("2"
                                              (expand "valid_trace?")
                                              (("2"
                                                (expand
                                                 "finite_trace?")
                                                (("2"
                                                  (replace -11)
                                                  (("2"
                                                    (typepred "trace2")
                                                    (("2"
                                                      (expand
                                                       "wf_trace?")
                                                      (("2"
                                                        (flatten)
                                                        (("2"
                                                          (lemma
                                                           "last_append[TraceState]")
                                                          (("2"
                                                            (inst?)
                                                            (("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (expand "normDLEVENTUALLY")
                                          (("2"
                                            (replace -10)
                                            (("2"
                                              (case
                                               "DLEVENTUALLY(State_Trace(Q))(append(trace1, trace2))")
                                              (("1" (assert) nil nil)
                                               ("2"
                                                (hide 4)
                                                (("2"
                                                  (lemma
                                                   "DLEVENTUALLY_EXISTS")
                                                  (("2"
                                                    (inst-cp
                                                     -1
                                                     "Q"
                                                     "trace1")
                                                    (("2"
                                                      (inst
                                                       -1
                                                       "Q"
                                                       "append(trace1,trace2)")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (skeep)
                                                          (("2"
                                                            (lemma
                                                             "nth_append[TraceState]")
                                                            (("2"
                                                              (inst?)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (inst
                                                                   -1
                                                                   "i")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (typepred
                                                                       "i")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (inst
                                                                           1
                                                                           "i")
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (replace
                                                                                 -2)
                                                                                (("2"
                                                                                  (split
                                                                                   -3)
                                                                                  (("1"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil)
                                                                                   ("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (skeep)
                                                                                        (("2"
                                                                                          (inst
                                                                                           2
                                                                                           "t")
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("3"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (replace -9)
                                      (("2"
                                        (lemma
                                         "car_append[TraceState]")
                                        (("2"
                                          (inst?)
                                          (("2"
                                            (expand "init_env")
                                            (("2"
                                              (replace -1)
                                              (("2" (propax) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (expand "valid_trace?")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (flatten)
                      (("2" (expand "normDLEVENTUALLY")
                        (("2" (expand "finite_trace?")
                          (("2" (assert)
                            (("2" (split 1)
                              (("1"
                                (flatten)
                                (("1"
                                  (assert)
                                  (("1" (grind) nil nil))
                                  nil))
                                nil)
                               ("2"
                                (flatten)
                                (("2"
                                  (inst -3 "trace")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (flatten)
            (("2" (expand "ALLRUNS_tr")
              (("2" (skeep)
                (("2" (expand "normDLEVENTUALLY" 1 1)
                  (("2" (split 1)
                    (("1" (flatten)
                      (("1" (skeep)
                        (("1" (typepred "trace_1")
                          (("1" (typepred "trace")
                            (("1" (expand "wf_trace?")
                              (("1"
                                (flatten)
                                (("1"
                                  (inst -10 "append(trace_1,trace)")
                                  (("1"
                                    (assert)
                                    (("1"
                                      (split -10)
                                      (("1"
                                        (expand "normDLEVENTUALLY")
                                        (("1"
                                          (expand "finite_trace?")
                                          (("1"
                                            (expand "final_env")
                                            (("1"
                                              (lemma
                                               "last_append[TraceState]")
                                              (("1"
                                                (inst?)
                                                (("1"
                                                  (replace -1)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (case
                                                       "DLEVENTUALLY(State_Trace(Q))(append(trace_1, trace))")
                                                      (("1"
                                                        (case
                                                         "DLEVENTUALLY(State_Trace(Q))(trace)")
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil)
                                                         ("2"
                                                          (hide-all-but
                                                           (-1
                                                            -4
                                                            -7
                                                            1
                                                            5))
                                                          (("2"
                                                            (lemma
                                                             "DLEVENTUALLY_append")
                                                            (("2"
                                                              (inst?)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (lemma
                                                                   "wf_append_finite")
                                                                  (("2"
                                                                    (inst?)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (assert)
                                                        (("2"
                                                          (split -2)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (grind)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("3"
                                                        (lemma
                                                         "wf_append_finite")
                                                        (("3"
                                                          (inst?)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (lemma
                                         "car_append[TraceState]")
                                        (("2"
                                          (inst?)
                                          (("2"
                                            (expand "init_env")
                                            (("2"
                                              (replace -1)
                                              (("2" (propax) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("3"
                                        (expand "trace_semantic_rel" 1)
                                        (("3"
                                          (flatten)
                                          (("3"
                                            (inst 1 "trace_1" "trace")
                                            (("3" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (lemma "wf_append_finite")
                                    (("2"
                                      (inst?)
                                      (("2"
                                        (assert)
                                        (("2"
                                          (expand "valid_trace?")
                                          (("2"
                                            (expand "finite_trace?")
                                            (("2"
                                              (lemma
                                               "last_append[TraceState]")
                                              (("2"
                                                (inst?)
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (replace -1)
                                                    (("2"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (flatten)
                      (("2" (inst -1 "trace_1")
                        (("2" (assert)
                          (("2" (split)
                            (("1" (expand "normDLEVENTUALLY")
                              (("1" (propax) nil nil)) nil)
                             ("2" (expand "trace_semantic_rel" 1)
                              (("2"
                                (flatten)
                                (("2"
                                  (expand "finite_trace?")
                                  (("2"
                                    (flatten)
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((HP type-decl nil HP_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (list type-decl nil list_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (Environment type-eq-decl nil hp_def nil)
    (ALLRUNS_tr const-decl "bool" ltl_expr nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (normDLEVENTUALLY const-decl "bool" ltl_expr nil)
    (seq? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (SEQ adt-constructor-decl "[[HP, HP] -> (seq?)]" HP_adt nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (init_env const-decl "Environment" trace_semantics nil)
    (car_append formula-decl nil more_list_props structures)
    (DLEVENTUALLY_EXISTS formula-decl nil ltl_expr nil)
    (D adt-accessor-decl "[(state_diff?) ->
   {D: (dd?) | EXISTS (b: posreal): D = closed_interval(0, b)}]"
     TraceState_adt nil)
    (closed_interval const-decl "(closed_interval?(a, b))" interval_def
     ODEs)
    (dd? const-decl "bool" hp_expr nil)
    (state_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (nth_append formula-decl nil more_list_props structures)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (last_append formula-decl nil more_list_props structures)
    (DLEVENTUALLY const-decl "bool" ltl_expr nil)
    (State_Trace const-decl "bool" ltl_expr nil)
    (DLEVENTUALLY_append formula-decl nil ltl_expr nil)
    (wf_append_finite formula-decl nil trace_semantics nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (final_env const-decl "Environment" trace_semantics nil)
    (valid_trace? const-decl "bool" trace_semantics nil))
   shostak))
 (dltl_SEQcup_dual 0
  (dltl_SEQcup_dual-1 nil 3901700996
   ("" (skeep)
    (("" (rewrite "dlSequent_equiv")
      (("" (expand "dlSequent")
        (("" (skeep)
          (("" (inst -1 "0")
            (("" (inst 1 "0")
              (("" (expand "nth")
                (("" (expand "DLOR")
                  (("" (expand "SOMERUNS_st")
                    (("" (expand "SOMERUNS_tr")
                      (("" (split)
                        (("1" (skeep*)
                          (("1" (inst 1 "append(trace,trace_1)")
                            (("1" (assert)
                              (("1"
                                (split)
                                (("1"
                                  (expand "init_env")
                                  (("1"
                                    (typepred "trace")
                                    (("1"
                                      (expand "wf_trace?")
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (lemma
                                           "car_append[TraceState]")
                                          (("1"
                                            (inst?)
                                            (("1"
                                              (replace -1)
                                              (("1" (propax) nil nil))
                                              nil)
                                             ("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (expand "trace_semantic_rel" 1)
                                  (("2"
                                    (flatten)
                                    (("2"
                                      (inst 1 "trace" "trace_1")
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("3"
                                  (expand "normDLEVENTUALLY")
                                  (("3"
                                    (expand "finite_trace?")
                                    (("3"
                                      (expand "final_env")
                                      (("3"
                                        (typepred "trace_1")
                                        (("3"
                                          (expand "wf_trace?")
                                          (("3"
                                            (flatten)
                                            (("3"
                                              (lemma
                                               "last_append[TraceState]")
                                              (("3"
                                                (inst?)
                                                (("1"
                                                  (replace -1)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (lemma
                                                       "DLEVENTUALLY_append")
                                                      (("1"
                                                        (inst?)
                                                        (("1"
                                                          (lemma
                                                           "wf_append_finite")
                                                          (("1"
                                                            (inst?)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (lemma "wf_append_finite")
                              (("2"
                                (inst?)
                                (("2"
                                  (assert)
                                  (("2"
                                    (typepred "trace_1")
                                    (("2"
                                      (expand "valid_trace?")
                                      (("2"
                                        (expand "finite_trace?")
                                        (("2"
                                          (expand "wf_trace?")
                                          (("2"
                                            (flatten)
                                            (("2"
                                              (lemma
                                               "last_append[TraceState]")
                                              (("2"
                                                (inst?)
                                                (("1" (assert) nil nil)
                                                 ("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (skeep)
                          (("2" (expand "trace_semantic_rel")
                            (("2" (split)
                              (("1"
                                (skeep)
                                (("1"
                                  (expand "trace_semantic_rel" -2)
                                  (("1"
                                    (expand "DLBOOL")
                                    (("1"
                                      (flatten)
                                      (("1"
                                        (typepred "trace")
                                        (("1"
                                          (replace -9)
                                          (("1"
                                            (expand "valid_trace?")
                                            (("1"
                                              (expand "finite_trace?")
                                              (("1"
                                                (lemma
                                                 "last_append[TraceState]")
                                                (("1"
                                                  (inst?)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (replace -1)
                                                      (("1"
                                                        (expand "last")
                                                        (("1"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (typepred "trace2")
                                                    (("2"
                                                      (expand
                                                       "wf_trace?")
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (flatten)
                                (("2"
                                  (inst 1 "trace")
                                  (("2"
                                    (assert)
                                    (("2"
                                      (flatten)
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((dlSequent_equiv formula-decl nil dynamic_logic nil)
    (Environment type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (list type-decl nil list_adt nil)
    (Formulas type-eq-decl nil bool_expr nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (HP type-decl nil HP_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (SOMERUNS_tr const-decl "bool" ltl_expr nil)
    (seq? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (SEQ adt-constructor-decl "[[HP, HP] -> (seq?)]" HP_adt nil)
    (normDLEVENTUALLY const-decl "bool" ltl_expr nil)
    (DLOR const-decl "bool" bool_expr nil)
    (SOMERUNS_st const-decl "bool" ltl_expr nil)
    (test? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (TEST adt-constructor-decl "[BoolExpr -> (test?)]" HP_adt nil)
    (DLBOOL const-decl "bool" bool_expr nil)
    (last const-decl "T" more_list_props structures)
    (final_env const-decl "Environment" trace_semantics nil)
    (last_append formula-decl nil more_list_props structures)
    (DLEVENTUALLY_append formula-decl nil ltl_expr nil)
    (wf_append_finite formula-decl nil trace_semantics nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (init_env const-decl "Environment" trace_semantics nil)
    (car_append formula-decl nil more_list_props structures)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (length_singleton formula-decl nil more_list_props structures)
    (dlSequent const-decl "bool" dynamic_logic nil))
   shostak))
 (dltl_SEQcup_dual_con 0
  (dltl_SEQcup_dual_con-1 nil 3903082154
   ("" (skeep)
    (("" (lemma "dlSequent_equiv")
      (("" (inst?)
        (("" (assert)
          (("" (hide 2)
            (("" (expand "dlSequent")
              (("" (skeep)
                (("" (inst 1 "0")
                  (("" (inst -1 "0")
                    (("" (expand "nth")
                      (("" (expand "SOMERUNS_tr")
                        (("" (skeep)
                          (("" (expand "trace_semantic_rel" -2)
                            (("" (split)
                              (("1"
                                (skeep)
                                (("1"
                                  (inst 1 "trace1")
                                  (("1"
                                    (assert)
                                    (("1"
                                      (replace -5)
                                      (("1"
                                        (split)
                                        (("1"
                                          (expand "init_env")
                                          (("1"
                                            (typepred "trace1")
                                            (("1"
                                              (expand "wf_trace?")
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (lemma
                                                   "car_append[TraceState]")
                                                  (("1"
                                                    (inst?)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (replace -1)
                                                        (("1"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (expand "normDLEVENTUALLY")
                                          (("2"
                                            (flatten)
                                            (("2"
                                              (inst 1 "trace2")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (lemma
                                                   "DLEVENTUALLY_append")
                                                  (("1"
                                                    (inst?)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (expand
                                                         "finite_trace?")
                                                        (("1"
                                                          (expand
                                                           "final_env")
                                                          (("1"
                                                            (typepred
                                                             "trace2")
                                                            (("1"
                                                              (expand
                                                               "wf_trace?")
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (lemma
                                                                   "last_append[TraceState]")
                                                                  (("1"
                                                                    (inst?)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (replace
                                                                         -1)
                                                                        (("1"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (typepred "trace")
                                                (("2"
                                                  (replace -7)
                                                  (("2"
                                                    (expand
                                                     "valid_trace?")
                                                    (("2"
                                                      (expand
                                                       "finite_trace?")
                                                      (("2"
                                                        (typepred
                                                         "trace2")
                                                        (("2"
                                                          (expand
                                                           "wf_trace?")
                                                          (("2"
                                                            (flatten)
                                                            (("2"
                                                              (lemma
                                                               "last_append[TraceState]")
                                                              (("2"
                                                                (inst?)
                                                                (("2"
                                                                  (replace
                                                                   -1)
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (expand "valid_trace?")
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (flatten)
                                (("2"
                                  (inst 1 "trace")
                                  (("2"
                                    (assert)
                                    (("2"
                                      (expand "normDLEVENTUALLY" 1)
                                      (("2"
                                        (expand "finite_trace?")
                                        (("2"
                                          (split 1)
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (assert)
                                              (("1" (grind) nil nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (flatten)
                                            (("2"
                                              (expand
                                               "normDLEVENTUALLY")
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (expand
                                                   "finite_trace?")
                                                  (("2"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((dlSequent_equiv formula-decl nil dynamic_logic nil)
    (dlSequent const-decl "bool" dynamic_logic nil)
    (length_singleton formula-decl nil more_list_props structures)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (DLEVENTUALLY_append formula-decl nil ltl_expr nil)
    (final_env const-decl "Environment" trace_semantics nil)
    (last_append formula-decl nil more_list_props structures)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (init_env const-decl "Environment" trace_semantics nil)
    (car_append formula-decl nil more_list_props structures)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (SEQ adt-constructor-decl "[[HP, HP] -> (seq?)]" HP_adt nil)
    (seq? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (normDLEVENTUALLY const-decl "bool" ltl_expr nil)
    (SOMERUNS_tr const-decl "bool" ltl_expr nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (TraceState type-decl nil TraceState_adt nil)
    (HP type-decl nil HP_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (Formulas type-eq-decl nil bool_expr nil)
    (list type-decl nil list_adt nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (Environment type-eq-decl nil hp_def nil))
   shostak))
 (dltl_SEQtriangleEG 0
  (dltl_SEQtriangleEG-1 nil 3889025577
   ("" (skeep)
    (("" (decompose-equality)
      (("" (iff)
        (("" (split)
          (("1" (flatten)
            (("1" (expand "ALLRUNS_tr")
              (("1" (skeep)
                (("1" (expand "trace_semantic_rel" -3)
                  (("1" (split -3)
                    (("1" (skeep)
                      (("1" (typepred "trace1")
                        (("1" (typepred "trace2")
                          (("1" (expand "wf_trace?")
                            (("1" (flatten)
                              (("1"
                                (inst -10 "trace1")
                                (("1"
                                  (assert)
                                  (("1"
                                    (split -10)
                                    (("1"
                                      (expand "normDLEG")
                                      (("1"
                                        (replace -10)
                                        (("1"
                                          (inst -1 "trace2")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (expand "finite_trace?")
                                              (("1"
                                                (expand "final_env")
                                                (("1"
                                                  (lemma
                                                   "last_append[TraceState]")
                                                  (("1"
                                                    (inst?)
                                                    (("1"
                                                      (replace -1)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (split -2)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (grind)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (flatten)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (lemma
                                                                 "DLEG_nth")
                                                                (("2"
                                                                  (inst-cp
                                                                   -1
                                                                   "Q"
                                                                   "append(trace1, trace2)")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (inst?
                                                                       -1)
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (skeep)
                                                                          (("2"
                                                                            (inst
                                                                             2
                                                                             "length(trace1)+j")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (lemma
                                                                                 "nth_append[TraceState]")
                                                                                (("1"
                                                                                  (inst-cp
                                                                                   -1
                                                                                   "trace1"
                                                                                   "trace2"
                                                                                   "length(trace1) + j")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (skeep)
                                                                                      (("1"
                                                                                        (inst
                                                                                         -3
                                                                                         "i")
                                                                                        (("1"
                                                                                          (inst
                                                                                           -1
                                                                                           "trace1"
                                                                                           "trace2"
                                                                                           "i + length(trace1) + j")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (typepred
                                                                                               "i")
                                                                                              (("1"
                                                                                                (typepred
                                                                                                 "j")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "length_append[TraceState]")
                                                                                                    (("1"
                                                                                                      (inst?)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -4)
                                                                                                          (("1"
                                                                                                            (split
                                                                                                             -6)
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (propax)
                                                                                                              nil
                                                                                                              nil)
                                                                                                             ("3"
                                                                                                              (flatten)
                                                                                                              (("3"
                                                                                                                (assert)
                                                                                                                (("3"
                                                                                                                  (split)
                                                                                                                  (("1"
                                                                                                                    (flatten)
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (skeep)
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           4
                                                                                                                           "T")
                                                                                                                          (("1"
                                                                                                                            (skeep)
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               -2
                                                                                                                               "t")
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (flatten)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("4"
                                                                                                              (flatten)
                                                                                                              (("4"
                                                                                                                (assert)
                                                                                                                (("4"
                                                                                                                  (split
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (flatten)
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (skeep)
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -2
                                                                                                                           "t")
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (flatten)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (typepred
                                                                                             "i")
                                                                                            (("2"
                                                                                              (lemma
                                                                                               "length_append[TraceState]")
                                                                                              (("2"
                                                                                                (inst?)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (lemma
                                                                               "length_append[TraceState]")
                                                                              (("2"
                                                                                (inst?)
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (typepred "trace")
                                            (("2"
                                              (expand "valid_trace?")
                                              (("2"
                                                (expand
                                                 "finite_trace?")
                                                (("2"
                                                  (lemma
                                                   "last_append[TraceState]")
                                                  (("2"
                                                    (inst?)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (replace -1)
                                                        (("2"
                                                          (replace -12)
                                                          (("2"
                                                            (replace
                                                             -1)
                                                            (("2"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (replace -9)
                                      (("2"
                                        (lemma
                                         "car_append[TraceState]")
                                        (("2"
                                          (inst?)
                                          (("2"
                                            (expand "init_env")
                                            (("2"
                                              (replace -1)
                                              (("2" (propax) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (expand "valid_trace?")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (flatten)
                      (("2" (inst -3 "trace")
                        (("2" (assert)
                          (("2" (expand "normDLEG")
                            (("2" (expand "finite_trace?")
                              (("2"
                                (split -3)
                                (("1"
                                  (flatten)
                                  (("1"
                                    (assert)
                                    (("1" (grind) nil nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (flatten)
            (("2" (expand "ALLRUNS_tr")
              (("2" (skeep)
                (("2" (expand "normDLEG")
                  (("2" (split 1)
                    (("1" (flatten)
                      (("1" (skeep)
                        (("1" (typepred "trace_1")
                          (("1" (typepred "trace")
                            (("1" (expand "wf_trace?")
                              (("1"
                                (flatten)
                                (("1"
                                  (inst -10 "append(trace_1,trace)")
                                  (("1"
                                    (expand "finite_trace?")
                                    (("1"
                                      (expand "final_env")
                                      (("1"
                                        (lemma
                                         "last_append[TraceState]")
                                        (("1"
                                          (inst?)
                                          (("1"
                                            (replace -1)
                                            (("1"
                                              (expand "init_env")
                                              (("1"
                                                (lemma
                                                 "car_append[TraceState]")
                                                (("1"
                                                  (inst? -1)
                                                  (("1"
                                                    (replace -1)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (replace -13)
                                                        (("1"
                                                          (split -12)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (grind)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (flatten)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (lemma
                                                                 "DLEG_nth")
                                                                (("2"
                                                                  (inst-cp
                                                                   -1
                                                                   "Q"
                                                                   "append(trace_1, trace)")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (inst
                                                                       -1
                                                                       "Q"
                                                                       "trace")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (skeep)
                                                                          (("2"
                                                                            (typepred
                                                                             "j")
                                                                            (("2"
                                                                              (lemma
                                                                               "length_append[TraceState]")
                                                                              (("2"
                                                                                (inst?)
                                                                                (("2"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("2"
                                                                                    (case
                                                                                     "j < length[TraceState](trace_1)")
                                                                                    (("1"
                                                                                      (inst
                                                                                       1
                                                                                       "0")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "nth"
                                                                                         1
                                                                                         1)
                                                                                        (("1"
                                                                                          (skeep)
                                                                                          (("1"
                                                                                            (inst
                                                                                             -4
                                                                                             "length(trace_1)-j+i")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "nth_append[TraceState]")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -1
                                                                                                     "trace_1"
                                                                                                     "trace"
                                                                                                     "length(trace_1) + i")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (split
                                                                                                           -5)
                                                                                                          (("1"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil)
                                                                                                           ("3"
                                                                                                            (flatten)
                                                                                                            (("3"
                                                                                                              (assert)
                                                                                                              (("3"
                                                                                                                (split
                                                                                                                 3)
                                                                                                                (("1"
                                                                                                                  (flatten)
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     1
                                                                                                                     "0")
                                                                                                                    (("1"
                                                                                                                      (skeep)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -3
                                                                                                                           "t")
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (typepred
                                                                                                                       "D(nth[TraceState](trace, i))")
                                                                                                                      (("2"
                                                                                                                        (skeep)
                                                                                                                        (("2"
                                                                                                                          (replace
                                                                                                                           -2)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "closed_interval")
                                                                                                                            (("2"
                                                                                                                              (propax)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (flatten)
                                                                                                                  (("2"
                                                                                                                    (skeep)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         -2
                                                                                                                         "t")
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("4"
                                                                                                            (flatten)
                                                                                                            (("4"
                                                                                                              (assert)
                                                                                                              (("4"
                                                                                                                (split
                                                                                                                 3)
                                                                                                                (("1"
                                                                                                                  (flatten)
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     1
                                                                                                                     "0")
                                                                                                                    (("1"
                                                                                                                      (skeep)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -3
                                                                                                                           "t")
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (expand
                                                                                                                       "hp")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (flatten)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (expand
                                                                                         "length")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (inst
                                                                                       2
                                                                                       "j-length(trace_1)")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (split
                                                                                           2)
                                                                                          (("1"
                                                                                            (case
                                                                                             "j-length(trace_1)=length(trace)-1")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "valid_trace?")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "finite_trace?")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "last")
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (inst
                                                                                               -9
                                                                                               "j - length(trace_1)")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil)
                                                                                               ("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (skeep)
                                                                                            (("2"
                                                                                              (inst
                                                                                               -3
                                                                                               "i")
                                                                                              (("2"
                                                                                                (lemma
                                                                                                 "nth_append[TraceState]")
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -1
                                                                                                   "trace_1"
                                                                                                   "trace"
                                                                                                   "i+j")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (split
                                                                                                         -4)
                                                                                                        (("1"
                                                                                                          (flatten)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil)
                                                                                                         ("3"
                                                                                                          (flatten)
                                                                                                          (("3"
                                                                                                            (assert)
                                                                                                            (("3"
                                                                                                              (split)
                                                                                                              (("1"
                                                                                                                (flatten)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (skeep)
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       3
                                                                                                                       "T")
                                                                                                                      (("1"
                                                                                                                        (skeep)
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -2
                                                                                                                           "t")
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (flatten)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("4"
                                                                                                          (flatten)
                                                                                                          (("4"
                                                                                                            (assert)
                                                                                                            (("4"
                                                                                                              (split
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (flatten)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (skeep)
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -2
                                                                                                                       "t")
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (flatten)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("3"
                                                            (expand
                                                             "trace_semantic_rel"
                                                             1)
                                                            (("3"
                                                              (flatten)
                                                              (("3"
                                                                (inst
                                                                 1
                                                                 "trace_1"
                                                                 "trace")
                                                                (("3"
                                                                  (assert)
                                                                  (("3"
                                                                    (expand
                                                                     "finite_trace?")
                                                                    (("3"
                                                                      (expand
                                                                       "final_env")
                                                                      (("3"
                                                                        (expand
                                                                         "init_env")
                                                                        (("3"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (assert)
                                    (("2"
                                      (lemma "wf_append_finite")
                                      (("2"
                                        (inst?)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (expand "valid_trace?")
                                            (("2"
                                              (expand "finite_trace?")
                                              (("2"
                                                (lemma
                                                 "last_append[TraceState]")
                                                (("2"
                                                  (inst?)
                                                  (("2"
                                                    (replace -1)
                                                    (("2"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (flatten)
                      (("2" (inst -1 "trace_1")
                        (("2" (assert)
                          (("2" (expand "trace_semantic_rel" 3)
                            (("2" (flatten)
                              (("2"
                                (expand "finite_trace?")
                                (("2"
                                  (assert)
                                  (("2"
                                    (flatten)
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((HP type-decl nil HP_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (list type-decl nil list_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (Environment type-eq-decl nil hp_def nil)
    (ALLRUNS_tr const-decl "bool" ltl_expr nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (normDLEG const-decl "bool" ltl_expr nil)
    (seq? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (SEQ adt-constructor-decl "[[HP, HP] -> (seq?)]" HP_adt nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (init_env const-decl "Environment" trace_semantics nil)
    (car_append formula-decl nil more_list_props structures)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (last_append formula-decl nil more_list_props structures)
    (D adt-accessor-decl "[(state_diff?) ->
   {D: (dd?) | EXISTS (b: posreal): D = closed_interval(0, b)}]"
     TraceState_adt nil)
    (closed_interval const-decl "(closed_interval?(a, b))" interval_def
     ODEs)
    (dd? const-decl "bool" hp_expr nil)
    (state_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (nth_append formula-decl nil more_list_props structures)
    (DLEG_nth formula-decl nil ltl_expr nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (final_env const-decl "Environment" trace_semantics nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (last const-decl "T" more_list_props structures)
    (hp const-decl "bool" interval_def ODEs)
    (max_ci const-decl "{rr: (d) | FORALL (x: (d)): x <= rr}"
     more_ci_props ODEs)
    (DLEVENTUALLY const-decl "bool" ltl_expr nil)
    (DLGLOBALLY const-decl "bool" ltl_expr nil)
    (cut_inf_diff const-decl "Trace" ltl_expr nil)
    (cut_state_diff const-decl
     "{tt: Trace | length(tt) = length(trace)}" ltl_expr nil)
    (State_Trace const-decl "bool" ltl_expr nil)
    (wf_append_finite formula-decl nil trace_semantics nil))
   shostak))
 (dltl_SEQtriangleGE 0
  (dltl_SEQtriangleGE-1 nil 3889087486
   ("" (skeep)
    (("" (decompose-equality)
      (("" (iff)
        (("" (split)
          (("1" (flatten)
            (("1" (expand "ALLRUNS_tr")
              (("1" (skeep)
                (("1" (expand "trace_semantic_rel" -3)
                  (("1" (split -3)
                    (("1" (skeep)
                      (("1" (typepred "trace1")
                        (("1" (typepred "trace2")
                          (("1" (expand "wf_trace?")
                            (("1" (flatten)
                              (("1"
                                (inst -10 "trace1")
                                (("1"
                                  (assert)
                                  (("1"
                                    (split -10)
                                    (("1"
                                      (expand "normDLGE")
                                      (("1"
                                        (replace -10)
                                        (("1"
                                          (inst -1 "trace2")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (expand "finite_trace?")
                                              (("1"
                                                (expand "final_env")
                                                (("1"
                                                  (lemma
                                                   "last_append[TraceState]")
                                                  (("1"
                                                    (inst?)
                                                    (("1"
                                                      (replace -1)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (split -2)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (grind)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (flatten)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (lemma
                                                                 "DLGE_nth")
                                                                (("2"
                                                                  (inst-cp
                                                                   -1
                                                                   "Q"
                                                                   "append(trace1, trace2)")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (inst?
                                                                       -1)
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (skeep)
                                                                          (("2"
                                                                            (inst
                                                                             -1
                                                                             "length(trace2)-1")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (split)
                                                                                (("1"
                                                                                  (typepred
                                                                                   "trace")
                                                                                  (("1"
                                                                                    (replace
                                                                                     -14)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "wf_trace?")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "valid_trace?")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "finite_trace?")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "last")
                                                                                            (("1"
                                                                                              (flatten)
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -6)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (skeep)
                                                                                  (("2"
                                                                                    (typepred
                                                                                     "i")
                                                                                    (("2"
                                                                                      (inst
                                                                                       3
                                                                                       "i + length(trace2) - 1+length(trace1)-j")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (lemma
                                                                                           "nth_append[TraceState]")
                                                                                          (("1"
                                                                                            (inst
                                                                                             -1
                                                                                             "trace1"
                                                                                             "trace2"
                                                                                             "length(trace1) + length(trace2) - 1 + i")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (lift-if)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "length"
                                                                                                   -1
                                                                                                   2)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (split
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (grind)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (flatten)
                                                                                                        (("2"
                                                                                                          (replace
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (typepred
                                                                                                               "j")
                                                                                                              (("2"
                                                                                                                (split
                                                                                                                 +)
                                                                                                                (("1"
                                                                                                                  (flatten)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (split
                                                                                                                       -5)
                                                                                                                      (("1"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (flatten)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (skeep)
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -2
                                                                                                                               "T")
                                                                                                                              (("2"
                                                                                                                                (skeep)
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   2
                                                                                                                                   "t")
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("3"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (flatten)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (split
                                                                                                                       -4)
                                                                                                                      (("1"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (flatten)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             -2
                                                                                                                             "0")
                                                                                                                            (("1"
                                                                                                                              (skeep)
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 3
                                                                                                                                 "t")
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (typepred
                                                                                                                               "D(nth[TraceState](trace2, length[TraceState](trace2) - 1 + i))")
                                                                                                                              (("1"
                                                                                                                                (skeep)
                                                                                                                                (("1"
                                                                                                                                  (replace
                                                                                                                                   -1)
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -2)
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "closed_interval")
                                                                                                                                      (("1"
                                                                                                                                        (propax)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "length"
                                                                                                                                   1)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("3"
                                                                                                                        (flatten)
                                                                                                                        (("3"
                                                                                                                          (assert)
                                                                                                                          (("3"
                                                                                                                            (inst
                                                                                                                             -2
                                                                                                                             "0")
                                                                                                                            (("1"
                                                                                                                              (skeep)
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 4
                                                                                                                                 "t")
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (expand
                                                                                                                               "hp")
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (expand
                                                                                               "length"
                                                                                               1
                                                                                               2)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (lemma
                                                                                         "length_append[TraceState]")
                                                                                        (("2"
                                                                                          (inst?)
                                                                                          (("2"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (expand
                                                                                 "length")
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (typepred "trace")
                                            (("2"
                                              (expand "valid_trace?")
                                              (("2"
                                                (expand
                                                 "finite_trace?")
                                                (("2"
                                                  (lemma
                                                   "last_append[TraceState]")
                                                  (("2"
                                                    (inst?)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (replace -1)
                                                        (("2"
                                                          (replace -12)
                                                          (("2"
                                                            (replace
                                                             -1)
                                                            (("2"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (replace -9)
                                      (("2"
                                        (lemma
                                         "car_append[TraceState]")
                                        (("2"
                                          (inst?)
                                          (("2"
                                            (expand "init_env")
                                            (("2"
                                              (replace -1)
                                              (("2" (propax) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (expand "valid_trace?")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (flatten)
                      (("2" (inst -3 "trace")
                        (("2" (assert)
                          (("2" (expand "normDLGE")
                            (("2" (expand "finite_trace?")
                              (("2"
                                (split -3)
                                (("1"
                                  (flatten)
                                  (("1"
                                    (assert)
                                    (("1" (grind) nil nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (flatten)
            (("2" (expand "ALLRUNS_tr")
              (("2" (skeep)
                (("2" (expand "normDLGE")
                  (("2" (split 1)
                    (("1" (flatten)
                      (("1" (skeep)
                        (("1" (typepred "trace_1")
                          (("1" (typepred "trace")
                            (("1" (expand "wf_trace?")
                              (("1"
                                (flatten)
                                (("1"
                                  (inst -10 "append(trace_1,trace)")
                                  (("1"
                                    (expand "finite_trace?")
                                    (("1"
                                      (expand "final_env")
                                      (("1"
                                        (lemma
                                         "last_append[TraceState]")
                                        (("1"
                                          (inst?)
                                          (("1"
                                            (replace -1)
                                            (("1"
                                              (expand "init_env")
                                              (("1"
                                                (lemma
                                                 "car_append[TraceState]")
                                                (("1"
                                                  (inst? -1)
                                                  (("1"
                                                    (replace -1)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (replace -13)
                                                        (("1"
                                                          (split -12)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (grind)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (flatten)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (lemma
                                                                 "DLGE_nth")
                                                                (("2"
                                                                  (inst-cp
                                                                   -1
                                                                   "Q"
                                                                   "append(trace_1, trace)")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (inst
                                                                       -1
                                                                       "Q"
                                                                       "trace")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (skeep)
                                                                          (("2"
                                                                            (typepred
                                                                             "j")
                                                                            (("2"
                                                                              (lemma
                                                                               "length_append[TraceState]")
                                                                              (("2"
                                                                                (inst?)
                                                                                (("2"
                                                                                  (inst
                                                                                   -3
                                                                                   "length(trace_1)+j")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (lemma
                                                                                       "nth_append[TraceState]")
                                                                                      (("1"
                                                                                        (inst?)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (skeep)
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "nth_append[TraceState]")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "trace_1"
                                                                                                 "trace"
                                                                                                 "i + length(trace_1) + j")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         2
                                                                                                         "i")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (split
                                                                                                             2)
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (split
                                                                                                                   -6)
                                                                                                                  (("1"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (flatten)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (skeep)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -2
                                                                                                                           "T")
                                                                                                                          (("2"
                                                                                                                            (skeep)
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               2
                                                                                                                               "t")
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("3"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (flatten)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (split
                                                                                                                   -5)
                                                                                                                  (("1"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (flatten)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (skeep)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           3
                                                                                                                           "t")
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("3"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("3"
                                                            (expand
                                                             "trace_semantic_rel"
                                                             1)
                                                            (("3"
                                                              (flatten)
                                                              (("3"
                                                                (inst
                                                                 1
                                                                 "trace_1"
                                                                 "trace")
                                                                (("3"
                                                                  (assert)
                                                                  (("3"
                                                                    (expand
                                                                     "finite_trace?")
                                                                    (("3"
                                                                      (expand
                                                                       "final_env")
                                                                      (("3"
                                                                        (expand
                                                                         "init_env")
                                                                        (("3"
                                                                          (grind)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (assert)
                                    (("2"
                                      (lemma "wf_append_finite")
                                      (("2"
                                        (inst?)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (expand "valid_trace?")
                                            (("2"
                                              (expand "finite_trace?")
                                              (("2"
                                                (lemma
                                                 "last_append[TraceState]")
                                                (("2"
                                                  (inst?)
                                                  (("2"
                                                    (replace -1)
                                                    (("2"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (flatten)
                      (("2" (inst -1 "trace_1")
                        (("2" (assert)
                          (("2" (expand "trace_semantic_rel" 3)
                            (("2" (flatten)
                              (("2"
                                (expand "finite_trace?")
                                (("2"
                                  (assert)
                                  (("2"
                                    (flatten)
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((HP type-decl nil HP_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (list type-decl nil list_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (Environment type-eq-decl nil hp_def nil)
    (ALLRUNS_tr const-decl "bool" ltl_expr nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (normDLGE const-decl "bool" ltl_expr nil)
    (seq? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (SEQ adt-constructor-decl "[[HP, HP] -> (seq?)]" HP_adt nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (init_env const-decl "Environment" trace_semantics nil)
    (car_append formula-decl nil more_list_props structures)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (last_append formula-decl nil more_list_props structures)
    (nth_append formula-decl nil more_list_props structures)
    (hp const-decl "bool" interval_def ODEs)
    (D adt-accessor-decl "[(state_diff?) ->
   {D: (dd?) | EXISTS (b: posreal): D = closed_interval(0, b)}]"
     TraceState_adt nil)
    (closed_interval const-decl "(closed_interval?(a, b))" interval_def
     ODEs)
    (dd? const-decl "bool" hp_expr nil)
    (state_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (last const-decl "T" more_list_props structures)
    (DLGE_nth formula-decl nil ltl_expr nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (final_env const-decl "Environment" trace_semantics nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (max_ci const-decl "{rr: (d) | FORALL (x: (d)): x <= rr}"
     more_ci_props ODEs)
    (DLGLOBALLY const-decl "bool" ltl_expr nil)
    (DLEVENTUALLY const-decl "bool" ltl_expr nil)
    (cut_inf_diff const-decl "Trace" ltl_expr nil)
    (cut_state_diff const-decl
     "{tt: Trace | length(tt) = length(trace)}" ltl_expr nil)
    (State_Trace const-decl "bool" ltl_expr nil)
    (wf_append_finite formula-decl nil trace_semantics nil))
   shostak))
 (dltl_SEQEG_dual 0
  (dltl_SEQEG_dual-1 nil 3901701007
   ("" (skeep)
    (("" (expand "SOMERUNS_tr")
      (("" (decompose-equality)
        (("" (iff)
          (("" (split)
            (("1" (flatten)
              (("1" (skeep)
                (("1" (expand "normDLEG")
                  (("1" (split)
                    (("1" (flatten)
                      (("1" (skeep)
                        (("1" (inst 1 "append(trace_1,trace)")
                          (("1" (assert)
                            (("1" (expand "trace_semantic_rel" 1)
                              (("1"
                                (split 1)
                                (("1"
                                  (typepred "trace_1")
                                  (("1"
                                    (expand "wf_trace?")
                                    (("1"
                                      (flatten)
                                      (("1"
                                        (lemma
                                         "car_append[TraceState]")
                                        (("1"
                                          (inst?)
                                          (("1"
                                            (expand "init_env")
                                            (("1"
                                              (replace -1)
                                              (("1" (propax) nil nil))
                                              nil))
                                            nil)
                                           ("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten)
                                  (("2"
                                    (inst 1 "trace_1" "trace")
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil)
                                 ("3"
                                  (flatten)
                                  (("3"
                                    (expand "finite_trace?")
                                    (("3"
                                      (expand "final_env")
                                      (("3"
                                        (typepred "trace")
                                        (("3"
                                          (expand "wf_trace?")
                                          (("3"
                                            (flatten)
                                            (("3"
                                              (use
                                               "last_append[TraceState]")
                                              (("1"
                                                (replace -1)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (grind)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("4"
                                  (flatten)
                                  (("4"
                                    (expand "finite_trace?")
                                    (("4"
                                      (typepred "trace")
                                      (("4"
                                        (expand "wf_trace?")
                                        (("4"
                                          (flatten)
                                          (("4"
                                            (use
                                             "last_append[TraceState]")
                                            (("1"
                                              (replace -1)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (lemma "DLEG_nth")
                                                  (("1"
                                                    (inst-cp
                                                     -1
                                                     "Q"
                                                     "trace")
                                                    (("1"
                                                      (inst
                                                       -1
                                                       "Q"
                                                       "append(trace_1, trace)")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (skeep)
                                                          (("1"
                                                            (inst
                                                             1
                                                             "length(append(trace_1, trace))-1")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (expand
                                                                 "last")
                                                                (("1"
                                                                  (replace
                                                                   -2)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (inst
                                                                       -1
                                                                       "length(trace)-j-1")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (expand
                                                                           "valid_trace?")
                                                                          (("1"
                                                                            (expand
                                                                             "finite_trace?")
                                                                            (("1"
                                                                              (expand
                                                                               "last")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (skeep)
                                                                                  (("1"
                                                                                    (typepred
                                                                                     "i")
                                                                                    (("1"
                                                                                      (split
                                                                                       -2)
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (skeep)
                                                                                          (("1"
                                                                                            (inst
                                                                                             1
                                                                                             "T")
                                                                                            (("1"
                                                                                              (skeep)
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -2
                                                                                                 "t")
                                                                                                (("1"
                                                                                                  (grind)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (inst
                                                                                           2
                                                                                           "0")
                                                                                          (("1"
                                                                                            (skeep)
                                                                                            (("1"
                                                                                              (inst
                                                                                               -1
                                                                                               "t")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (expand
                                                                                             "hp")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              (("2"
                                                                (use
                                                                 "length_append[TraceState]")
                                                                (("2"
                                                                  (replace
                                                                   -1)
                                                                  (("2"
                                                                    (expand
                                                                     "length"
                                                                     1
                                                                     2)
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (lemma "wf_append_finite")
                            (("2" (inst?)
                              (("2"
                                (assert)
                                (("2"
                                  (typepred "trace")
                                  (("2"
                                    (expand "wf_trace?")
                                    (("2"
                                      (expand "valid_trace?")
                                      (("2"
                                        (expand "finite_trace?")
                                        (("2"
                                          (flatten)
                                          (("2"
                                            (use
                                             "last_append[TraceState]")
                                            (("1"
                                              (replace -1)
                                              (("1" (assert) nil nil))
                                              nil)
                                             ("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (flatten)
                      (("2" (inst 2 "trace_1")
                        (("2" (assert)
                          (("2" (expand "trace_semantic_rel" 2)
                            (("2" (flatten)
                              (("2"
                                (expand "finite_trace?")
                                (("2"
                                  (assert)
                                  (("2"
                                    (flatten)
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (flatten)
              (("2" (skeep)
                (("2" (expand "trace_semantic_rel" -2)
                  (("2" (split)
                    (("1" (skeep)
                      (("1" (inst 1 "trace1")
                        (("1" (assert)
                          (("1" (split 1)
                            (("1" (expand "init_env")
                              (("1"
                                (typepred "trace1")
                                (("1"
                                  (expand "wf_trace?")
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (use "car_append[TraceState]")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (replace -8)
                                          (("1"
                                            (replace -1)
                                            (("1" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "normDLEG")
                              (("2"
                                (inst 1 "trace2")
                                (("1"
                                  (assert)
                                  (("1"
                                    (replace -5)
                                    (("1"
                                      (expand "finite_trace?")
                                      (("1"
                                        (expand "final_env")
                                        (("1"
                                          (typepred "trace2")
                                          (("1"
                                            (expand "wf_trace?")
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (use
                                                 "last_append[TraceState]")
                                                (("1"
                                                  (replace -1)
                                                  (("1"
                                                    (split -10)
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (flatten)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (lemma
                                                           "DLEG_nth")
                                                          (("2"
                                                            (inst-cp
                                                             -1
                                                             "Q"
                                                             "trace2")
                                                            (("2"
                                                              (inst
                                                               -1
                                                               "Q"
                                                               "append(trace1, trace2)")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (skeep)
                                                                  (("2"
                                                                    (inst
                                                                     2
                                                                     "length(trace2)-1")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (expand
                                                                         "last")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (inst
                                                                             -1
                                                                             "length(append(trace1,trace2))-j-1")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (replace
                                                                                 -3)
                                                                                (("1"
                                                                                  (typepred
                                                                                   "trace")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "valid_trace?")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "finite_trace?")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "last")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (skeep)
                                                                                            (("1"
                                                                                              (typepred
                                                                                               "i")
                                                                                              (("1"
                                                                                                (split
                                                                                                 -4)
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (skeep)
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       2
                                                                                                       "T")
                                                                                                      (("1"
                                                                                                        (skeep)
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -2
                                                                                                           "t")
                                                                                                          (("1"
                                                                                                            (grind)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (flatten)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     3
                                                                                                     "0")
                                                                                                    (("1"
                                                                                                      (skeep)
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -1
                                                                                                         "t")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (expand
                                                                                                       "hp")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "length"
                                                                       1)
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (typepred "trace")
                                  (("2"
                                    (replace -7)
                                    (("2"
                                      (expand "valid_trace?")
                                      (("2"
                                        (expand "finite_trace?")
                                        (("2"
                                          (typepred "trace2")
                                          (("2"
                                            (expand "wf_trace?")
                                            (("2"
                                              (flatten)
                                              (("2"
                                                (use
                                                 "last_append[TraceState]")
                                                (("2"
                                                  (replace -1)
                                                  (("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (expand "valid_trace?")
                          (("2" (assert) nil nil)) nil))
                        nil))
                      nil)
                     ("2" (flatten)
                      (("2" (inst 1 "trace")
                        (("2" (expand "normDLEG")
                          (("2" (assert)
                            (("2" (expand "finite_trace?")
                              (("2"
                                (split 1)
                                (("1"
                                  (flatten)
                                  (("1"
                                    (assert)
                                    (("1" (grind) nil nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((SOMERUNS_tr const-decl "bool" ltl_expr nil)
    (DLEG_nth formula-decl nil ltl_expr nil)
    (hp const-decl "bool" interval_def ODEs)
    (last const-decl "T" more_list_props structures)
    (final_env const-decl "Environment" trace_semantics nil)
    (last_append formula-decl nil more_list_props structures)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (car_append formula-decl nil more_list_props structures)
    (wf_append_finite formula-decl nil trace_semantics nil)
    (SEQ adt-constructor-decl "[[HP, HP] -> (seq?)]" HP_adt nil)
    (seq? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (normDLEG const-decl "bool" ltl_expr nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (HP type-decl nil HP_adt nil)
    (init_env const-decl "Environment" trace_semantics nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (list type-decl nil list_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (Environment type-eq-decl nil hp_def nil))
   shostak))
 (dltl_SEQGE_dual 0
  (dltl_SEQGE_dual-1 nil 3901701009
   ("" (skeep)
    (("" (expand "SOMERUNS_tr")
      (("" (decompose-equality)
        (("" (iff)
          (("" (split)
            (("1" (flatten)
              (("1" (skeep)
                (("1" (expand "normDLGE")
                  (("1" (split)
                    (("1" (flatten)
                      (("1" (skeep)
                        (("1" (inst 1 "append(trace_1,trace)")
                          (("1" (assert)
                            (("1" (expand "trace_semantic_rel" 1)
                              (("1"
                                (split 1)
                                (("1"
                                  (typepred "trace_1")
                                  (("1"
                                    (expand "wf_trace?")
                                    (("1"
                                      (flatten)
                                      (("1"
                                        (lemma
                                         "car_append[TraceState]")
                                        (("1"
                                          (inst?)
                                          (("1"
                                            (expand "init_env")
                                            (("1"
                                              (replace -1)
                                              (("1" (propax) nil nil))
                                              nil))
                                            nil)
                                           ("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten)
                                  (("2"
                                    (inst 1 "trace_1" "trace")
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil)
                                 ("3"
                                  (flatten)
                                  (("3"
                                    (expand "finite_trace?")
                                    (("3"
                                      (expand "final_env")
                                      (("3"
                                        (typepred "trace")
                                        (("3"
                                          (expand "wf_trace?")
                                          (("3"
                                            (flatten)
                                            (("3"
                                              (use
                                               "last_append[TraceState]")
                                              (("1"
                                                (replace -1)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (grind)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("4"
                                  (flatten)
                                  (("4"
                                    (expand "finite_trace?")
                                    (("4"
                                      (typepred "trace")
                                      (("4"
                                        (expand "wf_trace?")
                                        (("4"
                                          (flatten)
                                          (("4"
                                            (use
                                             "last_append[TraceState]")
                                            (("1"
                                              (replace -1)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (lemma "DLGE_nth")
                                                  (("1"
                                                    (inst-cp
                                                     -1
                                                     "Q"
                                                     "trace")
                                                    (("1"
                                                      (inst
                                                       -1
                                                       "Q"
                                                       "append(trace_1, trace)")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (skeep)
                                                          (("1"
                                                            (inst
                                                             2
                                                             "length(append(trace_1, trace))-1-j")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (expand
                                                                 "last")
                                                                (("1"
                                                                  (replace
                                                                   -2)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (inst
                                                                       -1
                                                                       "length(trace)-1")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (expand
                                                                           "valid_trace?")
                                                                          (("1"
                                                                            (expand
                                                                             "finite_trace?")
                                                                            (("1"
                                                                              (expand
                                                                               "last")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (skeep)
                                                                                  (("1"
                                                                                    (typepred
                                                                                     "i")
                                                                                    (("1"
                                                                                      (split
                                                                                       2)
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (skeep)
                                                                                          (("1"
                                                                                            (inst
                                                                                             -3
                                                                                             "T")
                                                                                            (("1"
                                                                                              (skeep)
                                                                                              (("1"
                                                                                                (inst
                                                                                                 1
                                                                                                 "t")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (inst
                                                                                             -2
                                                                                             "0")
                                                                                            (("1"
                                                                                              (skeep)
                                                                                              (("1"
                                                                                                (inst
                                                                                                 2
                                                                                                 "t")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (expand
                                                                                               "hp")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (expand
                                                                         "length"
                                                                         1)
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (lemma "wf_append_finite")
                            (("2" (inst?)
                              (("2"
                                (assert)
                                (("2"
                                  (typepred "trace")
                                  (("2"
                                    (expand "wf_trace?")
                                    (("2"
                                      (expand "valid_trace?")
                                      (("2"
                                        (expand "finite_trace?")
                                        (("2"
                                          (flatten)
                                          (("2"
                                            (use
                                             "last_append[TraceState]")
                                            (("1"
                                              (replace -1)
                                              (("1" (assert) nil nil))
                                              nil)
                                             ("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (flatten)
                      (("2" (inst 2 "trace_1")
                        (("2" (assert)
                          (("2" (expand "trace_semantic_rel" 2)
                            (("2" (flatten)
                              (("2"
                                (expand "finite_trace?")
                                (("2"
                                  (assert)
                                  (("2"
                                    (flatten)
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (flatten)
              (("2" (skeep)
                (("2" (expand "trace_semantic_rel" -2)
                  (("2" (split)
                    (("1" (skeep)
                      (("1" (inst 1 "trace1")
                        (("1" (assert)
                          (("1" (split 1)
                            (("1" (expand "init_env")
                              (("1"
                                (typepred "trace1")
                                (("1"
                                  (expand "wf_trace?")
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (use "car_append[TraceState]")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (replace -8)
                                          (("1"
                                            (replace -1)
                                            (("1" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "normDLGE")
                              (("2"
                                (inst 1 "trace2")
                                (("1"
                                  (assert)
                                  (("1"
                                    (replace -5)
                                    (("1"
                                      (expand "finite_trace?")
                                      (("1"
                                        (expand "final_env")
                                        (("1"
                                          (typepred "trace2")
                                          (("1"
                                            (expand "wf_trace?")
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (use
                                                 "last_append[TraceState]")
                                                (("1"
                                                  (replace -1)
                                                  (("1"
                                                    (split -10)
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (flatten)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (lemma
                                                           "DLGE_nth")
                                                          (("2"
                                                            (inst-cp
                                                             -1
                                                             "Q"
                                                             "trace2")
                                                            (("2"
                                                              (inst
                                                               -1
                                                               "Q"
                                                               "append(trace1, trace2)")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (skeep)
                                                                  (("2"
                                                                    (inst
                                                                     2
                                                                     "length(trace2)-1-j")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (typepred
                                                                         "trace")
                                                                        (("2"
                                                                          (expand
                                                                           "valid_trace?")
                                                                          (("2"
                                                                            (expand
                                                                             "finite_trace?")
                                                                            (("2"
                                                                              (expand
                                                                               "last")
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (inst
                                                                                   -3
                                                                                   "length(append(trace1,trace2))-1")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (skeep)
                                                                                      (("1"
                                                                                        (typepred
                                                                                         "i")
                                                                                        (("1"
                                                                                          (split
                                                                                           2)
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (skeep)
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -5
                                                                                                 "T")
                                                                                                (("1"
                                                                                                  (skeep)
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     1
                                                                                                     "t")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (inst
                                                                                               -4
                                                                                               "0")
                                                                                              (("1"
                                                                                                (skeep)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   2
                                                                                                   "t")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (expand
                                                                                                 "hp")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (use
                                                                                     "length_append[TraceState]")
                                                                                    (("2"
                                                                                      (replace
                                                                                       -1)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "length"
                                                                                         1
                                                                                         2)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (typepred "trace")
                                  (("2"
                                    (replace -7)
                                    (("2"
                                      (expand "valid_trace?")
                                      (("2"
                                        (expand "finite_trace?")
                                        (("2"
                                          (typepred "trace2")
                                          (("2"
                                            (expand "wf_trace?")
                                            (("2"
                                              (flatten)
                                              (("2"
                                                (use
                                                 "last_append[TraceState]")
                                                (("2"
                                                  (replace -1)
                                                  (("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (expand "valid_trace?")
                          (("2" (assert) nil nil)) nil))
                        nil))
                      nil)
                     ("2" (flatten)
                      (("2" (inst 1 "trace")
                        (("2" (expand "normDLGE")
                          (("2" (assert)
                            (("2" (expand "finite_trace?")
                              (("2"
                                (split 1)
                                (("1"
                                  (flatten)
                                  (("1"
                                    (assert)
                                    (("1" (grind) nil nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((SOMERUNS_tr const-decl "bool" ltl_expr nil)
    (DLGE_nth formula-decl nil ltl_expr nil)
    (hp const-decl "bool" interval_def ODEs)
    (last const-decl "T" more_list_props structures)
    (final_env const-decl "Environment" trace_semantics nil)
    (last_append formula-decl nil more_list_props structures)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (car_append formula-decl nil more_list_props structures)
    (wf_append_finite formula-decl nil trace_semantics nil)
    (SEQ adt-constructor-decl "[[HP, HP] -> (seq?)]" HP_adt nil)
    (seq? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (normDLGE const-decl "bool" ltl_expr nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (HP type-decl nil HP_adt nil)
    (init_env const-decl "Environment" trace_semantics nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (list type-decl nil list_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (Environment type-eq-decl nil hp_def nil))
   shostak))
 (dltl_choice 0
  (dltl_choice-1 nil 3888506745
   ("" (skeep)
    (("" (expand "DLAND")
      (("" (decompose-equality)
        (("" (iff)
          (("" (split)
            (("1" (flatten)
              (("1" (expand "ALLRUNS_tr")
                (("1" (skeep)
                  (("1" (expand "trace_semantic_rel" -4)
                    (("1" (split)
                      (("1" (inst -2 "trace") (("1" (assert) nil nil))
                        nil)
                       ("2" (inst -3 "trace") (("2" (assert) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (flatten)
              (("2" (expand "ALLRUNS_tr")
                (("2" (split)
                  (("1" (skeep)
                    (("1" (inst -3 "trace")
                      (("1" (assert)
                        (("1" (expand "trace_semantic_rel" 2)
                          (("1" (propax) nil nil)) nil))
                        nil))
                      nil))
                    nil)
                   ("2" (skeep)
                    (("2" (inst -3 "trace")
                      (("2" (assert)
                        (("2" (expand "trace_semantic_rel" 2)
                          (("2" (propax) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((DLAND const-decl "bool" bool_expr nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (UNION adt-constructor-decl "[[HP, HP] -> (union?)]" HP_adt nil)
    (union? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (ALLRUNS_tr const-decl "bool" ltl_expr nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (list type-decl nil list_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (HP type-decl nil HP_adt nil)
    (Environment type-eq-decl nil hp_def nil))
   shostak))
 (dltl_choice_st 0
  (dltl_choice_st-1 nil 3899896375
   ("" (skeep)
    (("" (decompose-equality)
      (("" (expand "DLAND")
        (("" (expand "ALLRUNS_st")
          (("" (iff)
            (("" (split)
              (("1" (flatten)
                (("1" (skeep)
                  (("1" (expand "trace_semantic_rel" -4)
                    (("1" (split)
                      (("1" (inst -2 "trace") (("1" (assert) nil nil))
                        nil)
                       ("2" (inst -3 "trace") (("2" (assert) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (flatten)
                (("2" (expand "trace_semantic_rel" -1)
                  (("2" (split)
                    (("1" (skeep)
                      (("1" (inst?) (("1" (assert) nil nil)) nil)) nil)
                     ("2" (skeep)
                      (("2" (inst?) (("2" (assert) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Environment type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (DLAND const-decl "bool" bool_expr nil)
    (HP type-decl nil HP_adt nil)
    (ALLRUNS_st const-decl "bool" ltl_expr nil)
    (union? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (UNION adt-constructor-decl "[[HP, HP] -> (union?)]" HP_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (list type-decl nil list_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil))
   shostak))
 (dltl_choice_dual 0
  (dltl_choice_dual-1 nil 3901109052
   ("" (skeep)
    (("" (expand "DLOR")
      (("" (expand "SOMERUNS_tr")
        (("" (decompose-equality)
          (("" (expand "trace_semantic_rel" 1 3)
            (("" (iff)
              (("" (split)
                (("1" (flatten)
                  (("1" (split)
                    (("1" (skeep)
                      (("1" (inst?) (("1" (assert) nil nil)) nil)) nil)
                     ("2" (skeep)
                      (("2" (inst?) (("2" (assert) nil nil)) nil))
                      nil))
                    nil))
                  nil)
                 ("2" (flatten)
                  (("2" (skeep)
                    (("2" (split)
                      (("1" (hide 2)
                        (("1" (inst?) (("1" (assert) nil nil)) nil))
                        nil)
                       ("2" (hide 1)
                        (("2" (inst?) (("2" (assert) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((DLOR const-decl "bool" bool_expr nil)
    (Environment type-eq-decl nil hp_def nil)
    (TraceState type-decl nil TraceState_adt nil)
    (list type-decl nil list_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (init_env const-decl "Environment" trace_semantics nil)
    (HP type-decl nil HP_adt nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (union? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (UNION adt-constructor-decl "[[HP, HP] -> (union?)]" HP_adt nil)
    (SOMERUNS_tr const-decl "bool" ltl_expr nil))
   shostak))
 (dltl_choice_st_dual 0
  (dltl_choice_st_dual-1 nil 3901109168
   ("" (skeep)
    (("" (expand "DLOR")
      (("" (decompose-equality)
        (("" (expand "SOMERUNS_st")
          (("" (iff)
            (("" (expand "trace_semantic_rel" 1 3)
              (("" (split)
                (("1" (flatten)
                  (("1" (split)
                    (("1" (skeep)
                      (("1" (inst?) (("1" (assert) nil nil)) nil)) nil)
                     ("2" (skeep)
                      (("2" (inst?) (("2" (assert) nil nil)) nil))
                      nil))
                    nil))
                  nil)
                 ("2" (flatten)
                  (("2" (skeep)
                    (("2" (split)
                      (("1" (hide 2)
                        (("1" (inst?) (("1" (assert) nil nil)) nil))
                        nil)
                       ("2" (hide 1)
                        (("2" (inst?) (("2" (assert) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((DLOR const-decl "bool" bool_expr nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (TraceState type-decl nil TraceState_adt nil)
    (list type-decl nil list_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (UNION adt-constructor-decl "[[HP, HP] -> (union?)]" HP_adt nil)
    (union? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (SOMERUNS_st const-decl "bool" ltl_expr nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (HP type-decl nil HP_adt nil)
    (Environment type-eq-decl nil hp_def nil))
   shostak))
 (dltl_TESTcap_eq 0
  (dltl_TESTcap_eq-1 nil 3901109294
   ("" (skeep)
    (("" (expand "DLOR")
      (("" (expand "DLAND")
        (("" (decompose-equality)
          (("" (expand "DLNOT")
            (("" (expand "ALLRUNS_tr")
              (("" (iff)
                (("" (split)
                  (("1" (flatten)
                    (("1" (skeep)
                      (("1" (expand "trace_semantic_rel")
                        (("1" (typepred "trace")
                          (("1" (expand "valid_trace?")
                            (("1" (expand "finite_trace?")
                              (("1"
                                (expand "last")
                                (("1"
                                  (assert)
                                  (("1"
                                    (split -5)
                                    (("1"
                                      (flatten)
                                      (("1"
                                        (expand "normDLGLOBALLY")
                                        (("1"
                                          (expand "finite_trace?")
                                          (("1"
                                            (expand "final_env")
                                            (("1"
                                              (expand "last")
                                              (("1"
                                                (expand "nth")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (expand "init_env")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (lemma
                                                             "DLGLOBALLY_FORALL")
                                                            (("1"
                                                              (inst?)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (skeep)
                                                                  (("1"
                                                                    (typepred
                                                                     "i")
                                                                    (("1"
                                                                      (expand
                                                                       "nth")
                                                                      (("1"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (flatten)
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (flatten)
                    (("2" (inst -1 "(: STATE(x!1) :)")
                      (("1" (assert)
                        (("1" (expand "init_env")
                          (("1" (expand "trace_semantic_rel")
                            (("1" (assert)
                              (("1"
                                (expand "normDLGLOBALLY")
                                (("1"
                                  (expand "finite_trace?")
                                  (("1"
                                    (expand "final_env")
                                    (("1"
                                      (expand "last")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (expand "nth")
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (lemma
                                                 "DLGLOBALLY_FORALL")
                                                (("1"
                                                  (inst?)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (inst -1 "0")
                                                      (("1"
                                                        (expand "nth")
                                                        (("1"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (expand "valid_trace?")
                        (("2" (expand "finite_trace?")
                          (("2" (expand "wf_trace?")
                            (("2" (expand "last")
                              (("2"
                                (expand "nth")
                                (("2"
                                  (assert)
                                  (("2"
                                    (skeep)
                                    (("2"
                                      (typepred "i")
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((DLOR const-decl "bool" bool_expr nil)
    (Environment type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (DLNOT const-decl "bool" bool_expr nil)
    (HP type-decl nil HP_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (list type-decl nil list_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (ALLRUNS_tr const-decl "bool" ltl_expr nil)
    (test? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (TEST adt-constructor-decl "[BoolExpr -> (test?)]" HP_adt nil)
    (normDLGLOBALLY const-decl "bool" ltl_expr nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (DLGLOBALLY_FORALL formula-decl nil ltl_expr nil)
    (init_env const-decl "Environment" trace_semantics nil)
    (final_env const-decl "Environment" trace_semantics nil)
    (last const-decl "T" more_list_props structures)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (STATE adt-constructor-decl "[Environment -> (state?)]"
     TraceState_adt nil)
    (length_singleton formula-decl nil more_list_props structures)
    (DLAND const-decl "bool" bool_expr nil))
   shostak))
 (dltl_TESTcap_eq_dual 0
  (dltl_TESTcap_eq_dual-1 nil 3901110084
   ("" (skeep)
    (("" (expand "DLAND")
      (("" (decompose-equality)
        (("" (expand "SOMERUNS_tr")
          (("" (iff)
            (("" (split)
              (("1" (flatten)
                (("1" (inst 1 "(: STATE(x!1) :)")
                  (("1" (expand "init_env")
                    (("1" (expand "trace_semantic_rel")
                      (("1" (assert)
                        (("1" (expand "normDLGLOBALLY")
                          (("1" (expand "finite_trace?")
                            (("1" (expand "last")
                              (("1"
                                (assert)
                                (("1"
                                  (expand "nth")
                                  (("1"
                                    (expand "final_env")
                                    (("1"
                                      (expand "last")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (expand "nth")
                                          (("1"
                                            (lemma "DLGLOBALLY_FORALL")
                                            (("1"
                                              (inst?)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (skeep)
                                                  (("1"
                                                    (typepred "i")
                                                    (("1"
                                                      (expand "nth")
                                                      (("1"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (expand "valid_trace?")
                    (("2" (expand "finite_trace?")
                      (("2" (expand "last")
                        (("2" (expand "wf_trace?")
                          (("2" (expand "nth")
                            (("2" (assert)
                              (("2"
                                (skeep)
                                (("2"
                                  (typepred "i")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (flatten)
                (("2" (skeep)
                  (("2" (expand "trace_semantic_rel")
                    (("2" (typepred "trace")
                      (("2" (expand "valid_trace?")
                        (("2" (expand "normDLGLOBALLY")
                          (("2" (expand "finite_trace?")
                            (("2" (expand "final_env")
                              (("2"
                                (expand "last")
                                (("2"
                                  (split -4)
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (assert)
                                      (("1"
                                        (replace -1)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (expand "init_env")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (expand "nth")
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (lemma
                                                       "DLGLOBALLY_FORALL")
                                                      (("1"
                                                        (inst?)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (inst
                                                             -1
                                                             "0")
                                                            (("1"
                                                              (expand
                                                               "nth")
                                                              (("1"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (flatten)
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((DLAND const-decl "bool" bool_expr nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (STATE adt-constructor-decl "[Environment -> (state?)]"
     TraceState_adt nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (last const-decl "T" more_list_props structures)
    (DLGLOBALLY_FORALL formula-decl nil ltl_expr nil)
    (final_env const-decl "Environment" trace_semantics nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (length_singleton formula-decl nil more_list_props structures)
    (init_env const-decl "Environment" trace_semantics nil)
    (normDLGLOBALLY const-decl "bool" ltl_expr nil)
    (TEST adt-constructor-decl "[BoolExpr -> (test?)]" HP_adt nil)
    (test? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (SOMERUNS_tr const-decl "bool" ltl_expr nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (list type-decl nil list_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (HP type-decl nil HP_adt nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (Environment type-eq-decl nil hp_def nil))
   shostak))
 (dltl_TESTcup_eq 0
  (dltl_TESTcup_eq-1 nil 3899807951
   ("" (skeep)
    (("" (decompose-equality)
      (("" (iff)
        (("" (expand "DLOR")
          (("" (expand "DLNOT")
            (("" (split)
              (("1" (flatten)
                (("1" (expand "ALLRUNS_tr")
                  (("1" (skeep)
                    (("1" (expand "trace_semantic_rel")
                      (("1" (split -3)
                        (("1" (flatten)
                          (("1" (expand "init_env")
                            (("1" (assert)
                              (("1"
                                (replace -5)
                                (("1"
                                  (assert)
                                  (("1"
                                    (expand "normDLEVENTUALLY")
                                    (("1"
                                      (expand "final_env")
                                      (("1"
                                        (expand "finite_trace?")
                                        (("1"
                                          (expand "last")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (expand "nth")
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (split)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (lemma
                                                     "DLEVENTUALLY_EXISTS")
                                                    (("2"
                                                      (inst?)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (inst 1 "0")
                                                          (("2"
                                                            (expand
                                                             "nth")
                                                            (("2"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (flatten)
                          (("2" (typepred "trace")
                            (("2" (expand "valid_trace?")
                              (("2"
                                (expand "finite_trace?")
                                (("2"
                                  (expand "last")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (flatten)
                (("2" (expand "ALLRUNS_tr")
                  (("2" (inst -1 "(: STATE(x!1) :)")
                    (("1" (assert)
                      (("1" (expand "init_env")
                        (("1" (expand "trace_semantic_rel")
                          (("1" (assert)
                            (("1" (expand "normDLEVENTUALLY")
                              (("1"
                                (expand "finite_trace?")
                                (("1"
                                  (expand "final_env")
                                  (("1"
                                    (expand "last")
                                    (("1"
                                      (assert)
                                      (("1"
                                        (expand "nth")
                                        (("1"
                                          (lemma "DLEVENTUALLY_EXISTS")
                                          (("1"
                                            (inst?)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (skeep)
                                                (("1"
                                                  (typepred "i")
                                                  (("1"
                                                    (expand "length")
                                                    (("1"
                                                      (expand "length")
                                                      (("1"
                                                        (expand "nth")
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (expand "valid_trace?")
                      (("2" (expand "finite_trace?")
                        (("2" (expand "wf_trace?")
                          (("2" (assert)
                            (("2" (expand "last")
                              (("2"
                                (assert)
                                (("2"
                                  (expand "nth")
                                  (("2"
                                    (skeep)
                                    (("2"
                                      (typepred "i")
                                      (("2"
                                        (expand "length")
                                        (("2"
                                          (expand "length")
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Environment type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (DLOR const-decl "bool" bool_expr nil)
    (DLNOT const-decl "bool" bool_expr nil)
    (HP type-decl nil HP_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (list type-decl nil list_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (ALLRUNS_tr const-decl "bool" ltl_expr nil)
    (test? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (TEST adt-constructor-decl "[BoolExpr -> (test?)]" HP_adt nil)
    (normDLEVENTUALLY const-decl "bool" ltl_expr nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (final_env const-decl "Environment" trace_semantics nil)
    (last const-decl "T" more_list_props structures)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (DLEVENTUALLY_EXISTS formula-decl nil ltl_expr nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (init_env const-decl "Environment" trace_semantics nil)
    (length_singleton formula-decl nil more_list_props structures)
    (STATE adt-constructor-decl "[Environment -> (state?)]"
     TraceState_adt nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil))
   shostak))
 (dltl_TESTcup_eq_dual 0
  (dltl_TESTcup_eq_dual-1 nil 3901112735
   ("" (skeep)
    (("" (expand "DLAND")
      (("" (expand "DLOR")
        (("" (decompose-equality)
          (("" (expand "SOMERUNS_tr")
            (("" (iff)
              (("" (split)
                (("1" (flatten)
                  (("1" (inst 1 "(: STATE(x!1) :)")
                    (("1" (expand "init_env")
                      (("1" (expand "trace_semantic_rel")
                        (("1" (assert)
                          (("1" (expand "normDLEVENTUALLY")
                            (("1" (expand "final_env")
                              (("1"
                                (expand "finite_trace?")
                                (("1"
                                  (expand "last")
                                  (("1"
                                    (assert)
                                    (("1"
                                      (expand "nth")
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (lemma
                                             "DLEVENTUALLY_EXISTS")
                                            (("1"
                                              (inst?)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (inst 1 "0")
                                                  (("1"
                                                    (expand "nth")
                                                    (("1"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (expand "valid_trace?")
                      (("2" (expand "finite_trace?")
                        (("2" (expand "wf_trace?")
                          (("2" (expand "last")
                            (("2" (expand "nth")
                              (("2"
                                (assert)
                                (("2"
                                  (skeep)
                                  (("2"
                                    (typepred "i")
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (flatten)
                  (("2" (skeep)
                    (("2" (expand "init_env")
                      (("2" (assert)
                        (("2" (expand "trace_semantic_rel")
                          (("2" (typepred "trace")
                            (("2" (expand "valid_trace?")
                              (("2"
                                (expand "normDLEVENTUALLY")
                                (("2"
                                  (expand "finite_trace?")
                                  (("2"
                                    (expand "final_env")
                                    (("2"
                                      (expand "last")
                                      (("2"
                                        (split -4)
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (expand "nth")
                                              (("1"
                                                (split -7)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (flatten)
                                                  (("2"
                                                    (lemma
                                                     "DLEVENTUALLY_EXISTS")
                                                    (("2"
                                                      (inst?)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (skeep)
                                                          (("2"
                                                            (typepred
                                                             "i")
                                                            (("2"
                                                              (expand
                                                               "nth")
                                                              (("2"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (assert)
                                          (("2"
                                            (flatten)
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((DLAND const-decl "bool" bool_expr nil)
    (Environment type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (HP type-decl nil HP_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (list type-decl nil list_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (SOMERUNS_tr const-decl "bool" ltl_expr nil)
    (test? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (TEST adt-constructor-decl "[BoolExpr -> (test?)]" HP_adt nil)
    (normDLEVENTUALLY const-decl "bool" ltl_expr nil)
    (init_env const-decl "Environment" trace_semantics nil)
    (length_singleton formula-decl nil more_list_props structures)
    (final_env const-decl "Environment" trace_semantics nil)
    (last const-decl "T" more_list_props structures)
    (DLEVENTUALLY_EXISTS formula-decl nil ltl_expr nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (STATE adt-constructor-decl "[Environment -> (state?)]"
     TraceState_adt nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (DLOR const-decl "bool" bool_expr nil))
   shostak))
 (dltl_TESTEG_eq 0
  (dltl_TESTEG_eq-1 nil 3899808583
   ("" (skeep)
    (("" (expand "DLOR")
      (("" (expand "DLNOT")
        (("" (decompose-equality)
          (("" (iff)
            (("" (split)
              (("1" (flatten)
                (("1" (expand "ALLRUNS_tr")
                  (("1" (skeep)
                    (("1" (expand "trace_semantic_rel")
                      (("1" (expand "normDLEG")
                        (("1" (split -3)
                          (("1" (flatten)
                            (("1" (expand "init_env")
                              (("1"
                                (assert)
                                (("1"
                                  (assert)
                                  (("1"
                                    (replace -5)
                                    (("1"
                                      (expand "finite_trace?")
                                      (("1"
                                        (expand "final_env")
                                        (("1"
                                          (expand "last")
                                          (("1"
                                            (expand "nth")
                                            (("1" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (flatten)
                            (("2" (typepred "trace")
                              (("2"
                                (expand "valid_trace?")
                                (("2"
                                  (expand "finite_trace?")
                                  (("2"
                                    (expand "last")
                                    (("2"
                                      (replace -3)
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (flatten)
                (("2" (expand "ALLRUNS_tr")
                  (("2" (expand "trace_semantic_rel")
                    (("2" (inst -1 "(: STATE(x!1) :)")
                      (("1" (assert)
                        (("1" (expand "init_env")
                          (("1" (expand "normDLEG")
                            (("1" (expand "finite_trace?")
                              (("1"
                                (expand "final_env")
                                (("1"
                                  (expand "last")
                                  (("1"
                                    (assert)
                                    (("1"
                                      (expand "nth")
                                      (("1" (propax) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (expand "valid_trace?")
                        (("2" (expand "finite_trace?")
                          (("2" (expand "last")
                            (("2" (assert)
                              (("2"
                                (expand "wf_trace?")
                                (("2"
                                  (expand "nth")
                                  (("2"
                                    (skeep)
                                    (("2"
                                      (typepred "i")
                                      (("2"
                                        (expand "length")
                                        (("2"
                                          (expand "length")
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((DLOR const-decl "bool" bool_expr nil)
    (Environment type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (HP type-decl nil HP_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (list type-decl nil list_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (ALLRUNS_tr const-decl "bool" ltl_expr nil)
    (test? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (TEST adt-constructor-decl "[BoolExpr -> (test?)]" HP_adt nil)
    (normDLEG const-decl "bool" ltl_expr nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (init_env const-decl "Environment" trace_semantics nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (last const-decl "T" more_list_props structures)
    (final_env const-decl "Environment" trace_semantics nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (STATE adt-constructor-decl "[Environment -> (state?)]"
     TraceState_adt nil)
    (length_singleton formula-decl nil more_list_props structures)
    (DLNOT const-decl "bool" bool_expr nil))
   shostak))
 (dltl_TESTEG_eq_dual 0
  (dltl_TESTEG_eq_dual-1 nil 3901113705
   ("" (skeep)
    (("" (expand "DLAND")
      (("" (decompose-equality)
        (("" (expand "SOMERUNS_tr")
          (("" (iff)
            (("" (split)
              (("1" (flatten)
                (("1" (inst 1 "(: STATE(x!1) :)")
                  (("1" (expand "init_env")
                    (("1" (expand "trace_semantic_rel")
                      (("1" (assert)
                        (("1" (expand "normDLEG")
                          (("1" (expand "finite_trace?")
                            (("1" (expand "final_env")
                              (("1"
                                (expand "last")
                                (("1"
                                  (assert)
                                  (("1"
                                    (expand "nth")
                                    (("1" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (expand "valid_trace?")
                    (("2" (expand "finite_trace?")
                      (("2" (expand "last")
                        (("2" (expand "wf_trace?")
                          (("2" (expand "nth")
                            (("2" (assert)
                              (("2"
                                (skeep)
                                (("2"
                                  (typepred "i")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (flatten)
                (("2" (skeep)
                  (("2" (typepred "trace")
                    (("2" (expand "valid_trace?")
                      (("2" (expand "normDLEG")
                        (("2" (expand "finite_trace?")
                          (("2" (expand "final_env")
                            (("2" (expand "last")
                              (("2"
                                (expand "trace_semantic_rel")
                                (("2"
                                  (expand "init_env")
                                  (("2"
                                    (assert)
                                    (("2"
                                      (split -4)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (expand "nth")
                                          (("1" (assert) nil nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (flatten)
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((DLAND const-decl "bool" bool_expr nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (STATE adt-constructor-decl "[Environment -> (state?)]"
     TraceState_adt nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (final_env const-decl "Environment" trace_semantics nil)
    (last const-decl "T" more_list_props structures)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (length_singleton formula-decl nil more_list_props structures)
    (init_env const-decl "Environment" trace_semantics nil)
    (normDLEG const-decl "bool" ltl_expr nil)
    (TEST adt-constructor-decl "[BoolExpr -> (test?)]" HP_adt nil)
    (test? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (SOMERUNS_tr const-decl "bool" ltl_expr nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (list type-decl nil list_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (HP type-decl nil HP_adt nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (Environment type-eq-decl nil hp_def nil))
   shostak))
 (dltl_TESTGE_eq 0
  (dltl_TESTGE_eq-1 nil 3899810228
   ("" (skeep)
    (("" (decompose-equality)
      (("" (expand "DLOR")
        (("" (expand "DLNOT")
          (("" (iff)
            (("" (split)
              (("1" (flatten)
                (("1" (expand "ALLRUNS_tr")
                  (("1" (skeep)
                    (("1" (expand "trace_semantic_rel")
                      (("1" (split -3)
                        (("1" (flatten)
                          (("1" (expand "init_env")
                            (("1" (assert)
                              (("1"
                                (replace -5)
                                (("1"
                                  (assert)
                                  (("1"
                                    (expand "normDLGE")
                                    (("1"
                                      (expand "finite_trace?")
                                      (("1"
                                        (expand "final_env")
                                        (("1"
                                          (expand "last")
                                          (("1"
                                            (expand "nth")
                                            (("1" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (flatten)
                          (("2" (typepred "trace")
                            (("2" (expand "valid_trace?")
                              (("2"
                                (expand "finite_trace?")
                                (("2"
                                  (expand "last")
                                  (("2"
                                    (replace -3)
                                    (("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (flatten)
                (("2" (expand "ALLRUNS_tr")
                  (("2" (inst -1 "(: STATE(x!1) :)")
                    (("1" (expand "init_env")
                      (("1" (expand "normDLGE")
                        (("1" (expand "trace_semantic_rel")
                          (("1" (expand "finite_trace?")
                            (("1" (expand "final_env")
                              (("1"
                                (expand "last")
                                (("1"
                                  (assert)
                                  (("1"
                                    (expand "nth")
                                    (("1" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (expand "valid_trace?")
                      (("2" (expand "finite_trace?")
                        (("2" (expand "last")
                          (("2" (expand "wf_trace?")
                            (("2" (expand "nth")
                              (("2"
                                (assert)
                                (("2"
                                  (skeep)
                                  (("2"
                                    (typepred "i")
                                    (("2"
                                      (expand "length")
                                      (("2"
                                        (expand "length")
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Environment type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (DLOR const-decl "bool" bool_expr nil)
    (DLNOT const-decl "bool" bool_expr nil)
    (HP type-decl nil HP_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (list type-decl nil list_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (ALLRUNS_tr const-decl "bool" ltl_expr nil)
    (test? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (TEST adt-constructor-decl "[BoolExpr -> (test?)]" HP_adt nil)
    (normDLGE const-decl "bool" ltl_expr nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (last const-decl "T" more_list_props structures)
    (final_env const-decl "Environment" trace_semantics nil)
    (init_env const-decl "Environment" trace_semantics nil)
    (length_singleton formula-decl nil more_list_props structures)
    (STATE adt-constructor-decl "[Environment -> (state?)]"
     TraceState_adt nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil))
   shostak))
 (dltl_TESTGE_eq_dual 0
  (dltl_TESTGE_eq_dual-1 nil 3901114678
   ("" (skeep)
    (("" (expand "DLAND")
      (("" (decompose-equality)
        (("" (expand "SOMERUNS_tr")
          (("" (iff)
            (("" (expand "trace_semantic_rel")
              (("" (expand "init_env")
                (("" (expand "normDLGE")
                  (("" (expand "final_env")
                    (("" (split)
                      (("1" (flatten)
                        (("1" (inst 1 "(: STATE(x!1) :)")
                          (("1" (assert)
                            (("1" (expand "finite_trace?")
                              (("1"
                                (expand "last")
                                (("1"
                                  (assert)
                                  (("1"
                                    (expand "nth")
                                    (("1" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (expand "valid_trace?")
                            (("2" (expand "finite_trace?")
                              (("2"
                                (expand "wf_trace?")
                                (("2"
                                  (expand "last")
                                  (("2"
                                    (expand "nth")
                                    (("2"
                                      (assert)
                                      (("2"
                                        (skeep)
                                        (("2"
                                          (typepred "i")
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (flatten)
                        (("2" (skeep)
                          (("2" (typepred "trace")
                            (("2" (expand "valid_trace?")
                              (("2"
                                (expand "finite_trace?")
                                (("2"
                                  (expand "last")
                                  (("2"
                                    (split -4)
                                    (("1"
                                      (flatten)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (expand "nth")
                                          (("1" (propax) nil nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (flatten)
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((DLAND const-decl "bool" bool_expr nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (STATE adt-constructor-decl "[Environment -> (state?)]"
     TraceState_adt nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (last const-decl "T" more_list_props structures)
    (length_singleton formula-decl nil more_list_props structures)
    (final_env const-decl "Environment" trace_semantics nil)
    (init_env const-decl "Environment" trace_semantics nil)
    (normDLGE const-decl "bool" ltl_expr nil)
    (TEST adt-constructor-decl "[BoolExpr -> (test?)]" HP_adt nil)
    (test? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (SOMERUNS_tr const-decl "bool" ltl_expr nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (list type-decl nil list_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (HP type-decl nil HP_adt nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (Environment type-eq-decl nil hp_def nil))
   shostak))
 (dltl_ASSIGNcap 0
  (dltl_ASSIGNcap-1 nil 3889022728
   ("" (skeep)
    (("" (expand "DLAND")
      (("" (decompose-equality)
        (("" (iff)
          (("" (split)
            (("1" (flatten)
              (("1" (expand "ALLRUNS_tr")
                (("1" (expand "ALLRUNS_st")
                  (("1" (skeep)
                    (("1" (assert)
                      (("1" (typepred "trace")
                        (("1" (case "finite_trace?(trace)")
                          (("1" (inst -5 "trace")
                            (("1" (assert)
                              (("1"
                                (flatten)
                                (("1"
                                  (expand "normDLGLOBALLY")
                                  (("1"
                                    (assert)
                                    (("1"
                                      (lemma "DLGLOBALLY_FORALL")
                                      (("1"
                                        (inst?)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (skeep)
                                            (("1"
                                              (typepred "i")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (expand "final_env")
                                                  (("1"
                                                    (expand "last")
                                                    (("1"
                                                      (expand
                                                       "init_env")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (expand
                                                           "trace_semantic_rel")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (replace
                                                                   -9)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (case
                                                                       "i=0")
                                                                      (("1"
                                                                        (expand
                                                                         "nth")
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (expand "trace_semantic_rel")
                            (("2" (flatten)
                              (("2"
                                (expand "finite_trace?")
                                (("2"
                                  (expand "last")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (flatten)
              (("2" (expand "ALLRUNS_tr")
                (("2" (expand "ALLRUNS_st")
                  (("2" (split)
                    (("1" (expand "trace_semantic_rel")
                      (("1" (name "envo" "assign_sub(l)(x!1)")
                        (("1" (inst -2 "(: STATE(x!1), STATE(envo) :)")
                          (("1" (expand "length")
                            (("1" (expand "length")
                              (("1"
                                (expand "length")
                                (("1"
                                  (expand "nth" -2 1)
                                  (("1"
                                    (expand "nth" -2 1)
                                    (("1"
                                      (expand "nth" -2 1)
                                      (("1"
                                        (expand "init_env")
                                        (("1"
                                          (expand "nth" -2 1)
                                          (("1"
                                            (expand "nth" -2 3)
                                            (("1"
                                              (expand "nth" -2 3)
                                              (("1"
                                                (split)
                                                (("1"
                                                  (expand
                                                   "normDLGLOBALLY")
                                                  (("1"
                                                    (expand
                                                     "finite_trace?")
                                                    (("1"
                                                      (expand "last")
                                                      (("1"
                                                        (expand
                                                         "length")
                                                        (("1"
                                                          (expand
                                                           "length")
                                                          (("1"
                                                            (expand
                                                             "length")
                                                            (("1"
                                                              (expand
                                                               "nth")
                                                              (("1"
                                                                (expand
                                                                 "nth")
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (lemma
                                                                     "DLGLOBALLY_FORALL")
                                                                    (("1"
                                                                      (inst?)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (inst
                                                                           -1
                                                                           "0")
                                                                          (("1"
                                                                            (grind)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (lemma
                                                   "assign_env_alt")
                                                  (("2"
                                                    (expand
                                                     "assign_sub")
                                                    (("2"
                                                      (inst?)
                                                      (("2"
                                                        (flatten)
                                                        (("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("3"
                                                  (lemma
                                                   "assign_env_alt")
                                                  (("3"
                                                    (expand
                                                     "assign_sub")
                                                    (("3"
                                                      (inst?)
                                                      (("3"
                                                        (flatten)
                                                        (("3"
                                                          (skeep)
                                                          (("3"
                                                            (typepred
                                                             "varj")
                                                            (("3"
                                                              (inst
                                                               -3
                                                               "varj")
                                                              (("3"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (expand "wf_trace?")
                            (("2" (expand "valid_trace?")
                              (("2"
                                (expand "finite_trace?")
                                (("2"
                                  (expand "last")
                                  (("2"
                                    (expand "nth")
                                    (("2"
                                      (assert)
                                      (("2"
                                        (expand "length")
                                        (("2"
                                          (expand "length")
                                          (("2"
                                            (expand "length")
                                            (("2"
                                              (expand "nth")
                                              (("2"
                                                (skeep)
                                                (("2"
                                                  (lift-if)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (expand "nth")
                                                      (("2"
                                                        (split)
                                                        (("1"
                                                          (propax)
                                                          nil
                                                          nil)
                                                         ("2"
                                                          (flatten)
                                                          (("2"
                                                            (typepred
                                                             "i")
                                                            (("2"
                                                              (expand
                                                               "length")
                                                              (("2"
                                                                (expand
                                                                 "length")
                                                                (("2"
                                                                  (expand
                                                                   "length")
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (skeep)
                      (("2" (inst -3 "trace")
                        (("1" (assert)
                          (("1" (expand "normDLGLOBALLY")
                            (("1" (flatten)
                              (("1"
                                (assert)
                                (("1"
                                  (lemma "DLGLOBALLY_FORALL")
                                  (("1"
                                    (inst?)
                                    (("1"
                                      (assert)
                                      (("1"
                                        (expand "final_env")
                                        (("1"
                                          (expand "last")
                                          (("1"
                                            (expand
                                             "trace_semantic_rel")
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (replace -3)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (inst -1 "1")
                                                      (("1"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (expand "valid_trace?")
                          (("2" (propax) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((DLAND const-decl "bool" bool_expr nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (STATE adt-constructor-decl "[Environment -> (state?)]"
     TraceState_adt nil)
    (MapExprInj type-eq-decl nil hp_def nil)
    (not_in_map const-decl "bool" hp_def nil)
    (assign_env_alt formula-decl nil substitution nil)
    (assign_sub const-decl "Environment" substitution nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (DLGLOBALLY_FORALL formula-decl nil ltl_expr nil)
    (final_env const-decl "Environment" trace_semantics nil)
    (init_env const-decl "Environment" trace_semantics nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (last const-decl "T" more_list_props structures)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (normDLGLOBALLY const-decl "bool" ltl_expr nil)
    (ALLRUNS_tr const-decl "bool" ltl_expr nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (TraceState type-decl nil TraceState_adt nil)
    (ASSIGN adt-constructor-decl "[Assigns -> (assign?)]" HP_adt nil)
    (assign? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (Assigns type-eq-decl nil hp_def nil)
    (mapexpr_inj const-decl "bool" hp_def nil)
    (list type-decl nil list_adt nil)
    (MapExpr type-eq-decl nil hp_def nil)
    (RealExpr type-eq-decl nil hp_def nil)
    (ALLRUNS_st const-decl "bool" ltl_expr nil)
    (HP type-decl nil HP_adt nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (Environment type-eq-decl nil hp_def nil)
    (null_MapExprInj name-judgement "MapExprInj" hp_def nil))
   shostak))
 (dltl_ASSIGNcap_dual 0
  (dltl_ASSIGNcap_dual-1 nil 3901114912
   ("" (skeep)
    (("" (expand "DLAND")
      (("" (decompose-equality)
        (("" (expand "SOMERUNS_st")
          (("" (expand "SOMERUNS_tr")
            (("" (iff)
              (("" (split)
                (("1" (flatten)
                  (("1" (skeep)
                    (("1" (expand "trace_semantic_rel")
                      (("1" (assert)
                        (("1" (flatten)
                          (("1" (expand "normDLGLOBALLY")
                            (("1" (expand "final_env")
                              (("1"
                                (expand "finite_trace?")
                                (("1"
                                  (inst 1 "trace")
                                  (("1"
                                    (assert)
                                    (("1"
                                      (expand "last")
                                      (("1"
                                        (replace -3)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (split)
                                            (("1" (propax) nil nil)
                                             ("2" (propax) nil nil)
                                             ("3"
                                              (lemma
                                               "DLGLOBALLY_FORALL")
                                              (("3"
                                                (inst?)
                                                (("3"
                                                  (assert)
                                                  (("3"
                                                    (skeep)
                                                    (("3"
                                                      (typepred "i")
                                                      (("3"
                                                        (replace -4)
                                                        (("3"
                                                          (case "i=0")
                                                          (("1"
                                                            (expand
                                                             "nth")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (expand
                                                                 "init_env")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (expand "valid_trace?")
                                    (("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (flatten)
                  (("2" (skeep)
                    (("2" (expand "normDLGLOBALLY")
                      (("2" (expand "trace_semantic_rel")
                        (("2" (flatten)
                          (("2" (expand "finite_trace?")
                            (("2" (expand "final_env")
                              (("2"
                                (expand "last")
                                (("2"
                                  (assert)
                                  (("2"
                                    (flatten)
                                    (("2"
                                      (lemma "DLGLOBALLY_FORALL")
                                      (("2"
                                        (inst?)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (inst-cp -1 "0")
                                            (("2"
                                              (inst -1 "1")
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (expand "nth" -2)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (expand
                                                       "init_env")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (inst
                                                           1
                                                           "trace")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (split)
                                                              (("1"
                                                                (propax)
                                                                nil
                                                                nil)
                                                               ("2"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (expand
                                                             "finite_trace?")
                                                            (("2"
                                                              (expand
                                                               "last")
                                                              (("2"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((DLAND const-decl "bool" bool_expr nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (final_env const-decl "Environment" trace_semantics nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (last const-decl "T" more_list_props structures)
    (DLGLOBALLY_FORALL formula-decl nil ltl_expr nil)
    (init_env const-decl "Environment" trace_semantics nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (normDLGLOBALLY const-decl "bool" ltl_expr nil)
    (SOMERUNS_tr const-decl "bool" ltl_expr nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (TraceState type-decl nil TraceState_adt nil)
    (ASSIGN adt-constructor-decl "[Assigns -> (assign?)]" HP_adt nil)
    (assign? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (Assigns type-eq-decl nil hp_def nil)
    (mapexpr_inj const-decl "bool" hp_def nil)
    (list type-decl nil list_adt nil)
    (MapExpr type-eq-decl nil hp_def nil)
    (RealExpr type-eq-decl nil hp_def nil)
    (SOMERUNS_st const-decl "bool" ltl_expr nil)
    (HP type-decl nil HP_adt nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (Environment type-eq-decl nil hp_def nil)
    (null_MapExprInj name-judgement "MapExprInj" hp_def nil))
   shostak))
 (dltl_ASSIGNcup 0
  (dltl_ASSIGNcup-1 nil 3889023836
   ("" (skeep)
    (("" (expand "DLOR")
      (("" (decompose-equality)
        (("" (iff)
          (("" (split)
            (("1" (flatten)
              (("1" (expand "ALLRUNS_tr")
                (("1" (skeep)
                  (("1" (expand "normDLEVENTUALLY")
                    (("1" (expand "trace_semantic_rel")
                      (("1" (flatten)
                        (("1" (expand "finite_trace?")
                          (("1" (expand "last")
                            (("1" (assert)
                              (("1"
                                (flatten)
                                (("1"
                                  (split)
                                  (("1"
                                    (lemma "DLEVENTUALLY_EXISTS")
                                    (("1"
                                      (inst?)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (inst 1 "0")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (expand "init_env")
                                              (("1"
                                                (expand "nth")
                                                (("1"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (expand "ALLRUNS_st")
                                    (("2"
                                      (inst -1 "trace")
                                      (("2"
                                        (assert)
                                        (("2"
                                          (expand "trace_semantic_rel")
                                          (("2"
                                            (split)
                                            (("1"
                                              (lemma
                                               "DLEVENTUALLY_EXISTS")
                                              (("1"
                                                (inst?)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (inst 1 "1")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (expand
                                                         "final_env")
                                                        (("1"
                                                          (expand
                                                           "last")
                                                          (("1"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2" (propax) nil nil)
                                             ("3" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (flatten)
              (("2" (expand "ALLRUNS_st")
                (("2" (skeep)
                  (("2" (expand "ALLRUNS_tr")
                    (("2" (inst -1 "trace")
                      (("1" (assert)
                        (("1" (expand "normDLEVENTUALLY")
                          (("1" (lemma "DLEVENTUALLY_EXISTS")
                            (("1" (inst?)
                              (("1"
                                (assert)
                                (("1"
                                  (skeep)
                                  (("1"
                                    (expand "trace_semantic_rel")
                                    (("1"
                                      (flatten)
                                      (("1"
                                        (expand "final_env")
                                        (("1"
                                          (expand "last")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (expand "init_env")
                                              (("1"
                                                (case "i=0")
                                                (("1"
                                                  (expand "nth")
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (expand "valid_trace?")
                        (("2" (propax) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((DLOR const-decl "bool" bool_expr nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (init_env const-decl "Environment" trace_semantics nil)
    (DLEVENTUALLY_EXISTS formula-decl nil ltl_expr nil)
    (final_env const-decl "Environment" trace_semantics nil)
    (last const-decl "T" more_list_props structures)
    (normDLEVENTUALLY const-decl "bool" ltl_expr nil)
    (ALLRUNS_tr const-decl "bool" ltl_expr nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (TraceState type-decl nil TraceState_adt nil)
    (ASSIGN adt-constructor-decl "[Assigns -> (assign?)]" HP_adt nil)
    (assign? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (Assigns type-eq-decl nil hp_def nil)
    (mapexpr_inj const-decl "bool" hp_def nil)
    (list type-decl nil list_adt nil)
    (MapExpr type-eq-decl nil hp_def nil)
    (RealExpr type-eq-decl nil hp_def nil)
    (ALLRUNS_st const-decl "bool" ltl_expr nil)
    (HP type-decl nil HP_adt nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (Environment type-eq-decl nil hp_def nil)
    (null_MapExprInj name-judgement "MapExprInj" hp_def nil))
   shostak))
 (dltl_ASSIGNcup_dual 0
  (dltl_ASSIGNcup_dual-1 nil 3901115544
   ("" (skeep)
    (("" (expand "DLOR")
      (("" (decompose-equality)
        (("" (expand "SOMERUNS_st")
          (("" (expand "SOMERUNS_tr")
            (("" (iff)
              (("" (split)
                (("1" (flatten)
                  (("1" (expand "normDLEVENTUALLY")
                    (("1" (split)
                      (("1" (name "envo" "assign_sub(l)(x!1)")
                        (("1" (inst 1 "(: STATE(x!1),STATE(envo) :)")
                          (("1" (assert)
                            (("1" (expand "init_env")
                              (("1"
                                (expand "finite_trace?")
                                (("1"
                                  (expand "last")
                                  (("1"
                                    (expand "length")
                                    (("1"
                                      (expand "length")
                                      (("1"
                                        (expand "length")
                                        (("1"
                                          (expand "nth")
                                          (("1"
                                            (expand "nth")
                                            (("1"
                                              (split)
                                              (("1"
                                                (expand
                                                 "trace_semantic_rel")
                                                (("1"
                                                  (expand "length")
                                                  (("1"
                                                    (expand "length")
                                                    (("1"
                                                      (expand "length")
                                                      (("1"
                                                        (expand
                                                         "nth"
                                                         1
                                                         1)
                                                        (("1"
                                                          (expand
                                                           "nth"
                                                           1
                                                           1)
                                                          (("1"
                                                            (lemma
                                                             "assign_env_alt")
                                                            (("1"
                                                              (expand
                                                               "assign_sub")
                                                              (("1"
                                                                (inst?)
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (replace
                                                                     -3)
                                                                    (("1"
                                                                      (expand
                                                                       "nth"
                                                                       1
                                                                       (1
                                                                        4))
                                                                      (("1"
                                                                        (expand
                                                                         "nth"
                                                                         1
                                                                         (1
                                                                          4))
                                                                        (("1"
                                                                          (split)
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (flatten)
                                                (("2"
                                                  (lemma
                                                   "DLEVENTUALLY_EXISTS")
                                                  (("2"
                                                    (inst?)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (inst 1 "0")
                                                        (("1"
                                                          (expand
                                                           "nth")
                                                          (("1"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (expand
                                                           "length")
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (expand "valid_trace?")
                            (("2" (expand "finite_trace?")
                              (("2"
                                (expand "last")
                                (("2"
                                  (expand "wf_trace?")
                                  (("2"
                                    (expand "length")
                                    (("2"
                                      (expand "length")
                                      (("2"
                                        (expand "length")
                                        (("2"
                                          (expand "nth")
                                          (("2"
                                            (expand "nth")
                                            (("2"
                                              (assert)
                                              (("2"
                                                (skeep)
                                                (("2"
                                                  (typepred "i")
                                                  (("2"
                                                    (expand "length")
                                                    (("2"
                                                      (expand "length")
                                                      (("2"
                                                        (expand
                                                         "length")
                                                        (("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (skeep)
                        (("2" (inst 1 "trace")
                          (("1" (assert)
                            (("1" (flatten)
                              (("1"
                                (assert)
                                (("1"
                                  (lemma "DLEVENTUALLY_EXISTS")
                                  (("1"
                                    (inst?)
                                    (("1"
                                      (assert)
                                      (("1"
                                        (inst 1 "1")
                                        (("1"
                                          (expand "final_env")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (expand
                                               "trace_semantic_rel")
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (expand "last")
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (expand "trace_semantic_rel")
                                          (("2"
                                            (flatten)
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (assert)
                            (("2" (typepred "trace")
                              (("2"
                                (expand "valid_trace?")
                                (("2" (propax) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (flatten)
                  (("2" (skeep)
                    (("2" (expand "normDLEVENTUALLY")
                      (("2" (expand "trace_semantic_rel")
                        (("2" (flatten)
                          (("2" (inst 2 "trace")
                            (("1" (assert)
                              (("1"
                                (expand "finite_trace?")
                                (("1"
                                  (expand "last")
                                  (("1"
                                    (assert)
                                    (("1"
                                      (split 2)
                                      (("1" (propax) nil nil)
                                       ("2" (propax) nil nil)
                                       ("3"
                                        (flatten)
                                        (("3"
                                          (assert)
                                          (("3"
                                            (lemma
                                             "DLEVENTUALLY_EXISTS")
                                            (("3"
                                              (inst?)
                                              (("3"
                                                (assert)
                                                (("3"
                                                  (skeep)
                                                  (("3"
                                                    (expand "init_env")
                                                    (("3"
                                                      (typepred "i")
                                                      (("3"
                                                        (expand
                                                         "final_env")
                                                        (("3"
                                                          (assert)
                                                          (("3"
                                                            (expand
                                                             "last")
                                                            (("3"
                                                              (assert)
                                                              (("3"
                                                                (replace
                                                                 -4)
                                                                (("3"
                                                                  (assert)
                                                                  (("3"
                                                                    (case
                                                                     "i=0")
                                                                    (("1"
                                                                      (expand
                                                                       "nth")
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "finite_trace?")
                              (("2"
                                (expand "last")
                                (("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((DLOR const-decl "bool" bool_expr nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (STATE adt-constructor-decl "[Environment -> (state?)]"
     TraceState_adt nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (init_env const-decl "Environment" trace_semantics nil)
    (last const-decl "T" more_list_props structures)
    (assign_env_alt formula-decl nil substitution nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (DLEVENTUALLY_EXISTS formula-decl nil ltl_expr nil)
    (length_singleton formula-decl nil more_list_props structures)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (assign_sub const-decl "Environment" substitution nil)
    (final_env const-decl "Environment" trace_semantics nil)
    (normDLEVENTUALLY const-decl "bool" ltl_expr nil)
    (SOMERUNS_tr const-decl "bool" ltl_expr nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (TraceState type-decl nil TraceState_adt nil)
    (ASSIGN adt-constructor-decl "[Assigns -> (assign?)]" HP_adt nil)
    (assign? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (Assigns type-eq-decl nil hp_def nil)
    (mapexpr_inj const-decl "bool" hp_def nil)
    (list type-decl nil list_adt nil)
    (MapExpr type-eq-decl nil hp_def nil)
    (RealExpr type-eq-decl nil hp_def nil)
    (SOMERUNS_st const-decl "bool" ltl_expr nil)
    (HP type-decl nil HP_adt nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (Environment type-eq-decl nil hp_def nil)
    (null_MapExprInj name-judgement "MapExprInj" hp_def nil))
   shostak))
 (dltl_ASSIGNEG 0
  (dltl_ASSIGNEG-1 nil 3889023948
   ("" (skeep)
    (("" (decompose-equality)
      (("" (iff)
        (("" (split)
          (("1" (flatten)
            (("1" (expand "ALLRUNS_st")
              (("1" (expand "ALLRUNS_tr")
                (("1" (skeep)
                  (("1" (inst -1 "trace")
                    (("1" (assert)
                      (("1" (expand "normDLEG")
                        (("1" (expand "finite_trace?")
                          (("1" (expand "last")
                            (("1" (expand "trace_semantic_rel")
                              (("1"
                                (assert)
                                (("1"
                                  (flatten)
                                  (("1" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (expand "finite_trace?")
                      (("2" (expand "last")
                        (("2" (expand "trace_semantic_rel")
                          (("2" (assert)
                            (("2" (flatten) (("2" (assert) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (flatten)
            (("2" (expand "ALLRUNS_st")
              (("2" (expand "ALLRUNS_tr")
                (("2" (skeep)
                  (("2" (inst -1 "trace")
                    (("1" (assert)
                      (("1" (expand "normDLEG")
                        (("1" (propax) nil nil)) nil))
                      nil)
                     ("2" (expand "valid_trace?")
                      (("2" (propax) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((HP type-decl nil HP_adt nil)
    (Environment type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (ALLRUNS_st const-decl "bool" ltl_expr nil)
    (RealExpr type-eq-decl nil hp_def nil)
    (MapExpr type-eq-decl nil hp_def nil)
    (list type-decl nil list_adt nil)
    (mapexpr_inj const-decl "bool" hp_def nil)
    (Assigns type-eq-decl nil hp_def nil)
    (assign? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (ASSIGN adt-constructor-decl "[Assigns -> (assign?)]" HP_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (ALLRUNS_tr const-decl "bool" ltl_expr nil)
    (normDLEG const-decl "bool" ltl_expr nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (last const-decl "T" more_list_props structures)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (null_MapExprInj name-judgement "MapExprInj" hp_def nil))
   shostak))
 (dltl_ASSIGNGE 0
  (dltl_ASSIGNGE-1 nil 3889024123
   ("" (skeep)
    (("" (decompose-equality)
      (("" (iff)
        (("" (split)
          (("1" (flatten)
            (("1" (expand "ALLRUNS_st")
              (("1" (expand "ALLRUNS_tr")
                (("1" (skeep)
                  (("1" (inst -1 "trace")
                    (("1" (assert)
                      (("1" (expand "normDLGE")
                        (("1" (expand "finite_trace?")
                          (("1" (expand "last")
                            (("1" (expand "trace_semantic_rel")
                              (("1"
                                (assert)
                                (("1"
                                  (flatten)
                                  (("1" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (expand "finite_trace?")
                      (("2" (expand "last")
                        (("2" (expand "trace_semantic_rel")
                          (("2" (assert)
                            (("2" (flatten) (("2" (assert) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (flatten)
            (("2" (expand "ALLRUNS_st")
              (("2" (expand "ALLRUNS_tr")
                (("2" (skeep)
                  (("2" (inst -1 "trace")
                    (("1" (expand "normDLGE") (("1" (assert) nil nil))
                      nil)
                     ("2" (expand "valid_trace?")
                      (("2" (propax) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((HP type-decl nil HP_adt nil)
    (Environment type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (ALLRUNS_st const-decl "bool" ltl_expr nil)
    (RealExpr type-eq-decl nil hp_def nil)
    (MapExpr type-eq-decl nil hp_def nil)
    (list type-decl nil list_adt nil)
    (mapexpr_inj const-decl "bool" hp_def nil)
    (Assigns type-eq-decl nil hp_def nil)
    (assign? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (ASSIGN adt-constructor-decl "[Assigns -> (assign?)]" HP_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (ALLRUNS_tr const-decl "bool" ltl_expr nil)
    (normDLGE const-decl "bool" ltl_expr nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (last const-decl "T" more_list_props structures)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (null_MapExprInj name-judgement "MapExprInj" hp_def nil))
   shostak))
 (dltl_ASSIGNEG_dual 0
  (dltl_ASSIGNEG_dual-1 nil 3901116971
   ("" (skeep)
    (("" (expand "SOMERUNS_st")
      (("" (expand "SOMERUNS_tr")
        (("" (decompose-equality)
          (("" (iff)
            (("" (split)
              (("1" (flatten)
                (("1" (skeep)
                  (("1" (inst?)
                    (("1" (assert)
                      (("1" (expand "normDLEG")
                        (("1" (propax) nil nil)) nil))
                      nil)
                     ("2" (expand "valid_trace?")
                      (("2" (propax) nil nil)) nil))
                    nil))
                  nil))
                nil)
               ("2" (flatten)
                (("2" (skeep)
                  (("2" (expand "normDLEG")
                    (("2" (split -3)
                      (("1" (flatten)
                        (("1" (inst?) (("1" (assert) nil nil)) nil))
                        nil)
                       ("2" (flatten)
                        (("2" (expand "finite_trace?")
                          (("2" (flatten)
                            (("2" (expand "trace_semantic_rel")
                              (("2"
                                (flatten)
                                (("2"
                                  (expand "last")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((SOMERUNS_st const-decl "bool" ltl_expr nil)
    (Environment type-eq-decl nil hp_def nil)
    (TraceState type-decl nil TraceState_adt nil)
    (list type-decl nil list_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (init_env const-decl "Environment" trace_semantics nil)
    (HP type-decl nil HP_adt nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (RealExpr type-eq-decl nil hp_def nil)
    (MapExpr type-eq-decl nil hp_def nil)
    (mapexpr_inj const-decl "bool" hp_def nil)
    (Assigns type-eq-decl nil hp_def nil)
    (assign? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (ASSIGN adt-constructor-decl "[Assigns -> (assign?)]" HP_adt nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (final_env const-decl "Environment" trace_semantics nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (normDLEG const-decl "bool" ltl_expr nil)
    (last const-decl "T" more_list_props structures)
    (SOMERUNS_tr const-decl "bool" ltl_expr nil)
    (null_MapExprInj name-judgement "MapExprInj" hp_def nil))
   shostak))
 (dltl_ASSIGNGE_dual 0
  (dltl_ASSIGNGE_dual-1 nil 3901117151
   ("" (skeep)
    (("" (expand "SOMERUNS_st")
      (("" (expand "SOMERUNS_tr")
        (("" (decompose-equality)
          (("" (iff)
            (("" (split)
              (("1" (flatten)
                (("1" (skeep)
                  (("1" (inst?)
                    (("1" (assert)
                      (("1" (expand "normDLGE")
                        (("1" (propax) nil nil)) nil))
                      nil)
                     ("2" (expand "valid_trace?")
                      (("2" (propax) nil nil)) nil))
                    nil))
                  nil))
                nil)
               ("2" (flatten)
                (("2" (skeep)
                  (("2" (expand "normDLGE")
                    (("2" (split -3)
                      (("1" (flatten)
                        (("1" (inst?) (("1" (assert) nil nil)) nil))
                        nil)
                       ("2" (flatten)
                        (("2" (expand "finite_trace?")
                          (("2" (flatten)
                            (("2" (expand "trace_semantic_rel")
                              (("2"
                                (flatten)
                                (("2"
                                  (expand "last")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((SOMERUNS_st const-decl "bool" ltl_expr nil)
    (Environment type-eq-decl nil hp_def nil)
    (TraceState type-decl nil TraceState_adt nil)
    (list type-decl nil list_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (init_env const-decl "Environment" trace_semantics nil)
    (HP type-decl nil HP_adt nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (RealExpr type-eq-decl nil hp_def nil)
    (MapExpr type-eq-decl nil hp_def nil)
    (mapexpr_inj const-decl "bool" hp_def nil)
    (Assigns type-eq-decl nil hp_def nil)
    (assign? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (ASSIGN adt-constructor-decl "[Assigns -> (assign?)]" HP_adt nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (final_env const-decl "Environment" trace_semantics nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (normDLGE const-decl "bool" ltl_expr nil)
    (last const-decl "T" more_list_props structures)
    (SOMERUNS_tr const-decl "bool" ltl_expr nil)
    (null_MapExprInj name-judgement "MapExprInj" hp_def nil))
   shostak))
 (dltl_DIFFcap 0
  (dltl_DIFFcap-1 nil 3889024783
   ("" (skeep)
    (("" (expand "DLAND")
      (("" (lemma "dlSequent_equiv")
        (("" (inst?)
          (("" (assert)
            (("" (hide 2)
              (("" (expand "dlSequent")
                (("" (skeep)
                  (("" (inst 1 "0")
                    (("" (inst -1 "0")
                      (("" (expand "nth")
                        (("" (flatten)
                          (("" (expand "ALLRUNS_st")
                            (("" (expand "ALLRUNS_tr")
                              ((""
                                (skeep)
                                ((""
                                  (expand "normDLGLOBALLY")
                                  ((""
                                    (typepred "trace")
                                    ((""
                                      (expand "valid_trace?")
                                      ((""
                                        (expand
                                         "trace_semantic_rel"
                                         -6)
                                        ((""
                                          (split -6)
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (expand "finite_trace?")
                                              (("1"
                                                (expand "last")
                                                (("1"
                                                  (replace -1)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (split -2)
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (inst
                                                             -7
                                                             "trace")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (expand
                                                                 "trace_semantic_rel"
                                                                 -7)
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (lemma
                                                                       "DLGLOBALLY_FORALL")
                                                                      (("1"
                                                                        (inst?)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (skeep)
                                                                            (("1"
                                                                              (typepred
                                                                               "i")
                                                                              (("1"
                                                                                (expand
                                                                                 "final_env")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "last")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "nth")
                                                                                      (("1"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (expand
                                                               "finite_trace?")
                                                              (("2"
                                                                (expand
                                                                 "last")
                                                                (("2"
                                                                  (replace
                                                                   -3)
                                                                  (("2"
                                                                    (expand
                                                                     "nth")
                                                                    (("2"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (flatten)
                                                        (("2"
                                                          (skeep)
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (inst-cp
                                                               -8
                                                               "trace")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (expand
                                                                   "trace_semantic_rel"
                                                                   -9)
                                                                  (("1"
                                                                    (split
                                                                     -9)
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (lemma
                                                                           "DLGLOBALLY_FORALL")
                                                                          (("1"
                                                                            (inst?)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (skeep)
                                                                                (("1"
                                                                                  (typepred
                                                                                   "i")
                                                                                  (("1"
                                                                                    (replace
                                                                                     -7)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "nth")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (skeep)
                                                                                          (("1"
                                                                                            (typepred
                                                                                             "t")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "nth")
                                                                                              (("1"
                                                                                                (typepred
                                                                                                 "D(car(trace))")
                                                                                                (("1"
                                                                                                  (skeep)
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -2)
                                                                                                    (("1"
                                                                                                      (case
                                                                                                       "t=0")
                                                                                                      (("1"
                                                                                                        (typepred
                                                                                                         "behavior(car(trace))")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "init_env")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (expand
                                                                                                         "closed_interval")
                                                                                                        (("2"
                                                                                                          (flatten)
                                                                                                          (("2"
                                                                                                            (replace
                                                                                                             -9)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -14
                                                                                                                 "(: STATE_DIFF(closed_interval(0,t),s0(car(trace)), LAMBDA(r:(closed_interval(0,t))): env_at_t(f, fs, s0(car(trace)))(r)) :)")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "init_env")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "final_env")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "last")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "nth")
                                                                                                                              (("1"
                                                                                                                                (lemma
                                                                                                                                 "db_max")
                                                                                                                                (("1"
                                                                                                                                  (inst?)
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "trace_semantic_rel"
                                                                                                                                         4)
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (inst
                                                                                                                                             4
                                                                                                                                             "fs")
                                                                                                                                            (("1"
                                                                                                                                              (skeep)
                                                                                                                                              (("1"
                                                                                                                                                (inst
                                                                                                                                                 -11
                                                                                                                                                 "t_1")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (replace
                                                                                                                                                     -3)
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (typepred
                                                                                                                                                         "t_1")
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "closed_interval")
                                                                                                                                                          (("1"
                                                                                                                                                            (flatten)
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (typepred
                                                                                                                                               "fs")
                                                                                                                                              (("2"
                                                                                                                                                (lemma
                                                                                                                                                 "solution_odes_subset")
                                                                                                                                                (("2"
                                                                                                                                                  (inst
                                                                                                                                                   -1
                                                                                                                                                   "D(car(trace))"
                                                                                                                                                   "f"
                                                                                                                                                   "s0(car(trace))"
                                                                                                                                                   "fs"
                                                                                                                                                   "closed_interval(0, t)")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (expand
                                                                                                                                                     "closed_interval")
                                                                                                                                                    (("2"
                                                                                                                                                      (replace
                                                                                                                                                       -4)
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        (("2"
                                                                                                                                                          (skeep)
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (expand
                                                                                                                   "finite_trace?")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "last")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "wf_trace?")
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "nth")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (skeep)
                                                                                                                            (("2"
                                                                                                                              (typepred
                                                                                                                               "i!1")
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("3"
                                                                                                                  (typepred
                                                                                                                   "behavior(car(trace))")
                                                                                                                  (("3"
                                                                                                                    (replace
                                                                                                                     -10)
                                                                                                                    (("3"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("4"
                                                                                                                  (expand
                                                                                                                   "dd?")
                                                                                                                  (("4"
                                                                                                                    (split
                                                                                                                     1)
                                                                                                                    (("1"
                                                                                                                      (flatten)
                                                                                                                      (("1"
                                                                                                                        (inst?)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (inst?)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (inst
                                                                       1
                                                                       "fs")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (expand
                                                                 "finite_trace?")
                                                                (("2"
                                                                  (expand
                                                                   "last")
                                                                  (("2"
                                                                    (expand
                                                                     "nth")
                                                                    (("2"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("3"
                                                        (flatten)
                                                        (("3"
                                                          (expand
                                                           "nth")
                                                          (("3"
                                                            (assert)
                                                            (("3"
                                                              (lemma
                                                               "DLGLOBALLY_FORALL")
                                                              (("3"
                                                                (inst?)
                                                                (("3"
                                                                  (assert)
                                                                  (("3"
                                                                    (hide
                                                                     2)
                                                                    (("3"
                                                                      (skeep)
                                                                      (("3"
                                                                        (typepred
                                                                         "i")
                                                                        (("3"
                                                                          (expand
                                                                           "nth")
                                                                          (("3"
                                                                            (skeep)
                                                                            (("3"
                                                                              (typepred
                                                                               "t")
                                                                              (("3"
                                                                                (case
                                                                                 "t=0")
                                                                                (("1"
                                                                                  (typepred
                                                                                   "inf_behavior(car(trace))")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "init_env")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (expand
                                                                                   "hp")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (skeep)
                                                                                      (("2"
                                                                                        (inst
                                                                                         -10
                                                                                         "(: STATE_DIFF(closed_interval(0,t),s0(car(trace)), LAMBDA(r:(closed_interval(0,t))): env_at_t(f, fs, s0(car(trace))
)(r)) :)")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "init_env")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "final_env")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "last")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "nth")
                                                                                                      (("1"
                                                                                                        (lemma
                                                                                                         "db_max")
                                                                                                        (("1"
                                                                                                          (inst?)
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -5)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "trace_semantic_rel"
                                                                                                                     4)
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         4
                                                                                                                         "fs")
                                                                                                                        (("1"
                                                                                                                          (skeep)
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -6
                                                                                                                             "t_1")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "hp")
                                                                                                                              (("1"
                                                                                                                                (typepred
                                                                                                                                 "t_1")
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "closed_interval")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (typepred
                                                                                                                           "fs")
                                                                                                                          (("2"
                                                                                                                            (lemma
                                                                                                                             "solution_odes_subset")
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -1
                                                                                                                               "hp(0)"
                                                                                                                               "f"
                                                                                                                               "s0(car(trace))"
                                                                                                                               "fs"
                                                                                                                               "closed_interval(0, t)")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (expand
                                                                                                                                 "closed_interval")
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "hp")
                                                                                                                                  (("2"
                                                                                                                                    (skeep)
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (expand
                                                                                           "finite_trace?")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "last")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "wf_trace?")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "nth")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (skeep)
                                                                                                    (("2"
                                                                                                      (typepred
                                                                                                       "i!1")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("3"
                                                                                          (typepred
                                                                                           "inf_behavior(car(trace))")
                                                                                          (("3"
                                                                                            (replace
                                                                                             -5)
                                                                                            (("3"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("4"
                                                                                          (expand
                                                                                           "dd?")
                                                                                          (("4"
                                                                                            (split
                                                                                             1)
                                                                                            (("1"
                                                                                              (flatten)
                                                                                              (("1"
                                                                                                (inst?)
                                                                                                nil
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (inst?)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (flatten)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (expand
                                                 "finite_trace?")
                                                (("2"
                                                  (expand "last")
                                                  (("2"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((DLAND const-decl "bool" bool_expr nil)
    (Environment type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (list type-decl nil list_adt nil)
    (Formulas type-eq-decl nil bool_expr nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (HP type-decl nil HP_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (ALLRUNS_tr const-decl "bool" ltl_expr nil)
    (RealExpr type-eq-decl nil hp_def nil)
    (MapExpr type-eq-decl nil hp_def nil)
    (mapexpr_inj const-decl "bool" hp_def nil)
    (ODEs type-eq-decl nil hp_def nil)
    (diff? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (DIFF adt-constructor-decl "[[ODEs, BoolExpr] -> (diff?)]" HP_adt
     nil)
    (normDLGLOBALLY const-decl "bool" ltl_expr nil)
    (ALLRUNS_st const-decl "bool" ltl_expr nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (DLGLOBALLY_FORALL formula-decl nil ltl_expr nil)
    (final_env const-decl "Environment" trace_semantics nil)
    (init_env const-decl "Environment" trace_semantics nil)
    (behavior adt-accessor-decl
     "[d: (state_diff?) -> {b: [(D(d)) -> Environment] | b(0) = s0(d)}]"
     TraceState_adt nil)
    (s0 shared-adt-accessor-decl
     "[{x: TraceState | inf_diff?(x) OR state_diff?(x)} -> Environment]"
     TraceState_adt nil)
    (inf_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (solution_odes_subset formula-decl nil ODEs_equiv nil)
    (db_max formula-decl nil more_ci_props ODEs)
    (STATE_DIFF adt-constructor-decl
     "[[D: {D: (dd?) | EXISTS (b: posreal): D = closed_interval(0, b)},
  s0: Environment, {b: [(D) -> Environment] | b(0) = s0}] ->
   (state_diff?)]" TraceState_adt nil)
    (solution_odes_u? const-decl "bool" hp_expr nil)
    (env_at_t const-decl "{env: (env_at_t?(odes, fs, envi, t)) |
   FORALL (env2: (env_at_t?(odes, fs, envi, t))): env = env2}" hp_expr
     nil)
    (env_at_t? const-decl "bool" hp_expr nil)
    (car adt-accessor-decl "[(cons?) -> T]" list_adt nil)
    (D adt-accessor-decl "[(state_diff?) ->
   {D: (dd?) | EXISTS (b: posreal): D = closed_interval(0, b)}]"
     TraceState_adt nil)
    (closed_interval const-decl "(closed_interval?(a, b))" interval_def
     ODEs)
    (dd? const-decl "bool" hp_expr nil)
    (state_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (hp const-decl "bool" interval_def ODEs)
    (inf_behavior adt-accessor-decl
     "[d: (inf_diff?) -> {ib: [(hp(0)) -> Environment] | ib(0) = s0(d)}]"
     TraceState_adt nil)
    (last const-decl "T" more_list_props structures)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (length_singleton formula-decl nil more_list_props structures)
    (dlSequent const-decl "bool" dynamic_logic nil)
    (dlSequent_equiv formula-decl nil dynamic_logic nil)
    (null_MapExprInj name-judgement "MapExprInj" hp_def nil))
   shostak))
 (dltl_DIFFcap_eq 0
  (dltl_DIFFcap_eq-1 nil 3899985467
   ("" (skeep)
    (("" (expand "DLAND")
      (("" (expand "DLNOT")
        (("" (expand "DLOR")
          (("" (decompose-equality)
            (("" (iff)
              (("" (split)
                (("1" (flatten)
                  (("1" (expand "ALLRUNS_tr")
                    (("1" (skeep)
                      (("1" (case "Q(x!1)")
                        (("1" (assert)
                          (("1" (lemma "dltl_DIFFcap")
                            (("1" (inst -1 "P" "Q" "R" "f")
                              (("1"
                                (lemma "dlSequent_equiv")
                                (("1"
                                  (inst?)
                                  (("1"
                                    (assert)
                                    (("1"
                                      (hide -2)
                                      (("1"
                                        (expand "dlSequent")
                                        (("1"
                                          (inst -1 "x!1")
                                          (("1"
                                            (split)
                                            (("1"
                                              (skeep)
                                              (("1"
                                                (typepred "j")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (expand "nth")
                                                    (("1"
                                                      (expand
                                                       "ALLRUNS_tr")
                                                      (("1"
                                                        (inst?)
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (skeep)
                                              (("2"
                                                (typepred "i")
                                                (("2"
                                                  (expand "nth")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (expand "DLAND")
                                                      (("2"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (hide -1)
                          (("2" (expand "trace_semantic_rel" -2)
                            (("2" (split)
                              (("1"
                                (flatten)
                                (("1"
                                  (expand "init_env")
                                  (("1"
                                    (assert)
                                    (("1"
                                      (split)
                                      (("1"
                                        (flatten)
                                        (("1" (assert) nil nil))
                                        nil)
                                       ("2"
                                        (flatten)
                                        (("2"
                                          (skeep)
                                          (("2"
                                            (assert)
                                            (("2"
                                              (replace -2)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (typepred
                                                   " behavior(car(trace))")
                                                  (("2"
                                                    (replace -3)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (inst -4 "0")
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil)
                                                         ("2"
                                                          (typepred
                                                           "D(car[TraceState](trace))")
                                                          (("2"
                                                            (skeep)
                                                            (("2"
                                                              (replace
                                                               -2)
                                                              (("2"
                                                                (expand
                                                                 "closed_interval")
                                                                (("2"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("3"
                                        (flatten)
                                        (("3"
                                          (skeep)
                                          (("3"
                                            (typepred
                                             "inf_behavior(car(trace))")
                                            (("3"
                                              (inst -4 "0")
                                              (("3" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (typepred "trace")
                                (("2" (grind) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (flatten)
                  (("2" (expand "ALLRUNS_st")
                    (("2" (expand "ALLRUNS_tr")
                      (("2" (inst-cp -1 "(:STATE(x!1):)")
                        (("1" (assert)
                          (("1" (expand "init_env")
                            (("1" (expand "trace_semantic_rel" -2)
                              (("1"
                                (assert)
                                (("1"
                                  (expand "normDLGLOBALLY")
                                  (("1"
                                    (expand "finite_trace?")
                                    (("1"
                                      (expand "last")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (expand "nth" -2)
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (lemma
                                               "DLGLOBALLY_FORALL")
                                              (("1"
                                                (inst?)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (inst -1 "0")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (expand
                                                         "nth"
                                                         -1)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (hide -4)
                                                            (("1"
                                                              (skeep)
                                                              (("1"
                                                                (inst
                                                                 -2
                                                                 "trace")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (split
                                                                     -2)
                                                                    (("1"
                                                                      (typepred
                                                                       "trace")
                                                                      (("1"
                                                                        (expand
                                                                         "finite_trace?")
                                                                        (("1"
                                                                          (expand
                                                                           "last")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (lemma
                                                                                   "DLGLOBALLY_FORALL")
                                                                                  (("1"
                                                                                    (inst?)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "final_env")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "last")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "wf_trace?")
                                                                                            (("1"
                                                                                              (flatten)
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "length(trace)-1")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (split
                                                                                                     -4)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -2
                                                                                                         "max_ci(D(nth(trace, length(trace) - 1)))")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "length")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (expand
                                                                                                   "length")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (typepred
                                                                           "trace")
                                                                          (("2"
                                                                            (expand
                                                                             "finite_trace?")
                                                                            (("2"
                                                                              (expand
                                                                               "last")
                                                                              (("2"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("3"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (typepred
                                                                   "trace")
                                                                  (("2"
                                                                    (expand
                                                                     "valid_trace?")
                                                                    (("2"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (expand "valid_trace?")
                          (("2" (expand "finite_trace?")
                            (("2" (expand "last")
                              (("2"
                                (expand "wf_trace?")
                                (("2"
                                  (expand "nth")
                                  (("2"
                                    (assert)
                                    (("2"
                                      (skeep)
                                      (("2"
                                        (typepred "i")
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((DLAND const-decl "bool" bool_expr nil)
    (DLOR const-decl "bool" bool_expr nil)
    (DLGLOBALLY_FORALL formula-decl nil ltl_expr nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (below type-eq-decl nil nat_types nil)
    (<= const-decl "bool" reals nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (final_env const-decl "Environment" trace_semantics nil)
    (STATE adt-constructor-decl "[Environment -> (state?)]"
     TraceState_adt nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (init_env const-decl "Environment" trace_semantics nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (state_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (dd? const-decl "bool" hp_expr nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (closed_interval const-decl "(closed_interval?(a, b))" interval_def
     ODEs)
    (D adt-accessor-decl "[(state_diff?) ->
   {D: (dd?) | EXISTS (b: posreal): D = closed_interval(0, b)}]"
     TraceState_adt nil)
    (inf_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (s0 shared-adt-accessor-decl
     "[{x: TraceState | inf_diff?(x) OR state_diff?(x)} -> Environment]"
     TraceState_adt nil)
    (behavior adt-accessor-decl
     "[d: (state_diff?) -> {b: [(D(d)) -> Environment] | b(0) = s0(d)}]"
     TraceState_adt nil)
    (car adt-accessor-decl "[(cons?) -> T]" list_adt nil)
    (inf_behavior adt-accessor-decl
     "[d: (inf_diff?) -> {ib: [(hp(0)) -> Environment] | ib(0) = s0(d)}]"
     TraceState_adt nil)
    (hp const-decl "bool" interval_def ODEs)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (even_minus_odd_is_odd application-judgement "odd_int" integers
     nil)
    (DLGLOBALLY const-decl "bool" ltl_expr nil)
    (cut_inf_diff const-decl "Trace" ltl_expr nil)
    (cut_state_diff const-decl
     "{tt: Trace | length(tt) = length(trace)}" ltl_expr nil)
    (max_ci const-decl "{rr: (d) | FORALL (x: (d)): x <= rr}"
     more_ci_props ODEs)
    (State_Trace const-decl "bool" ltl_expr nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (last const-decl "T" more_list_props structures)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (Formulas type-eq-decl nil bool_expr nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (length_singleton formula-decl nil more_list_props structures)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (nth def-decl "T" list_props nil)
    (below type-eq-decl nil naturalnumbers nil)
    (length def-decl "nat" list_props nil)
    (< const-decl "bool" reals nil)
    (dlSequent const-decl "bool" dynamic_logic nil)
    (dlSequent_equiv formula-decl nil dynamic_logic nil)
    (dltl_DIFFcap formula-decl nil temporal_logic nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (normDLGLOBALLY const-decl "bool" ltl_expr nil)
    (ALLRUNS_tr const-decl "bool" ltl_expr nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (TraceState type-decl nil TraceState_adt nil)
    (DIFF adt-constructor-decl "[[ODEs, BoolExpr] -> (diff?)]" HP_adt
     nil)
    (diff? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (ODEs type-eq-decl nil hp_def nil)
    (mapexpr_inj const-decl "bool" hp_def nil)
    (list type-decl nil list_adt nil)
    (MapExpr type-eq-decl nil hp_def nil)
    (RealExpr type-eq-decl nil hp_def nil)
    (ALLRUNS_st const-decl "bool" ltl_expr nil)
    (HP type-decl nil HP_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (Environment type-eq-decl nil hp_def nil)
    (DLNOT const-decl "bool" bool_expr nil)
    (null_MapExprInj name-judgement "MapExprInj" hp_def nil))
   shostak))
 (dltl_DIFFcap_eq_dual_TCC1 0
  (dltl_DIFFcap_eq_dual_TCC1-1 nil 3901908338
   ("" (subtype-tcc) nil nil) ((dd? const-decl "bool" hp_expr nil)) nil
   (dltl_DIFFcap_eq_dual subtype "interval_def.hp(0)"
    "(hp_expr.dd?)")))
 (dltl_DIFFcap_eq_dual 0
  (dltl_DIFFcap_eq_dual-1 nil 3901701210
   ("" (skeep)
    (("" (expand "DLOR")
      (("" (expand "DLAND")
        (("" (decompose-equality)
          (("" (iff)
            (("" (split)
              (("1" (flatten)
                (("1" (split)
                  (("1" (flatten)
                    (("1" (expand "SOMERUNS_tr")
                      (("1" (expand "normDLGLOBALLY")
                        (("1" (inst 1 "(:STATE(x!1):)")
                          (("1" (expand "init_env")
                            (("1" (expand "final_env")
                              (("1"
                                (expand "finite_trace?")
                                (("1"
                                  (expand "last")
                                  (("1"
                                    (expand "nth")
                                    (("1"
                                      (assert)
                                      (("1"
                                        (expand "trace_semantic_rel")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (lemma "DLGLOBALLY_FORALL")
                                            (("1"
                                              (inst?)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (skeep)
                                                  (("1"
                                                    (typepred "i")
                                                    (("1"
                                                      (expand "nth")
                                                      (("1"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (grind) nil nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (expand "SOMERUNS_st")
                    (("2" (expand "SOMERUNS_tr")
                      (("2" (skeep)
                        (("2" (expand "trace_semantic_rel" -2)
                          (("2" (typepred "trace")
                            (("2" (expand "finite_trace?")
                              (("2"
                                (expand "last")
                                (("2"
                                  (expand "normDLGLOBALLY")
                                  (("2"
                                    (inst 1 "trace")
                                    (("1"
                                      (assert)
                                      (("1"
                                        (lemma "DLGLOBALLY_FORALL")
                                        (("1"
                                          (inst?)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (replace -1)
                                              (("1"
                                                (hide -1)
                                                (("1"
                                                  (split -4)
                                                  (("1"
                                                    (expand "nth")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (split -4)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (expand
                                                                   "trace_semantic_rel")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              (("2"
                                                                (expand
                                                                 "trace_semantic_rel")
                                                                (("2"
                                                                  (skeep)
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (split
                                                                       1)
                                                                      (("1"
                                                                        (inst
                                                                         1
                                                                         "fs")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (skeep)
                                                                            (("1"
                                                                              (inst
                                                                               -4
                                                                               "t")
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (skeep)
                                                                        (("2"
                                                                          (skeep)
                                                                          (("2"
                                                                            (inst
                                                                             -4
                                                                             "t")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (flatten)
                                                    (("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (expand "valid_trace?")
                                      (("2" (propax) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("3" (expand "ALLRUNS_st")
                    (("3" (expand "SOMERUNS_tr")
                      (("3" (typepred "f")
                        (("3" (hide -1)
                          (("3" (expand "ODEs_s?")
                            (("3" (expand "ODEs_s?")
                              (("3"
                                (inst -1 "x!1")
                                (("3"
                                  (skeep)
                                  (("3"
                                    (inst
                                     1
                                     "(:INF_DIFF(x!1,LAMBDA(t:(hp(0))): env_at_t(f,fs,x!1)(t)):)")
                                    (("1"
                                      (expand "normDLGLOBALLY")
                                      (("1"
                                        (expand "init_env")
                                        (("1"
                                          (expand "finite_trace?")
                                          (("1"
                                            (expand "last")
                                            (("1"
                                              (expand "nth")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (split)
                                                  (("1"
                                                    (expand
                                                     "trace_semantic_rel"
                                                     1)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (inst 1 "fs")
                                                        (("1"
                                                          (skeep)
                                                          (("1"
                                                            (typepred
                                                             "t_1")
                                                            (("1"
                                                              (expand
                                                               "hp"
                                                               -1)
                                                              (("1"
                                                                (case
                                                                 "t_1=0")
                                                                (("1"
                                                                  (inst
                                                                   -4
                                                                   "(:STATE(x!1):)")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (expand
                                                                       "final_env")
                                                                      (("1"
                                                                        (expand
                                                                         "last")
                                                                        (("1"
                                                                          (expand
                                                                           "nth")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (replace
                                                                               -1)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (typepred
                                                                                   "env_at_t(f, fs, x!1)(0)")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -2
                                                                                     "x!1")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "trace_semantic_rel"
                                                                                         2)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "DLBOOL")
                                                                                            (("1"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (expand
                                                                                       "solution_odes_u?")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "solution_odes?")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (hide-all-but
                                                                     1)
                                                                    (("2"
                                                                      (grind)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (inst
                                                                   -3
                                                                   "(:STATE_DIFF(closed_interval(0,t_1),x!1,LAMBDA(r:(closed_interval(0,t_1))): env_at_t(f,fs,x!1)(r)):)")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (expand
                                                                       "final_env")
                                                                      (("1"
                                                                        (expand
                                                                         "last")
                                                                        (("1"
                                                                          (expand
                                                                           "nth")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (lemma
                                                                               "db_max")
                                                                              (("1"
                                                                                (inst?)
                                                                                (("1"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "trace_semantic_rel"
                                                                                       3)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "DLBOOL")
                                                                                          (("1"
                                                                                            (inst
                                                                                             3
                                                                                             "fs")
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "solution_odes_subset")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "hp(0)"
                                                                                                 "f"
                                                                                                 "x!1"
                                                                                                 "fs"
                                                                                                 "closed_interval(0,t_1)")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (expand
                                                                                                   "closed_interval")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "hp")
                                                                                                    (("2"
                                                                                                      (skeep)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (hide-all-but
                                                                     1)
                                                                    (("2"
                                                                      (grind)
                                                                      nil
                                                                      nil))
                                                                    nil)
                                                                   ("3"
                                                                    (expand
                                                                     "solution_odes_u?")
                                                                    (("3"
                                                                      (expand
                                                                       "solution_odes?")
                                                                      (("3"
                                                                        (flatten)
                                                                        (("3"
                                                                          (typepred
                                                                           "env_at_t(f, fs, x!1)(0)")
                                                                          (("3"
                                                                            (inst
                                                                             -2
                                                                             "x!1")
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("4"
                                                                    (expand
                                                                     "dd?")
                                                                    (("4"
                                                                      (split)
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (inst?)
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (inst?)
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("5"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (lemma
                                                     "DLGLOBALLY_FORALL")
                                                    (("2"
                                                      (inst?)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (hide 2)
                                                          (("2"
                                                            (skeep)
                                                            (("2"
                                                              (typepred
                                                               "i")
                                                              (("2"
                                                                (expand
                                                                 "nth")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (hide
                                                                     1
                                                                     2
                                                                     3)
                                                                    (("2"
                                                                      (skeep)
                                                                      (("2"
                                                                        (case
                                                                         "t_1=0")
                                                                        (("1"
                                                                          (inst
                                                                           -4
                                                                           "(:STATE(x!1):)")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (expand
                                                                               "final_env")
                                                                              (("1"
                                                                                (expand
                                                                                 "last")
                                                                                (("1"
                                                                                  (expand
                                                                                   "nth")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -1)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (typepred
                                                                                           "env_at_t(f, fs, x!1)(0)")
                                                                                          (("1"
                                                                                            (inst
                                                                                             -2
                                                                                             "x!1")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "trace_semantic_rel"
                                                                                                 2)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "DLBOOL")
                                                                                                    (("1"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (expand
                                                                                               "solution_odes_u?")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "solution_odes?")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("2"
                                                                              (grind)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (inst
                                                                           -3
                                                                           "(:STATE_DIFF(closed_interval(0,t_1),x!1,LAMBDA(r:(closed_interval(0,t_1))): env_at_t(f,fs,x!1)(r)):)")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (expand
                                                                               "final_env")
                                                                              (("1"
                                                                                (expand
                                                                                 "last")
                                                                                (("1"
                                                                                  (expand
                                                                                   "nth")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (lemma
                                                                                       "db_max")
                                                                                      (("1"
                                                                                        (inst?)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "trace_semantic_rel"
                                                                                             3)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "DLBOOL")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   3
                                                                                                   "fs")
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "solution_odes_subset")
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -1
                                                                                                       "hp(0)"
                                                                                                       "f"
                                                                                                       "x!1"
                                                                                                       "fs"
                                                                                                       "closed_interval(0,t_1)")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (expand
                                                                                                         "closed_interval")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "hp")
                                                                                                          (("2"
                                                                                                            (skeep)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (typepred
                                                                                           "t_1")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "hp")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide-all-but
                                                                             1)
                                                                            (("2"
                                                                              (grind)
                                                                              nil
                                                                              nil))
                                                                            nil)
                                                                           ("3"
                                                                            (expand
                                                                             "solution_odes_u?")
                                                                            (("3"
                                                                              (expand
                                                                               "solution_odes?")
                                                                              (("3"
                                                                                (flatten)
                                                                                (("3"
                                                                                  (typepred
                                                                                   "env_at_t(f, fs, x!1)(0)")
                                                                                  (("3"
                                                                                    (inst
                                                                                     -2
                                                                                     "x!1")
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("4"
                                                                            (expand
                                                                             "dd?")
                                                                            (("4"
                                                                              (split)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (typepred
                                                                                   "t_1")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "hp")
                                                                                    (("1"
                                                                                      (inst?)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (typepred
                                                                                 "t_1")
                                                                                (("2"
                                                                                  (expand
                                                                                   "hp")
                                                                                  (("2"
                                                                                    (inst?)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("5"
                                                                            (assert)
                                                                            (("5"
                                                                              (typepred
                                                                               "t_1")
                                                                              (("5"
                                                                                (expand
                                                                                 "hp")
                                                                                (("5"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (hide-all-but 1)
                                      (("2" (grind) nil nil))
                                      nil)
                                     ("3"
                                      (expand "solution_odes_u?")
                                      (("3"
                                        (expand "solution_odes?")
                                        (("3"
                                          (flatten)
                                          (("3"
                                            (typepred
                                             "env_at_t(f, fs, x!1)(0)")
                                            (("3"
                                              (inst -2 "x!1")
                                              nil
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (flatten)
                (("2" (expand "SOMERUNS_st")
                  (("2" (expand "ALLRUNS_st")
                    (("2" (expand "SOMERUNS_tr")
                      (("2" (skeep)
                        (("2" (skeep)
                          (("2" (typepred "trace")
                            (("2" (expand "finite_trace?")
                              (("2"
                                (expand "last")
                                (("2"
                                  (expand "trace_semantic_rel")
                                  (("2"
                                    (assert)
                                    (("2"
                                      (split -7)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (expand "nth")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (split -4)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (expand
                                                     "final_env"
                                                     3)
                                                    (("1"
                                                      (expand "last")
                                                      (("1"
                                                        (expand "nth")
                                                        (("1"
                                                          (expand
                                                           "init_env")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (replace
                                                               -8)
                                                              (("1"
                                                                (split
                                                                 -6)
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (split
                                                                     -2)
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (expand
                                                                           "normDLGLOBALLY")
                                                                          (("1"
                                                                            (expand
                                                                             "finite_trace?")
                                                                            (("1"
                                                                              (expand
                                                                               "last")
                                                                              (("1"
                                                                                (expand
                                                                                 "nth")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (hide
                                                                                       2)
                                                                                      (("1"
                                                                                        (lemma
                                                                                         "DLGLOBALLY_FORALL")
                                                                                        (("1"
                                                                                          (inst?)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (inst
                                                                                               -1
                                                                                               "0")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "nth")
                                                                                                (("1"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (skeep)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (replace
                                                                             -9)
                                                                            (("2"
                                                                              (replace
                                                                               -2)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (hide
                                                                                   2)
                                                                                  (("2"
                                                                                    (typepred
                                                                                     "behavior(car(trace!1))")
                                                                                    (("2"
                                                                                      (inst
                                                                                       -4
                                                                                       "0")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (replace
                                                                                           -3)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "normDLGLOBALLY")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "finite_trace?")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "last")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "nth")
                                                                                                    (("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (lemma
                                                                                                         "DLGLOBALLY_FORALL")
                                                                                                        (("2"
                                                                                                          (inst?)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -1
                                                                                                               "0")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "nth")
                                                                                                                (("2"
                                                                                                                  (replace
                                                                                                                   -4)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -1
                                                                                                                     "0")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (expand
                                                                                                                       "nth")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (typepred
                                                                                                                           "D(car(trace!1))")
                                                                                                                          (("2"
                                                                                                                            (skeep)
                                                                                                                            (("2"
                                                                                                                              (replace
                                                                                                                               -2)
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "closed_interval")
                                                                                                                                (("2"
                                                                                                                                  (propax)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("3"
                                                                      (assert)
                                                                      (("3"
                                                                        (flatten)
                                                                        (("3"
                                                                          (skeep)
                                                                          (("3"
                                                                            (assert)
                                                                            (("3"
                                                                              (replace
                                                                               -9)
                                                                              (("3"
                                                                                (replace
                                                                                 -2)
                                                                                (("3"
                                                                                  (assert)
                                                                                  (("3"
                                                                                    (typepred
                                                                                     "inf_behavior(car(trace!1))")
                                                                                    (("3"
                                                                                      (expand
                                                                                       "normDLGLOBALLY")
                                                                                      (("3"
                                                                                        (expand
                                                                                         "finite_trace?")
                                                                                        (("3"
                                                                                          (expand
                                                                                           "last")
                                                                                          (("3"
                                                                                            (expand
                                                                                             "nth")
                                                                                            (("3"
                                                                                              (assert)
                                                                                              (("3"
                                                                                                (lemma
                                                                                                 "DLGLOBALLY_FORALL")
                                                                                                (("3"
                                                                                                  (inst?)
                                                                                                  (("3"
                                                                                                    (assert)
                                                                                                    (("3"
                                                                                                      (inst
                                                                                                       -1
                                                                                                       "0")
                                                                                                      (("3"
                                                                                                        (expand
                                                                                                         "nth")
                                                                                                        (("3"
                                                                                                          (assert)
                                                                                                          (("3"
                                                                                                            (replace
                                                                                                             -4)
                                                                                                            (("3"
                                                                                                              (inst
                                                                                                               -1
                                                                                                               "0")
                                                                                                              (("3"
                                                                                                                (assert)
                                                                                                                (("3"
                                                                                                                  (inst
                                                                                                                   -5
                                                                                                                   "0")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (expand
                                                                                                                     "hp")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (typepred
                                                                     "trace!1")
                                                                    (("2"
                                                                      (expand
                                                                       "valid_trace?")
                                                                      (("2"
                                                                        (expand
                                                                         "finite_trace?")
                                                                        (("2"
                                                                          (expand
                                                                           "last")
                                                                          (("2"
                                                                            (expand
                                                                             "nth")
                                                                            (("2"
                                                                              (expand
                                                                               "nth")
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (assert)
                                                  (("2"
                                                    (skeep)
                                                    (("2"
                                                      (expand
                                                       "init_env")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (replace -9)
                                                          (("2"
                                                            (expand
                                                             "final_env"
                                                             3)
                                                            (("2"
                                                              (expand
                                                               "last")
                                                              (("2"
                                                                (expand
                                                                 "nth")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (typepred
                                                                     "D(car(trace))")
                                                                    (("2"
                                                                      (skeep)
                                                                      (("2"
                                                                        (replace
                                                                         -2)
                                                                        (("2"
                                                                          (lemma
                                                                           "db_max")
                                                                          (("2"
                                                                            (inst?)
                                                                            (("2"
                                                                              (replace
                                                                               -1)
                                                                              (("2"
                                                                                (replace
                                                                                 -6)
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (split
                                                                                     -10)
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (split
                                                                                         -2)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (hide
                                                                                               -10)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "normDLGLOBALLY")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "finite_trace?")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "last")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "nth")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (hide
                                                                                                               2)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "final_env")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "last")
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "nth")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (lemma
                                                                                                                           "DLGLOBALLY_FORALL")
                                                                                                                          (("1"
                                                                                                                            (inst?)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -1
                                                                                                                                 "0")
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "nth")
                                                                                                                                  (("1"
                                                                                                                                    (propax)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (skeep)
                                                                                              (("2"
                                                                                                (inst
                                                                                                 2
                                                                                                 "trace!1")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "normDLGLOBALLY")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "finite_trace?")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "last")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "nth")
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 2
                                                                                                                 "fs!1")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (skeep)
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -3
                                                                                                                       "t")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (lemma
                                                                                                                           "DLGLOBALLY_FORALL")
                                                                                                                          (("1"
                                                                                                                            (inst?)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -1
                                                                                                                                 "0")
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "nth")
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     -1
                                                                                                                                     "t")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "nth")
                                                                                                                                      (("1"
                                                                                                                                        (propax)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (expand
                                                                                                   "finite_trace?")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "last")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "nth")
                                                                                                      (("2"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("3"
                                                                                          (assert)
                                                                                          (("3"
                                                                                            (flatten)
                                                                                            (("3"
                                                                                              (assert)
                                                                                              (("3"
                                                                                                (skeep)
                                                                                                (("3"
                                                                                                  (assert)
                                                                                                  (("3"
                                                                                                    (expand
                                                                                                     "normDLGLOBALLY")
                                                                                                    (("3"
                                                                                                      (expand
                                                                                                       "finite_trace?")
                                                                                                      (("3"
                                                                                                        (expand
                                                                                                         "last")
                                                                                                        (("3"
                                                                                                          (hide
                                                                                                           2)
                                                                                                          (("3"
                                                                                                            (expand
                                                                                                             "nth")
                                                                                                            (("3"
                                                                                                              (lemma
                                                                                                               "DLGLOBALLY_FORALL")
                                                                                                              (("3"
                                                                                                                (inst?)
                                                                                                                (("3"
                                                                                                                  (assert)
                                                                                                                  (("3"
                                                                                                                    (inst
                                                                                                                     -1
                                                                                                                     "0")
                                                                                                                    (("3"
                                                                                                                      (expand
                                                                                                                       "nth")
                                                                                                                      (("3"
                                                                                                                        (replace
                                                                                                                         -3)
                                                                                                                        (("3"
                                                                                                                          (replace
                                                                                                                           -14)
                                                                                                                          (("3"
                                                                                                                            (assert)
                                                                                                                            (("3"
                                                                                                                              (case
                                                                                                                               "env_at_t(f, fs, x!1)(b) = env_at_t(f, fs!1, x!1)(b)")
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -2
                                                                                                                                 "b")
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   -5
                                                                                                                                   "b")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (expand
                                                                                                                                     "hp")
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (expand
                                                                                                                                   "hp")
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (typepred
                                                                                                                                 "fs")
                                                                                                                                (("2"
                                                                                                                                  (typepred
                                                                                                                                   "fs!1")
                                                                                                                                  (("2"
                                                                                                                                    (replace
                                                                                                                                     -10)
                                                                                                                                    (("2"
                                                                                                                                      (replace
                                                                                                                                       -18)
                                                                                                                                      (("2"
                                                                                                                                        (replace
                                                                                                                                         -16)
                                                                                                                                        (("2"
                                                                                                                                          (hide-all-but
                                                                                                                                           (-1
                                                                                                                                            -2
                                                                                                                                            1))
                                                                                                                                          (("2"
                                                                                                                                            (typepred
                                                                                                                                             "env_at_t(f, fs, x!1)(b)")
                                                                                                                                            (("2"
                                                                                                                                              (typepred
                                                                                                                                               "env_at_t(f, fs!1, x!1)(b)")
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "env_at_t?")
                                                                                                                                                (("2"
                                                                                                                                                  (flatten)
                                                                                                                                                  (("2"
                                                                                                                                                    (decompose-equality
                                                                                                                                                     1)
                                                                                                                                                    (("2"
                                                                                                                                                      (case
                                                                                                                                                       "not_in_map(f)(x!2)")
                                                                                                                                                      (("1"
                                                                                                                                                        (inst
                                                                                                                                                         -2
                                                                                                                                                         "x!2")
                                                                                                                                                        (("1"
                                                                                                                                                          (inst
                                                                                                                                                           -5
                                                                                                                                                           "x!2")
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (expand
                                                                                                                                                         "not_in_map")
                                                                                                                                                        (("2"
                                                                                                                                                          (skeep)
                                                                                                                                                          (("2"
                                                                                                                                                            (inst
                                                                                                                                                             -3
                                                                                                                                                             "i")
                                                                                                                                                            (("2"
                                                                                                                                                              (inst
                                                                                                                                                               -6
                                                                                                                                                               "i")
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "solution_odes_u?")
                                                                                                                                                                (("2"
                                                                                                                                                                  (flatten)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (inst
                                                                                                                                                                     -9
                                                                                                                                                                     "fs"
                                                                                                                                                                     "closed_interval(0,b)")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (inst
                                                                                                                                                                         -9
                                                                                                                                                                         "i"
                                                                                                                                                                         "b")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "closed_interval")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "hp")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (skeep)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (typepred
                                                                                         "trace!1")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "valid_trace?")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "finite_trace?")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "last")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "nth")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "nth")
                                                                                                    (("2"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (assert)
                                        (("2"
                                          (flatten)
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((DLOR const-decl "bool" bool_expr nil)
    (Environment type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (HP type-decl nil HP_adt nil)
    (SOMERUNS_st const-decl "bool" ltl_expr nil)
    (RealExpr type-eq-decl nil hp_def nil)
    (MapExpr type-eq-decl nil hp_def nil)
    (list type-decl nil list_adt nil)
    (mapexpr_inj const-decl "bool" hp_def nil)
    (ODEs type-eq-decl nil hp_def nil)
    (diff? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (DIFF adt-constructor-decl "[[ODEs, BoolExpr] -> (diff?)]" HP_adt
     nil)
    (dd? const-decl "bool" hp_expr nil)
    (hp const-decl "bool" interval_def ODEs)
    (ALLRUNS_st const-decl "bool" ltl_expr nil)
    (DLBOOL const-decl "bool" bool_expr nil)
    (TraceState type-decl nil TraceState_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (SOMERUNS_tr const-decl "bool" ltl_expr nil)
    (normDLGLOBALLY const-decl "bool" ltl_expr nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (STATE adt-constructor-decl "[Environment -> (state?)]"
     TraceState_adt nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (final_env const-decl "Environment" trace_semantics nil)
    (last const-decl "T" more_list_props structures)
    (length_singleton formula-decl nil more_list_props structures)
    (DLGLOBALLY_FORALL formula-decl nil ltl_expr nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (init_env const-decl "Environment" trace_semantics nil)
    (solution_odes_u? const-decl "bool" hp_expr nil)
    (state_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (closed_interval const-decl "(closed_interval?(a, b))" interval_def
     ODEs)
    (D adt-accessor-decl "[(state_diff?) ->
   {D: (dd?) | EXISTS (b: posreal): D = closed_interval(0, b)}]"
     TraceState_adt nil)
    (car adt-accessor-decl "[(cons?) -> T]" list_adt nil)
    (inf_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (s0 shared-adt-accessor-decl
     "[{x: TraceState | inf_diff?(x) OR state_diff?(x)} -> Environment]"
     TraceState_adt nil)
    (STATE_DIFF adt-constructor-decl
     "[[D: {D: (dd?) | EXISTS (b: posreal): D = closed_interval(0, b)},
  s0: Environment, {b: [(D) -> Environment] | b(0) = s0}] ->
   (state_diff?)]" TraceState_adt nil)
    (db_max formula-decl nil more_ci_props ODEs)
    (solution_odes_subset formula-decl nil ODEs_equiv nil)
    (solution_odes? const-decl "bool" hp_expr nil)
    (INF_DIFF adt-constructor-decl
     "[[s0: Environment, {ib: [(hp(0)) -> Environment] | ib(0) = s0}] ->
   (inf_diff?)]" TraceState_adt nil)
    (env_at_t? const-decl "bool" hp_expr nil)
    (env_at_t const-decl "{env: (env_at_t?(odes, fs, envi, t)) |
   FORALL (env2: (env_at_t?(odes, fs, envi, t))): env = env2}" hp_expr
     nil)
    (derivable_odes? const-decl "bool" hp_expr nil)
    (MapExprInj type-eq-decl nil hp_def nil)
    (not_in_map const-decl "bool" hp_def nil)
    (inf_behavior adt-accessor-decl
     "[d: (inf_diff?) -> {ib: [(hp(0)) -> Environment] | ib(0) = s0(d)}]"
     TraceState_adt nil)
    (behavior adt-accessor-decl
     "[d: (state_diff?) -> {b: [(D(d)) -> Environment] | b(0) = s0(d)}]"
     TraceState_adt nil)
    (DLAND const-decl "bool" bool_expr nil)
    (null_MapExprInj name-judgement "MapExprInj" hp_def nil))
   shostak))
 (dltl_DIFFcup_eq 0
  (dltl_DIFFcup_eq-1 nil 3901701231
   ("" (skeep)
    (("" (expand "DLAND")
      (("" (expand "DLOR")
        (("" (decompose-equality)
          (("" (iff)
            (("" (split)
              (("1" (flatten)
                (("1" (expand "ALLRUNS_tr")
                  (("1" (skeep)
                    (("1" (expand "ALLRUNS_st")
                      (("1" (case "P(x!1)")
                        (("1" (expand "DLNOT")
                          (("1" (assert)
                            (("1" (expand "SOMERUNS_st")
                              (("1"
                                (skeep)
                                (("1"
                                  (expand "normDLEVENTUALLY")
                                  (("1"
                                    (expand "trace_semantic_rel" -8)
                                    (("1"
                                      (split -8)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (split)
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (expand "init_env")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (replace -10)
                                                    (("1"
                                                      (expand
                                                       "finite_trace?")
                                                      (("1"
                                                        (expand "last")
                                                        (("1"
                                                          (replace -3)
                                                          (("1"
                                                            (expand
                                                             "nth")
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (case
                                                                 "Q(x!1)")
                                                                (("1"
                                                                  (lemma
                                                                   "DLEVENTUALLY_EXISTS")
                                                                  (("1"
                                                                    (inst?)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (inst
                                                                         1
                                                                         "0")
                                                                        (("1"
                                                                          (expand
                                                                           "nth")
                                                                          (("1"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (expand
                                                                   "final_env")
                                                                  (("2"
                                                                    (expand
                                                                     "last")
                                                                    (("2"
                                                                      (expand
                                                                       "nth")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (flatten)
                                              (("2"
                                                (skeep)
                                                (("2"
                                                  (replace -2)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (expand
                                                       "finite_trace?")
                                                      (("2"
                                                        (expand "last")
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (expand
                                                             "nth")
                                                            (("2"
                                                              (flatten)
                                                              (("2"
                                                                (lemma
                                                                 "DLEVENTUALLY_EXISTS")
                                                                (("2"
                                                                  (inst?)
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (inst
                                                                       1
                                                                       "0")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (expand
                                                                           "nth")
                                                                          (("2"
                                                                            (expand
                                                                             "init_env")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (replace
                                                                                 -11)
                                                                                (("2"
                                                                                  (replace
                                                                                   -2)
                                                                                  (("2"
                                                                                    (inst
                                                                                     -7
                                                                                     "trace")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "trace_semantic_rel"
                                                                                         2)
                                                                                        (("2"
                                                                                          (replace
                                                                                           -10)
                                                                                          (("2"
                                                                                            (replace
                                                                                             -2)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (typepred
                                                                                                 "fs")
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   2
                                                                                                   "fs")
                                                                                                  (("2"
                                                                                                    (skeep)
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       1
                                                                                                       "t")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -4
                                                                                                         "t")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (typepred
                                                                                                         "t")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "nth")
                                                                                                          (("2"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("3"
                                              (flatten)
                                              (("3"
                                                (skeep)
                                                (("3"
                                                  (typepred "fs")
                                                  (("3"
                                                    (expand
                                                     "finite_trace?")
                                                    (("3"
                                                      (expand "last")
                                                      (("3"
                                                        (assert)
                                                        (("3"
                                                          (expand
                                                           "nth")
                                                          (("3"
                                                            (lemma
                                                             "DLEVENTUALLY_EXISTS")
                                                            (("3"
                                                              (inst?)
                                                              (("3"
                                                                (assert)
                                                                (("3"
                                                                  (inst
                                                                   1
                                                                   "0")
                                                                  (("3"
                                                                    (expand
                                                                     "nth")
                                                                    (("3"
                                                                      (replace
                                                                       -3)
                                                                      (("3"
                                                                        (assert)
                                                                        (("3"
                                                                          (expand
                                                                           "init_env")
                                                                          (("3"
                                                                            (assert)
                                                                            (("3"
                                                                              (replace
                                                                               -12)
                                                                              (("3"
                                                                                (typepred
                                                                                 "trace!1")
                                                                                (("3"
                                                                                  (expand
                                                                                   "finite_trace?")
                                                                                  (("3"
                                                                                    (expand
                                                                                     "last")
                                                                                    (("3"
                                                                                      (hide
                                                                                       -10)
                                                                                      (("3"
                                                                                        (assert)
                                                                                        (("3"
                                                                                          (expand
                                                                                           "trace_semantic_rel"
                                                                                           -11)
                                                                                          (("3"
                                                                                            (assert)
                                                                                            (("3"
                                                                                              (split
                                                                                               -11)
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "DLBOOL")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "nth"
                                                                                                       -4)
                                                                                                      (("1"
                                                                                                        (split
                                                                                                         -2)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "final_env")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "last")
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -2)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "nth")
                                                                                                                  (("1"
                                                                                                                    (replace
                                                                                                                     -12)
                                                                                                                    (("1"
                                                                                                                      (typepred
                                                                                                                       "inf_behavior(car(trace))")
                                                                                                                      (("1"
                                                                                                                        (replace
                                                                                                                         -7)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             1
                                                                                                                             "0")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (expand
                                                                                                                               "hp")
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (flatten)
                                                                                                          (("2"
                                                                                                            (skeep)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -13)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "final_env")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "last")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "nth")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (replace
                                                                                                                           -2)
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (typepred
                                                                                                                               "D(car(trace!1))")
                                                                                                                              (("2"
                                                                                                                                (skeep)
                                                                                                                                (("2"
                                                                                                                                  (replace
                                                                                                                                   -2)
                                                                                                                                  (("2"
                                                                                                                                    (lemma
                                                                                                                                     "db_max")
                                                                                                                                    (("2"
                                                                                                                                      (inst?)
                                                                                                                                      (("2"
                                                                                                                                        (replace
                                                                                                                                         -1)
                                                                                                                                        (("2"
                                                                                                                                          (typepred
                                                                                                                                           "b")
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            (("2"
                                                                                                                                              (case
                                                                                                                                               "env_at_t(f, fs!1, x!1)(b) = env_at_t(f, fs, x!1)(b)")
                                                                                                                                              (("1"
                                                                                                                                                (inst
                                                                                                                                                 -14
                                                                                                                                                 "b")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (inst
                                                                                                                                                     1
                                                                                                                                                     "b")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (grind)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (grind)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (typepred
                                                                                                                                                 "fs!1")
                                                                                                                                                (("2"
                                                                                                                                                  (replace
                                                                                                                                                   -18)
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "solution_odes_u?")
                                                                                                                                                    (("2"
                                                                                                                                                      (flatten)
                                                                                                                                                      (("2"
                                                                                                                                                        (inst
                                                                                                                                                         -13
                                                                                                                                                         "fs!1"
                                                                                                                                                         "D(car(trace!1))")
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          (("1"
                                                                                                                                                            (decompose-equality
                                                                                                                                                             1)
                                                                                                                                                            (("1"
                                                                                                                                                              (typepred
                                                                                                                                                               "env_at_t(f, fs!1, x!1)(b)")
                                                                                                                                                              (("1"
                                                                                                                                                                (expand
                                                                                                                                                                 "env_at_t?"
                                                                                                                                                                 -1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (flatten)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (typepred
                                                                                                                                                                     "env_at_t(f, fs, x!1)(b)")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "env_at_t?"
                                                                                                                                                                       -1)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (flatten)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (case
                                                                                                                                                                           "not_in_map(f)(x!2)")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (inst
                                                                                                                                                                               -2
                                                                                                                                                                               "x!2")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (inst
                                                                                                                                                                                 -5
                                                                                                                                                                                 "x!2")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "not_in_map")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (skeep)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (inst
                                                                                                                                                                                 -3
                                                                                                                                                                                 "i")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (inst
                                                                                                                                                                                   -6
                                                                                                                                                                                   "i")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (inst
                                                                                                                                                                                     -20
                                                                                                                                                                                     "i"
                                                                                                                                                                                     "b")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      nil
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (skeep)
                                                                                                                                                          (("2"
                                                                                                                                                            (replace
                                                                                                                                                             -8)
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "closed_interval")
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "hp")
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("3"
                                                                                                          (flatten)
                                                                                                          (("3"
                                                                                                            (skeep)
                                                                                                            (("3"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (flatten)
                                        (("2"
                                          (typepred "trace")
                                          (("2"
                                            (expand "valid_trace?")
                                            (("2"
                                              (expand "finite_trace?")
                                              (("2"
                                                (expand "last")
                                                (("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (hide-all-but (1 -4 -5))
                          (("2" (typepred "trace")
                            (("2" (expand "valid_trace?")
                              (("2"
                                (expand "finite_trace?")
                                (("2"
                                  (expand "last")
                                  (("2"
                                    (expand "trace_semantic_rel")
                                    (("2"
                                      (split -4)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (expand "init_env")
                                          (("1"
                                            (split)
                                            (("1"
                                              (flatten)
                                              (("1" (assert) nil nil))
                                              nil)
                                             ("2"
                                              (flatten)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (skeep)
                                                  (("2"
                                                    (typepred
                                                     "behavior(car(trace))")
                                                    (("2"
                                                      (typepred
                                                       "D(car(trace))")
                                                      (("2"
                                                        (skeep)
                                                        (("2"
                                                          (expand
                                                           "closed_interval")
                                                          (("2"
                                                            (replace
                                                             -5)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (inst
                                                                 -6
                                                                 "0")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil)
                                                                 ("2"
                                                                  (replace
                                                                   -2)
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("3"
                                              (flatten)
                                              (("3"
                                                (assert)
                                                (("3"
                                                  (skeep)
                                                  (("3"
                                                    (typepred
                                                     "inf_behavior(car(trace))")
                                                    (("3"
                                                      (replace -3)
                                                      (("3"
                                                        (inst -4 "0")
                                                        (("3"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (flatten)
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (flatten)
                (("2" (split)
                  (("1" (flatten)
                    (("1" (expand "ALLRUNS_tr")
                      (("1" (expand "DLNOT")
                        (("1" (inst -2 "(: STATE(x!1) :)")
                          (("1" (expand "init_env")
                            (("1" (expand "trace_semantic_rel")
                              (("1"
                                (assert)
                                (("1"
                                  (expand "normDLEVENTUALLY")
                                  (("1"
                                    (expand "finite_trace?")
                                    (("1"
                                      (expand "final_env")
                                      (("1"
                                        (expand "last")
                                        (("1"
                                          (expand "nth")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (lemma
                                               "DLEVENTUALLY_EXISTS")
                                              (("1"
                                                (inst?)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (skeep)
                                                    (("1"
                                                      (typepred "i")
                                                      (("1"
                                                        (expand "nth")
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (expand "valid_trace?")
                            (("2" (expand "finite_trace?")
                              (("2"
                                (expand "last")
                                (("2"
                                  (expand "wf_trace?")
                                  (("2"
                                    (expand "nth")
                                    (("2"
                                      (assert)
                                      (("2"
                                        (skeep)
                                        (("2"
                                          (typepred "i")
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (expand "ALLRUNS_st")
                    (("2" (skeep)
                      (("2" (expand "ALLRUNS_tr")
                        (("2" (typepred "trace")
                          (("2" (inst -5 "trace")
                            (("1" (expand "normDLEVENTUALLY")
                              (("1"
                                (assert)
                                (("1"
                                  (split)
                                  (("1"
                                    (expand "trace_semantic_rel")
                                    (("1"
                                      (expand "finite_trace?")
                                      (("1"
                                        (expand "last")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (split -5)
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (replace -1)
                                                (("1"
                                                  (expand "nth")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (split)
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (expand
                                                           "DLNOT")
                                                          (("1"
                                                            (lemma
                                                             "DLEVENTUALLY_EXISTS")
                                                            (("1"
                                                              (inst?)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (skeep)
                                                                  (("1"
                                                                    (typepred
                                                                     "i")
                                                                    (("1"
                                                                      (expand
                                                                       "nth")
                                                                      (("1"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (flatten)
                                                        (("2"
                                                          (skeep)
                                                          (("2"
                                                            (replace
                                                             -2)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (expand
                                                                 "DLNOT")
                                                                (("2"
                                                                  (lemma
                                                                   "DLEVENTUALLY_EXISTS")
                                                                  (("2"
                                                                    (inst?)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (skeep)
                                                                        (("2"
                                                                          (expand
                                                                           "nth")
                                                                          (("2"
                                                                            (skeep)
                                                                            (("2"
                                                                              (replace
                                                                               -3)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (inst
                                                                                   -4
                                                                                   "t")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil)
                                                                                   ("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (typepred
                                                                                       "t")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "nth")
                                                                                        (("2"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("3"
                                                        (flatten)
                                                        (("3"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (flatten)
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (expand "trace_semantic_rel")
                                    (("2"
                                      (flatten)
                                      (("2"
                                        (split -4)
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (split -2)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (flatten)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (skeep)
                                                      (("2"
                                                        (inst 2 "fs")
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (skeep)
                                                            (("2"
                                                              (inst
                                                               -3
                                                               "t")
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("3"
                                                  (flatten)
                                                  (("3"
                                                    (expand
                                                     "finite_trace?")
                                                    (("3"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (expand "finite_trace?")
                                          (("2"
                                            (flatten)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (expand "last")
                                                  (("2"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "valid_trace?")
                              (("2" (propax) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("3" (flatten)
                    (("3" (hide 1)
                      (("3" (expand "SOMERUNS_st")
                        (("3" (expand "ALLRUNS_tr")
                          (("3" (expand "DLNOT")
                            (("3" (expand "normDLEVENTUALLY")
                              (("3"
                                (typepred "f")
                                (("3"
                                  (expand "ODEs_s?")
                                  (("3"
                                    (expand "ODEs_s?")
                                    (("3"
                                      (inst -2 "x!1")
                                      (("3"
                                        (skeep)
                                        (("3"
                                          (case
                                           "FORALL(t:(hp(0))): P(env_at_t(f, fs,x!1)(t))")
                                          (("1"
                                            (inst
                                             -4
                                             "(: INF_DIFF(x!1, LAMBDA(t: (hp(0))):env_at_t(f, fs, x!1)(t)) :)")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (expand
                                                 "finite_trace?")
                                                (("1"
                                                  (expand "last")
                                                  (("1"
                                                    (expand "init_env")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (expand "nth")
                                                        (("1"
                                                          (split)
                                                          (("1"
                                                            (lemma
                                                             "DLEVENTUALLY_EXISTS")
                                                            (("1"
                                                              (inst?)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (skeep)
                                                                  (("1"
                                                                    (typepred
                                                                     "i")
                                                                    (("1"
                                                                      (expand
                                                                       "length"
                                                                       -1)
                                                                      (("1"
                                                                        (expand
                                                                         "length"
                                                                         -1)
                                                                        (("1"
                                                                          (expand
                                                                           "nth"
                                                                           -2)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (skeep)
                                                                              (("1"
                                                                                (typepred
                                                                                 "t_1")
                                                                                (("1"
                                                                                  (expand
                                                                                   "hp")
                                                                                  (("1"
                                                                                    (case
                                                                                     "t_1=0")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -6
                                                                                       "0")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "solution_odes_u?")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "solution_odes?")
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (typepred
                                                                                               "env_at_t(f, fs, x!1)(0)")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -2
                                                                                                 "x!1")
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -2)
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -3)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -2)
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         2
                                                                                                         "(: STATE(x!1) :)")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "trace_semantic_rel"
                                                                                                             2)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "final_env")
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "last")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "nth"
                                                                                                                     2)
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "DLBOOL")
                                                                                                                        (("1"
                                                                                                                          (propax)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (expand
                                                                                                           "finite_trace?")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "wf_trace?")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "nth")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "last")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "nth")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (skeep)
                                                                                                                      (("2"
                                                                                                                        (typepred
                                                                                                                         "i!1")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (expand
                                                                                         "hp")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (inst
                                                                                         3
                                                                                         "(: STATE_DIFF(closed_interval(0,t_1),x!1, LAMBDA(t:(closed_interval(0,t_1))): env_at_t(f, fs,x!1)(t)) :)")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "final_env")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "last")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "nth"
                                                                                                 3)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "db_max")
                                                                                                    (("1"
                                                                                                      (inst?)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "trace_semantic_rel"
                                                                                                           3)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               3
                                                                                                               "fs")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "DLBOOL")
                                                                                                                  (("1"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (expand
                                                                                                                 "nth")
                                                                                                                (("2"
                                                                                                                  (lemma
                                                                                                                   "solution_odes_subset")
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -1
                                                                                                                     "hp(0)"
                                                                                                                     "f"
                                                                                                                     "x!1"
                                                                                                                     "fs"
                                                                                                                     "closed_interval(0, t_1)")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (skeep)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "hp")
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "closed_interval")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("3"
                                                                                                                      (grind)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (expand
                                                                                           "finite_trace?")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "last")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "wf_trace?")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "nth")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (skeep)
                                                                                                    (("2"
                                                                                                      (typepred
                                                                                                       "i!1")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("3"
                                                                                          (expand
                                                                                           "solution_odes_u?")
                                                                                          (("3"
                                                                                            (expand
                                                                                             "solution_odes?")
                                                                                            (("3"
                                                                                              (flatten)
                                                                                              (("3"
                                                                                                (typepred
                                                                                                 "env_at_t(f, fs, x!1)(0)")
                                                                                                (("3"
                                                                                                  (inst
                                                                                                   -2
                                                                                                   "x!1")
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("4"
                                                                                          (split)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "dd?")
                                                                                            (("1"
                                                                                              (flatten)
                                                                                              (("1"
                                                                                                (inst?)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (inst?)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (expand
                                                             "trace_semantic_rel"
                                                             1)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (inst
                                                                 1
                                                                 "fs")
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (expand "valid_trace?")
                                              (("2"
                                                (expand
                                                 "finite_trace?")
                                                (("2"
                                                  (expand "last")
                                                  (("2"
                                                    (expand
                                                     "wf_trace?")
                                                    (("2"
                                                      (expand "nth")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (skeep)
                                                          (("2"
                                                            (typepred
                                                             "i")
                                                            (("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("3"
                                              (expand
                                               "solution_odes_u?")
                                              (("3"
                                                (expand
                                                 "solution_odes?")
                                                (("3"
                                                  (flatten)
                                                  (("3"
                                                    (typepred
                                                     "env_at_t(f, fs, x!1)(0)")
                                                    (("3"
                                                      (inst -2 "x!1")
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (skeep)
                                            (("2"
                                              (case "t=0")
                                              (("1"
                                                (replace -1)
                                                (("1"
                                                  (inst
                                                   2
                                                   "(: STATE(env_at_t(f, fs, x!1)(0)) :)")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (expand
                                                       "init_env")
                                                      (("1"
                                                        (expand
                                                         "trace_semantic_rel"
                                                         2)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (expand
                                                             "DLBOOL")
                                                            (("1"
                                                              (expand
                                                               "final_env")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (expand
                                                                   "last")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (expand
                                                                       "nth"
                                                                       2)
                                                                      (("1"
                                                                        (expand
                                                                         "solution_odes_u?")
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (expand
                                                                             "solution_odes?")
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (typepred
                                                                                 "env_at_t(f, fs, x!1)(0)")
                                                                                (("1"
                                                                                  (inst
                                                                                   -2
                                                                                   "x!1")
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (expand
                                                     "finite_trace?")
                                                    (("2"
                                                      (expand "last")
                                                      (("2"
                                                        (expand
                                                         "wf_trace?")
                                                        (("2"
                                                          (expand
                                                           "nth")
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (skeep)
                                                              (("2"
                                                                (typepred
                                                                 "i")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (inst
                                                 3
                                                 "(: STATE_DIFF(closed_interval(0,t),x!1, LAMBDA(t_1:(closed_interval(0,t))): env_at_t(f, fs,x!1)(t_1)) :)")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (expand
                                                     "final_env")
                                                    (("1"
                                                      (expand "last")
                                                      (("1"
                                                        (expand
                                                         "nth"
                                                         3)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (lemma
                                                             "db_max")
                                                            (("1"
                                                              (inst?)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (expand
                                                                   "init_env")
                                                                  (("1"
                                                                    (expand
                                                                     "trace_semantic_rel"
                                                                     3)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (expand
                                                                         "nth")
                                                                        (("1"
                                                                          (expand
                                                                           "DLBOOL")
                                                                          (("1"
                                                                            (inst
                                                                             3
                                                                             "fs")
                                                                            (("1"
                                                                              (lemma
                                                                               "solution_odes_subset")
                                                                              (("1"
                                                                                (inst
                                                                                 -1
                                                                                 "hp(0)"
                                                                                 "f"
                                                                                 "x!1"
                                                                                 "fs"
                                                                                 "closed_interval(0, t)")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil)
                                                                                 ("2"
                                                                                  (expand
                                                                                   "closed_interval")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "hp")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (skeep)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (typepred
                                                                 "t")
                                                                (("2"
                                                                  (expand
                                                                   "hp")
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (expand
                                                   "finite_trace?")
                                                  (("2"
                                                    (expand "last")
                                                    (("2"
                                                      (expand
                                                       "wf_trace?")
                                                      (("2"
                                                        (expand "nth")
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (skeep)
                                                            (("2"
                                                              (typepred
                                                               "i")
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("3"
                                                  (expand
                                                   "solution_odes_u?")
                                                  (("3"
                                                    (expand
                                                     "solution_odes?")
                                                    (("3"
                                                      (flatten)
                                                      (("3"
                                                        (typepred
                                                         "env_at_t(f, fs, x!1)(0)")
                                                        (("3"
                                                          (inst
                                                           -2
                                                           "x!1")
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("4"
                                                  (typepred "t")
                                                  (("4"
                                                    (expand "hp")
                                                    (("4"
                                                      (expand "dd?")
                                                      (("4"
                                                        (split)
                                                        (("1"
                                                          (flatten)
                                                          (("1"
                                                            (inst?)
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (inst?)
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("5"
                                                  (typepred "t")
                                                  (("5"
                                                    (expand "hp")
                                                    (("5"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((DLAND const-decl "bool" bool_expr nil)
    (Environment type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (DLNOT const-decl "bool" bool_expr nil)
    (HP type-decl nil HP_adt nil)
    (ALLRUNS_st const-decl "bool" ltl_expr nil)
    (RealExpr type-eq-decl nil hp_def nil)
    (MapExpr type-eq-decl nil hp_def nil)
    (list type-decl nil list_adt nil)
    (mapexpr_inj const-decl "bool" hp_def nil)
    (ODEs type-eq-decl nil hp_def nil)
    (diff? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (DIFF adt-constructor-decl "[[ODEs, BoolExpr] -> (diff?)]" HP_adt
     nil)
    (dd? const-decl "bool" hp_expr nil)
    (hp const-decl "bool" interval_def ODEs)
    (SOMERUNS_st const-decl "bool" ltl_expr nil)
    (DLBOOL const-decl "bool" bool_expr nil)
    (TraceState type-decl nil TraceState_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (ALLRUNS_tr const-decl "bool" ltl_expr nil)
    (normDLEVENTUALLY const-decl "bool" ltl_expr nil)
    (behavior adt-accessor-decl
     "[d: (state_diff?) -> {b: [(D(d)) -> Environment] | b(0) = s0(d)}]"
     TraceState_adt nil)
    (env_at_t? const-decl "bool" hp_expr nil)
    (env_at_t const-decl "{env: (env_at_t?(odes, fs, envi, t)) |
   FORALL (env2: (env_at_t?(odes, fs, envi, t))): env = env2}" hp_expr
     nil)
    (MapExprInj type-eq-decl nil hp_def nil)
    (not_in_map const-decl "bool" hp_def nil)
    (db_max formula-decl nil more_ci_props ODEs)
    (inf_behavior adt-accessor-decl
     "[d: (inf_diff?) -> {ib: [(hp(0)) -> Environment] | ib(0) = s0(d)}]"
     TraceState_adt nil)
    (s0 shared-adt-accessor-decl
     "[{x: TraceState | inf_diff?(x) OR state_diff?(x)} -> Environment]"
     TraceState_adt nil)
    (inf_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (car adt-accessor-decl "[(cons?) -> T]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (D adt-accessor-decl "[(state_diff?) ->
   {D: (dd?) | EXISTS (b: posreal): D = closed_interval(0, b)}]"
     TraceState_adt nil)
    (closed_interval const-decl "(closed_interval?(a, b))" interval_def
     ODEs)
    (state_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (solution_odes_u? const-decl "bool" hp_expr nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (final_env const-decl "Environment" trace_semantics nil)
    (DLEVENTUALLY_EXISTS formula-decl nil ltl_expr nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (last const-decl "T" more_list_props structures)
    (init_env const-decl "Environment" trace_semantics nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (STATE adt-constructor-decl "[Environment -> (state?)]"
     TraceState_adt nil)
    (length_singleton formula-decl nil more_list_props structures)
    (derivable_odes? const-decl "bool" hp_expr nil)
    (solution_odes_subset formula-decl nil ODEs_equiv nil)
    (STATE_DIFF adt-constructor-decl
     "[[D: {D: (dd?) | EXISTS (b: posreal): D = closed_interval(0, b)},
  s0: Environment, {b: [(D) -> Environment] | b(0) = s0}] ->
   (state_diff?)]" TraceState_adt nil)
    (solution_odes? const-decl "bool" hp_expr nil)
    (INF_DIFF adt-constructor-decl
     "[[s0: Environment, {ib: [(hp(0)) -> Environment] | ib(0) = s0}] ->
   (inf_diff?)]" TraceState_adt nil)
    (DLOR const-decl "bool" bool_expr nil)
    (null_MapExprInj name-judgement "MapExprInj" hp_def nil))
   shostak))
 (dltl_DIFFcup_dual 0
  (dltl_DIFFcup_dual-1 nil 3903702267
   ("" (skeep)
    (("" (lemma "dlSequent_equiv")
      (("" (inst?)
        (("" (assert)
          (("" (hide 2)
            (("" (expand "dlSequent")
              (("" (skeep)
                (("" (inst -1 "0")
                  (("" (inst 1 "0")
                    (("" (expand "nth")
                      (("" (expand "DLOR")
                        (("" (flatten)
                          (("" (expand "SOMERUNS_st")
                            (("" (expand "SOMERUNS_tr")
                              ((""
                                (skeep)
                                ((""
                                  (expand "normDLEVENTUALLY")
                                  ((""
                                    (assert)
                                    ((""
                                      (typepred "trace")
                                      ((""
                                        (split)
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (split)
                                            (("1"
                                              (inst 2 "trace")
                                              (("1" (assert) nil nil))
                                              nil)
                                             ("2"
                                              (lemma
                                               "DLEVENTUALLY_EXISTS")
                                              (("2"
                                                (inst?)
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (skeep)
                                                    (("2"
                                                      (typepred "i")
                                                      (("2"
                                                        (case
                                                         "length(trace)=1")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (expand
                                                             "nth")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (expand
                                                                 "finite_trace?")
                                                                (("1"
                                                                  (expand
                                                                   "last")
                                                                  (("1"
                                                                    (expand
                                                                     "nth")
                                                                    (("1"
                                                                      (split
                                                                       -5)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (expand
                                                                           "init_env")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (skeep)
                                                                          (("2"
                                                                            (case
                                                                             "t=0")
                                                                            (("1"
                                                                              (typepred
                                                                               "behavior(car(trace))")
                                                                              (("1"
                                                                                (expand
                                                                                 "init_env")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (typepred
                                                                               "D(car(trace))")
                                                                              (("2"
                                                                                (skeep)
                                                                                (("2"
                                                                                  (typepred
                                                                                   "t")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "nth")
                                                                                    (("2"
                                                                                      (replace
                                                                                       -3)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "closed_interval"
                                                                                         -1)
                                                                                        (("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "init_env")
                                                                                            (("2"
                                                                                              (inst
                                                                                               4
                                                                                               "(: STATE_DIFF(closed_interval(0,t),s0(car(trace)), LAMBDA(r:(closed_interval(0,t))): behavior(car(trace))(r)) :)")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "final_env")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "last")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "nth")
                                                                                                        (("1"
                                                                                                          (lemma
                                                                                                           "db_max")
                                                                                                          (("1"
                                                                                                            (inst?)
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "trace_semantic_rel"
                                                                                                                   4)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "trace_semantic_rel"
                                                                                                                       -14)
                                                                                                                      (("1"
                                                                                                                        (skeep)
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           4
                                                                                                                           "fs")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (split)
                                                                                                                              (("1"
                                                                                                                                (decompose-equality
                                                                                                                                 1)
                                                                                                                                (("1"
                                                                                                                                  (replace
                                                                                                                                   -14)
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (skeep)
                                                                                                                                  (("2"
                                                                                                                                    (replace
                                                                                                                                     -5)
                                                                                                                                    (("2"
                                                                                                                                      (typepred
                                                                                                                                       "r")
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "closed_interval")
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (flatten)
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (skeep)
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -15
                                                                                                                                   "t_1")
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (lemma
                                                                                                                             "solution_odes_subset")
                                                                                                                            (("2"
                                                                                                                              (typepred
                                                                                                                               "fs")
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -2
                                                                                                                                   "closed_interval(0, b)"
                                                                                                                                   "f"
                                                                                                                                   "s0(car(trace))"
                                                                                                                                   "fs"
                                                                                                                                   "closed_interval(0, t)")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (skeep)
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "closed_interval")
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (flatten)
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide-all-but
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (grind)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("3"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil)
                                                                                               ("4"
                                                                                                (skeep)
                                                                                                (("4"
                                                                                                  (replace
                                                                                                   -4)
                                                                                                  (("4"
                                                                                                    (expand
                                                                                                     "closed_interval")
                                                                                                    (("4"
                                                                                                      (assert)
                                                                                                      (("4"
                                                                                                        (typepred
                                                                                                         "r")
                                                                                                        (("4"
                                                                                                          (expand
                                                                                                           "closed_interval")
                                                                                                          (("4"
                                                                                                            (flatten)
                                                                                                            (("4"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("5"
                                                                                                (expand
                                                                                                 "dd?")
                                                                                                (("5"
                                                                                                  (split)
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (inst?)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (inst
                                                                                                     1
                                                                                                     "t")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("6"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (expand
                                                           "trace_semantic_rel"
                                                           -8)
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (flatten)
                                                              (("2"
                                                                (expand
                                                                 "valid_trace?")
                                                                (("2"
                                                                  (expand
                                                                   "finite_trace?")
                                                                  (("2"
                                                                    (expand
                                                                     "last")
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (flatten)
                                          (("2"
                                            (expand "valid_trace?")
                                            (("2"
                                              (assert)
                                              (("2"
                                                (expand "last")
                                                (("2"
                                                  (expand
                                                   "trace_semantic_rel"
                                                   -5)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (split)
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (replace
                                                             -1)
                                                            (("1"
                                                              (expand
                                                               "nth")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (skeep)
                                                                  (("1"
                                                                    (lemma
                                                                     "DLEVENTUALLY_EXISTS")
                                                                    (("1"
                                                                      (inst?)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (skeep)
                                                                          (("1"
                                                                            (typepred
                                                                             "i")
                                                                            (("1"
                                                                              (expand
                                                                               "nth")
                                                                              (("1"
                                                                                (skeep)
                                                                                (("1"
                                                                                  (case
                                                                                   "t=0")
                                                                                  (("1"
                                                                                    (typepred
                                                                                     "inf_behavior(car(trace))")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "init_env")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (typepred
                                                                                     "t")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "hp")
                                                                                      (("2"
                                                                                        (inst
                                                                                         4
                                                                                         "(: STATE_DIFF(closed_interval(0,t),s0(car(trace)), LAMBDA(r:(closed_interval(0,t))): inf_behavior(car(trace))(r)) :)")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "init_env")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "final_env")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "last")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "nth")
                                                                                                    (("1"
                                                                                                      (lemma
                                                                                                       "db_max")
                                                                                                      (("1"
                                                                                                        (inst?)
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "trace_semantic_rel"
                                                                                                               4)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   4
                                                                                                                   "fs")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (split)
                                                                                                                      (("1"
                                                                                                                        (decompose-equality)
                                                                                                                        (("1"
                                                                                                                          (replace
                                                                                                                           -6)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (skeep)
                                                                                                                          (("2"
                                                                                                                            (typepred
                                                                                                                             "r")
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "closed_interval")
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "hp")
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (skeep)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -7
                                                                                                                           "t_1")
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (typepred
                                                                                                                     "fs")
                                                                                                                    (("2"
                                                                                                                      (lemma
                                                                                                                       "solution_odes_subset")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (inst?)
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             -1
                                                                                                                             "closed_interval(0, t)")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (skeep)
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "closed_interval")
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "hp")
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (expand
                                                                                           "wf_trace?")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "finite_trace?")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "last")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "nth")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (skeep)
                                                                                                    (("2"
                                                                                                      (typepred
                                                                                                       "i!1")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("3"
                                                                                          (skeep)
                                                                                          (("3"
                                                                                            (typepred
                                                                                             "r")
                                                                                            (("3"
                                                                                              (expand
                                                                                               "hp")
                                                                                              (("3"
                                                                                                (expand
                                                                                                 "closed_interval")
                                                                                                (("3"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("4"
                                                                                          (expand
                                                                                           "dd?")
                                                                                          (("4"
                                                                                            (split)
                                                                                            (("1"
                                                                                              (flatten)
                                                                                              (("1"
                                                                                                (inst?)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (inst?)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("5"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (flatten)
                                                        (("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((dlSequent_equiv formula-decl nil dynamic_logic nil)
    (dlSequent const-decl "bool" dynamic_logic nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (below type-eq-decl nil naturalnumbers nil)
    (length def-decl "nat" list_props nil)
    (< const-decl "bool" reals nil)
    (length_singleton formula-decl nil more_list_props structures)
    (nth def-decl "T" list_props nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (inf_behavior adt-accessor-decl
     "[d: (inf_diff?) -> {ib: [(hp(0)) -> Environment] | ib(0) = s0(d)}]"
     TraceState_adt nil)
    (DLEVENTUALLY_EXISTS formula-decl nil ltl_expr nil)
    (last const-decl "T" more_list_props structures)
    (init_env const-decl "Environment" trace_semantics nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (STATE_DIFF adt-constructor-decl
     "[[D: {D: (dd?) | EXISTS (b: posreal): D = closed_interval(0, b)},
  s0: Environment, {b: [(D) -> Environment] | b(0) = s0}] ->
   (state_diff?)]" TraceState_adt nil)
    (final_env const-decl "Environment" trace_semantics nil)
    (db_max formula-decl nil more_ci_props ODEs)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (solution_odes_u? const-decl "bool" hp_expr nil)
    (env_at_t? const-decl "bool" hp_expr nil)
    (env_at_t const-decl "{env: (env_at_t?(odes, fs, envi, t)) |
   FORALL (env2: (env_at_t?(odes, fs, envi, t))): env = env2}" hp_expr
     nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (solution_odes_subset formula-decl nil ODEs_equiv nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (inf_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (s0 shared-adt-accessor-decl
     "[{x: TraceState | inf_diff?(x) OR state_diff?(x)} -> Environment]"
     TraceState_adt nil)
    (behavior adt-accessor-decl
     "[d: (state_diff?) -> {b: [(D(d)) -> Environment] | b(0) = s0(d)}]"
     TraceState_adt nil)
    (car adt-accessor-decl "[(cons?) -> T]" list_adt nil)
    (below type-eq-decl nil nat_types nil)
    (D adt-accessor-decl "[(state_diff?) ->
   {D: (dd?) | EXISTS (b: posreal): D = closed_interval(0, b)}]"
     TraceState_adt nil)
    (closed_interval const-decl "(closed_interval?(a, b))" interval_def
     ODEs)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (state_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (normDLEVENTUALLY const-decl "bool" ltl_expr nil)
    (SOMERUNS_tr const-decl "bool" ltl_expr nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (TraceState type-decl nil TraceState_adt nil)
    (hp const-decl "bool" interval_def ODEs)
    (dd? const-decl "bool" hp_expr nil)
    (DIFF adt-constructor-decl "[[ODEs, BoolExpr] -> (diff?)]" HP_adt
     nil)
    (diff? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (ODEs type-eq-decl nil hp_def nil)
    (mapexpr_inj const-decl "bool" hp_def nil)
    (MapExpr type-eq-decl nil hp_def nil)
    (RealExpr type-eq-decl nil hp_def nil)
    (SOMERUNS_st const-decl "bool" ltl_expr nil)
    (HP type-decl nil HP_adt nil)
    (DLOR const-decl "bool" bool_expr nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (Formulas type-eq-decl nil bool_expr nil)
    (list type-decl nil list_adt nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (Environment type-eq-decl nil hp_def nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (null_MapExprInj name-judgement "MapExprInj" hp_def nil))
   shostak))
 (dltl_DIFFcup_dual_eq 0
  (dltl_DIFFcup_dual_eq-1 nil 3901719084
   ("" (skeep)
    (("" (decompose-equality)
      (("" (iff)
        (("" (split)
          (("1" (flatten)
            (("1" (expand "DLOR")
              (("1" (expand "DLAND")
                (("1" (split)
                  (("1" (flatten)
                    (("1" (expand "SOMERUNS_tr")
                      (("1" (inst 1 "(:STATE(x!1):)")
                        (("1" (expand "init_env")
                          (("1" (expand "trace_semantic_rel")
                            (("1" (assert)
                              (("1"
                                (expand "normDLEVENTUALLY")
                                (("1"
                                  (expand "final_env")
                                  (("1"
                                    (expand "finite_trace?")
                                    (("1"
                                      (expand "last")
                                      (("1"
                                        (expand "nth")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (lemma
                                                 "DLEVENTUALLY_EXISTS")
                                                (("1"
                                                  (inst?)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (inst 1 "0")
                                                      (("1"
                                                        (expand "nth")
                                                        (("1"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (grind) nil nil))
                        nil))
                      nil))
                    nil)
                   ("2" (expand "SOMERUNS_st")
                    (("2" (expand "SOMERUNS_tr")
                      (("2" (skeep)
                        (("2" (split)
                          (("1" (inst 1 "trace")
                            (("1" (assert)
                              (("1"
                                (expand "normDLEVENTUALLY")
                                (("1" (propax) nil nil))
                                nil))
                              nil)
                             ("2" (typepred "trace")
                              (("2"
                                (expand "valid_trace?")
                                (("2" (propax) nil nil))
                                nil))
                              nil))
                            nil)
                           ("2" (inst 1 "trace")
                            (("1" (assert)
                              (("1"
                                (expand "normDLEVENTUALLY")
                                (("1"
                                  (flatten)
                                  (("1"
                                    (lemma "DLEVENTUALLY_EXISTS")
                                    (("1"
                                      (inst?)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (typepred "trace")
                                          (("1"
                                            (expand "wf_trace?")
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (inst
                                                 2
                                                 "length(trace)-1")
                                                (("1"
                                                  (expand "final_env")
                                                  (("1"
                                                    (expand "last")
                                                    (("1"
                                                      (case
                                                       "length(trace)=1")
                                                      (("1"
                                                        (replace -1)
                                                        (("1"
                                                          (expand
                                                           "nth")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (split
                                                               -5)
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (flatten)
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (expand
                                                                     "finite_trace?")
                                                                    (("2"
                                                                      (expand
                                                                       "last")
                                                                      (("2"
                                                                        (expand
                                                                         "nth")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (inst
                                                                             4
                                                                             "max_ci(D(car(trace)))")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand
                                                         "finite_trace?")
                                                        (("2"
                                                          (expand
                                                           "last")
                                                          (("2"
                                                            (expand
                                                             "trace_semantic_rel"
                                                             -6)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (flatten)
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2" (grind) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (typepred "trace")
                              (("2"
                                (expand "valid_trace?")
                                (("2" (propax) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (lemma "dltl_DIFFcup_dual")
            (("2" (flatten)
              (("2" (inst?)
                (("2" (assert)
                  (("2" (expand "DLOR")
                    (("2" (expand "DLAND")
                      (("2" (flatten)
                        (("2" (lemma "dlSequent_equiv")
                          (("2" (inst?)
                            (("2" (assert)
                              (("2"
                                (hide -2)
                                (("2"
                                  (expand "dlSequent")
                                  (("2"
                                    (inst -1 "x!1")
                                    (("2"
                                      (split)
                                      (("1"
                                        (skeep)
                                        (("1"
                                          (typepred "j")
                                          (("1"
                                            (expand "nth")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (expand "SOMERUNS_tr")
                                                (("1"
                                                  (hide 2)
                                                  (("1"
                                                    (skeep)
                                                    (("1"
                                                      (typepred
                                                       "trace")
                                                      (("1"
                                                        (expand
                                                         "valid_trace?")
                                                        (("1"
                                                          (expand
                                                           "finite_trace?")
                                                          (("1"
                                                            (expand
                                                             "trace_semantic_rel")
                                                            (("1"
                                                              (expand
                                                               "last")
                                                              (("1"
                                                                (split
                                                                 -6)
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (expand
                                                                       "init_env")
                                                                      (("1"
                                                                        (split)
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (flatten)
                                                                          (("2"
                                                                            (skeep)
                                                                            (("2"
                                                                              (typepred
                                                                               "behavior(car(trace))")
                                                                              (("2"
                                                                                (inst
                                                                                 -4
                                                                                 "0")
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("3"
                                                                          (flatten)
                                                                          (("3"
                                                                            (skeep)
                                                                            (("3"
                                                                              (typepred
                                                                               "inf_behavior(car(trace))")
                                                                              (("3"
                                                                                (inst
                                                                                 -4
                                                                                 "0")
                                                                                (("3"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (skeep)
                                        (("2"
                                          (expand "nth")
                                          (("2"
                                            (typepred "i")
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Environment type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (DLOR const-decl "bool" bool_expr nil)
    (DLAND const-decl "bool" bool_expr nil)
    (HP type-decl nil HP_adt nil)
    (SOMERUNS_st const-decl "bool" ltl_expr nil)
    (RealExpr type-eq-decl nil hp_def nil)
    (MapExpr type-eq-decl nil hp_def nil)
    (list type-decl nil list_adt nil)
    (mapexpr_inj const-decl "bool" hp_def nil)
    (ODEs type-eq-decl nil hp_def nil)
    (diff? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (DIFF adt-constructor-decl "[[ODEs, BoolExpr] -> (diff?)]" HP_adt
     nil)
    (dd? const-decl "bool" hp_expr nil)
    (hp const-decl "bool" interval_def ODEs)
    (TraceState type-decl nil TraceState_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (SOMERUNS_tr const-decl "bool" ltl_expr nil)
    (normDLEVENTUALLY const-decl "bool" ltl_expr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (init_env const-decl "Environment" trace_semantics nil)
    (length_singleton formula-decl nil more_list_props structures)
    (final_env const-decl "Environment" trace_semantics nil)
    (last const-decl "T" more_list_props structures)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (below type-eq-decl nil naturalnumbers nil)
    (length def-decl "nat" list_props nil)
    (< const-decl "bool" reals nil)
    (DLEVENTUALLY_EXISTS formula-decl nil ltl_expr nil)
    (nth def-decl "T" list_props nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (STATE adt-constructor-decl "[Environment -> (state?)]"
     TraceState_adt nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (State_Trace const-decl "bool" ltl_expr nil)
    (cut_state_diff const-decl
     "{tt: Trace | length(tt) = length(trace)}" ltl_expr nil)
    (cut_inf_diff const-decl "Trace" ltl_expr nil)
    (DLEVENTUALLY const-decl "bool" ltl_expr nil)
    (state_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (closed_interval const-decl "(closed_interval?(a, b))" interval_def
     ODEs)
    (D adt-accessor-decl "[(state_diff?) ->
   {D: (dd?) | EXISTS (b: posreal): D = closed_interval(0, b)}]"
     TraceState_adt nil)
    (below type-eq-decl nil nat_types nil)
    (<= const-decl "bool" reals nil)
    (max_ci const-decl "{rr: (d) | FORALL (x: (d)): x <= rr}"
     more_ci_props ODEs)
    (car adt-accessor-decl "[(cons?) -> T]" list_adt nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (dlSequent_equiv formula-decl nil dynamic_logic nil)
    (dlSequent const-decl "bool" dynamic_logic nil)
    (inf_behavior adt-accessor-decl
     "[d: (inf_diff?) -> {ib: [(hp(0)) -> Environment] | ib(0) = s0(d)}]"
     TraceState_adt nil)
    (inf_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (s0 shared-adt-accessor-decl
     "[{x: TraceState | inf_diff?(x) OR state_diff?(x)} -> Environment]"
     TraceState_adt nil)
    (behavior adt-accessor-decl
     "[d: (state_diff?) -> {b: [(D(d)) -> Environment] | b(0) = s0(d)}]"
     TraceState_adt nil)
    (Formulas type-eq-decl nil bool_expr nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (dltl_DIFFcup_dual formula-decl nil temporal_logic nil)
    (null_MapExprInj name-judgement "MapExprInj" hp_def nil))
   shostak))
 (dltl_DIFFEG_eq 0
  (dltl_DIFFEG_eq-1 nil 3901792491
   ("" (skeep)
    (("" (expand "DLAND")
      (("" (expand "DLOR")
        (("" (expand "DLNOT")
          (("" (decompose-equality)
            (("" (iff)
              (("" (split)
                (("1" (flatten)
                  (("1" (expand "ALLRUNS_st")
                    (("1" (expand "SOMERUNS_st")
                      (("1" (expand "ALLRUNS_tr")
                        (("1" (skeep)
                          (("1" (expand "normDLEG")
                            (("1" (split 1)
                              (("1"
                                (flatten)
                                (("1"
                                  (expand "trace_semantic_rel" -6)
                                  (("1"
                                    (split -6)
                                    (("1"
                                      (flatten)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (expand "final_env")
                                          (("1"
                                            (expand "last")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (replace -1)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (split -2)
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (expand
                                                           "init_env")
                                                          (("1"
                                                            (expand
                                                             "nth")
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (flatten)
                                                      (("2"
                                                        (skeep)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (replace
                                                             -2)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (inst
                                                                 -7
                                                                 "trace")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (expand
                                                                     "nth")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (expand
                                                                         "trace_semantic_rel"
                                                                         2)
                                                                        (("2"
                                                                          (typepred
                                                                           "fs")
                                                                          (("2"
                                                                            (inst
                                                                             2
                                                                             "fs")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("3"
                                                      (flatten)
                                                      (("3"
                                                        (expand
                                                         "finite_trace?")
                                                        (("3"
                                                          (expand
                                                           "last")
                                                          (("3"
                                                            (expand
                                                             "nth")
                                                            (("3"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (flatten)
                                      (("2"
                                        (expand "finite_trace?")
                                        (("2"
                                          (expand "last")
                                          (("2"
                                            (expand "nth")
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (flatten)
                                (("2"
                                  (expand "finite_trace?")
                                  (("2"
                                    (flatten)
                                    (("2"
                                      (expand "trace_semantic_rel" -5)
                                      (("2"
                                        (assert)
                                        (("2"
                                          (expand "last")
                                          (("2"
                                            (expand "nth")
                                            (("2"
                                              (assert)
                                              (("2"
                                                (split -5)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (replace -1)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (flatten)
                                                          (("1"
                                                            (skeep)
                                                            (("1"
                                                              (lemma
                                                               "DLEG_nth")
                                                              (("1"
                                                                (inst?)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (inst
                                                                     1
                                                                     "0")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (typepred
                                                                         "trace")
                                                                        (("1"
                                                                          (expand
                                                                           "wf_trace?")
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (expand
                                                                               "nth")
                                                                              (("1"
                                                                                (skeep)
                                                                                (("1"
                                                                                  (typepred
                                                                                   "i")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "nth")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (split
                                                                                         -11)
                                                                                        (("1"
                                                                                          (skeep)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "trace_semantic_rel"
                                                                                             -2)
                                                                                            (("1"
                                                                                              (typepred
                                                                                               "trace!1")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "finite_trace?")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "last")
                                                                                                  (("1"
                                                                                                    (split
                                                                                                     -4)
                                                                                                    (("1"
                                                                                                      (flatten)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "nth")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (hide
                                                                                                             -9)
                                                                                                            (("1"
                                                                                                              (split
                                                                                                               -4)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "DLBOOL")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "final_env")
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "last")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (replace
                                                                                                                           -2)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "nth")
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "init_env")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "nth")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (replace
                                                                                                                                         -4)
                                                                                                                                        (("1"
                                                                                                                                          (typepred
                                                                                                                                           "inf_behavior(car(trace)) ")
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -11)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (inst
                                                                                                                                                 -12
                                                                                                                                                 "0")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (expand
                                                                                                                                                   "hp")
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (skeep)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "final_env"
                                                                                                                     1)
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "last"
                                                                                                                       1)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "nth")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "init_env")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (replace
                                                                                                                                 -16)
                                                                                                                                (("2"
                                                                                                                                  (replace
                                                                                                                                   -6)
                                                                                                                                  (("2"
                                                                                                                                    (typepred
                                                                                                                                     "fs")
                                                                                                                                    (("2"
                                                                                                                                      (typepred
                                                                                                                                       "fs!1")
                                                                                                                                      (("2"
                                                                                                                                        (replace
                                                                                                                                         -18)
                                                                                                                                        (("2"
                                                                                                                                          (replace
                                                                                                                                           -8)
                                                                                                                                          (("2"
                                                                                                                                            (typepred
                                                                                                                                             "D(car(trace!1))")
                                                                                                                                            (("2"
                                                                                                                                              (skeep)
                                                                                                                                              (("2"
                                                                                                                                                (replace
                                                                                                                                                 -2)
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  (("2"
                                                                                                                                                    (lemma
                                                                                                                                                     "db_max")
                                                                                                                                                    (("2"
                                                                                                                                                      (inst?)
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        (("2"
                                                                                                                                                          (replace
                                                                                                                                                           -1)
                                                                                                                                                          (("2"
                                                                                                                                                            (replace
                                                                                                                                                             -8)
                                                                                                                                                            (("2"
                                                                                                                                                              (replace
                                                                                                                                                               -17)
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst
                                                                                                                                                                   -18
                                                                                                                                                                   "b")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (case
                                                                                                                                                                     "env_at_t(f, fs, x!1)(b) = env_at_t(f, fs!1, x!1)(b)")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "solution_odes_u?")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (flatten)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (inst
                                                                                                                                                                           -7
                                                                                                                                                                           "fs!1"
                                                                                                                                                                           "closed_interval(0, b)")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (decompose-equality)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (typepred
                                                                                                                                                                                 "env_at_t(f, fs, x!1)(b)")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (typepred
                                                                                                                                                                                   "env_at_t(f, fs!1, x!1)(b)")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "env_at_t?")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (flatten)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (case
                                                                                                                                                                                         "not_in_map(f)(x!2)")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (inst
                                                                                                                                                                                           -2
                                                                                                                                                                                           "x!2")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (inst
                                                                                                                                                                                             -5
                                                                                                                                                                                             "x!2")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil)
                                                                                                                                                                                         ("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "not_in_map")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (skeep)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (inst
                                                                                                                                                                                               -3
                                                                                                                                                                                               "i!1")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (inst
                                                                                                                                                                                                 -6
                                                                                                                                                                                                 "i!1")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (inst
                                                                                                                                                                                                   -14
                                                                                                                                                                                                   "i!1"
                                                                                                                                                                                                   "b")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    nil
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (skeep)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (expand
                                                                                                                                                                               "hp")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "closed_interval")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "hp")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "DLBOOL")
                                                                                                        (("2"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (skeep)
                                                                                          (("2"
                                                                                            (typepred
                                                                                             "trace_1")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "finite_trace?")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "trace_semantic_rel"
                                                                                                 -4)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "last")
                                                                                                  (("2"
                                                                                                    (split
                                                                                                     -4)
                                                                                                    (("1"
                                                                                                      (flatten)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "nth")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (split
                                                                                                             -4)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (hide
                                                                                                                 -3)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "final_env"
                                                                                                                   -5
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "last"
                                                                                                                     -5)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "nth")
                                                                                                                      (("1"
                                                                                                                        (hide
                                                                                                                         -8)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "init_env"
                                                                                                                           -4)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -4)
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 1
                                                                                                                                 "0")
                                                                                                                                (("1"
                                                                                                                                  (skeep)
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -11)
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "init_env")
                                                                                                                                      (("1"
                                                                                                                                        (replace
                                                                                                                                         -15)
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (case
                                                                                                                                             "t=0")
                                                                                                                                            (("1"
                                                                                                                                              (typepred
                                                                                                                                               "inf_behavior(car(trace)) ")
                                                                                                                                              (("1"
                                                                                                                                                (replace
                                                                                                                                                 -13)
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (inst
                                                                                                                                                     -7
                                                                                                                                                     "(: STATE(x!1) :)")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "final_env")
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "last")
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "nth")
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              (("1"
                                                                                                                                                                (expand
                                                                                                                                                                 "trace_semantic_rel"
                                                                                                                                                                 1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (expand
                                                                                                                                                       "finite_trace?")
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "last")
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "wf_trace?")
                                                                                                                                                          (("2"
                                                                                                                                                            (expand
                                                                                                                                                             "nth")
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              (("2"
                                                                                                                                                                (skeep)
                                                                                                                                                                (("2"
                                                                                                                                                                  (typepred
                                                                                                                                                                   "i!1")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (inst
                                                                                                                                               -5
                                                                                                                                               "(: STATE_DIFF(closed_interval(0,t),x!1, LAMBDA (r: (closed_interval(0,t))): env_at_t(f, fs, x!1)(r)) :)")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "final_env")
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "last")
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "nth")
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        (("1"
                                                                                                                                                          (lemma
                                                                                                                                                           "db_max")
                                                                                                                                                          (("1"
                                                                                                                                                            (inst?)
                                                                                                                                                            (("1"
                                                                                                                                                              (replace
                                                                                                                                                               -1)
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (expand
                                                                                                                                                                   "trace_semantic_rel"
                                                                                                                                                                   2)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "DLBOOL")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (inst
                                                                                                                                                                         2
                                                                                                                                                                         "fs")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (typepred
                                                                                                                                                                           "fs")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (replace
                                                                                                                                                                             -16)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (lemma
                                                                                                                                                                               "solution_odes_subset")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (inst
                                                                                                                                                                                 -1
                                                                                                                                                                                 "hp(0)"
                                                                                                                                                                                 "f"
                                                                                                                                                                                 "x!1"
                                                                                                                                                                                 "fs"
                                                                                                                                                                                 "closed_interval(0, t)")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil)
                                                                                                                                                                                 ("2"
                                                                                                                                                                                  (skeep)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "hp")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "closed_interval")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (grind)
                                                                                                                                                nil
                                                                                                                                                nil)
                                                                                                                                               ("3"
                                                                                                                                                (typepred
                                                                                                                                                 "inf_behavior(car(trace))")
                                                                                                                                                (("3"
                                                                                                                                                  (assert)
                                                                                                                                                  (("3"
                                                                                                                                                    (replace
                                                                                                                                                     -11)
                                                                                                                                                    (("3"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("4"
                                                                                                                                                (typepred
                                                                                                                                                 "t")
                                                                                                                                                (("4"
                                                                                                                                                  (expand
                                                                                                                                                   "dd?")
                                                                                                                                                  (("4"
                                                                                                                                                    (split)
                                                                                                                                                    (("1"
                                                                                                                                                      (flatten)
                                                                                                                                                      (("1"
                                                                                                                                                        (inst?)
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (inst?)
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("5"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (expand
                                                                                                                                   "hp")
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (skeep)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "final_env"
                                                                                                                   -7
                                                                                                                   1)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "last")
                                                                                                                    (("2"
                                                                                                                      (hide
                                                                                                                       -10)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "nth")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "init_env"
                                                                                                                             -6)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (replace
                                                                                                                                 -6)
                                                                                                                                (("2"
                                                                                                                                  (typepred
                                                                                                                                   "D(car(trace_1))")
                                                                                                                                  (("2"
                                                                                                                                    (skeep)
                                                                                                                                    (("2"
                                                                                                                                      (replace
                                                                                                                                       -2)
                                                                                                                                      (("2"
                                                                                                                                        (lemma
                                                                                                                                         "db_max")
                                                                                                                                        (("2"
                                                                                                                                          (inst?)
                                                                                                                                          (("2"
                                                                                                                                            (replace
                                                                                                                                             -1)
                                                                                                                                            (("2"
                                                                                                                                              (typepred
                                                                                                                                               "fs!1")
                                                                                                                                              (("2"
                                                                                                                                                (replace
                                                                                                                                                 -10)
                                                                                                                                                (("2"
                                                                                                                                                  (replace
                                                                                                                                                   -4)
                                                                                                                                                  (("2"
                                                                                                                                                    (typepred
                                                                                                                                                     "fs")
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "init_env"
                                                                                                                                                       -22)
                                                                                                                                                      (("2"
                                                                                                                                                        (replace
                                                                                                                                                         -22)
                                                                                                                                                        (("2"
                                                                                                                                                          (inst
                                                                                                                                                           1
                                                                                                                                                           "b")
                                                                                                                                                          (("1"
                                                                                                                                                            (skeep)
                                                                                                                                                            (("1"
                                                                                                                                                              (typepred
                                                                                                                                                               "t")
                                                                                                                                                              (("1"
                                                                                                                                                                (expand
                                                                                                                                                                 "hp"
                                                                                                                                                                 -1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (replace
                                                                                                                                                                   -20)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (replace
                                                                                                                                                                     -10)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (case
                                                                                                                                                                         "t=b")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst
                                                                                                                                                                           -15
                                                                                                                                                                           "(: STATE(env_at_t(f, fs, x!1)(t)) :)")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (expand
                                                                                                                                                                               "init_env")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "final_env")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "last")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "nth")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "trace_semantic_rel"
                                                                                                                                                                                         1)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "DLBOOL")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (decompose-equality
                                                                                                                                                                                               1)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "solution_odes_u?")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (flatten)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (typepred
                                                                                                                                                                                                     "env_at_t(f, fs!1, x!1)(b)")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (typepred
                                                                                                                                                                                                       "env_at_t(f, fs, x!1)(b)")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "env_at_t?")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (flatten)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (case
                                                                                                                                                                                                             "not_in_map(f)(x!2)")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (inst
                                                                                                                                                                                                               -2
                                                                                                                                                                                                               "x!2")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (inst
                                                                                                                                                                                                                 -5
                                                                                                                                                                                                                 "x!2")
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil)
                                                                                                                                                                                                             ("2"
                                                                                                                                                                                                              (expand
                                                                                                                                                                                                               "not_in_map")
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (skeep)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (inst
                                                                                                                                                                                                                   -3
                                                                                                                                                                                                                   "i!1")
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (inst
                                                                                                                                                                                                                     -6
                                                                                                                                                                                                                     "i!1")
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (inst
                                                                                                                                                                                                                       -12
                                                                                                                                                                                                                       "fs!1"
                                                                                                                                                                                                                       "closed_interval(0,b)")
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (inst
                                                                                                                                                                                                                           -12
                                                                                                                                                                                                                           "i!1"
                                                                                                                                                                                                                           "b")
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                                            nil
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil)
                                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                                        (skeep)
                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                          (expand
                                                                                                                                                                                                                           "closed_interval")
                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                               "hp")
                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                                nil
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "wf_trace?")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (expand
                                                                                                                                                                               "finite_trace?")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "last")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "nth"
                                                                                                                                                                                     1)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (skeep)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (typepred
                                                                                                                                                                                           "i!1")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (inst
                                                                                                                                                                           -14
                                                                                                                                                                           "(: STATE_DIFF(closed_interval(0,t-b),env_at_t(f, fs!1, x!1)(b), LAMBDA(r:(closed_interval(0,t-b))): env_at_t(f, fs, x!1)(r+b)) :)")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (expand
                                                                                                                                                                             "init_env")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (split
                                                                                                                                                                               -14)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "final_env")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "last")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "nth")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (lemma
                                                                                                                                                                                           "db_max")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (inst
                                                                                                                                                                                             -1
                                                                                                                                                                                             "0"
                                                                                                                                                                                             "t-b")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "trace_semantic_rel"
                                                                                                                                                                                 1)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (lemma
                                                                                                                                                                                     "solution_odes_u_shift")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       -1
                                                                                                                                                                                       "f"
                                                                                                                                                                                       "fs"
                                                                                                                                                                                       "x!1"
                                                                                                                                                                                       "b")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "DLBOOL")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (case
                                                                                                                                                                                             "env_at_t(f, fs, x!1)(b) = env_at_t(f, fs!1, x!1)(b)")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (replace
                                                                                                                                                                                               -1)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (lemma
                                                                                                                                                                                                 "solution_odes_subset")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (inst
                                                                                                                                                                                                   -1
                                                                                                                                                                                                   "hp(0)"
                                                                                                                                                                                                   "f"
                                                                                                                                                                                                   "env_at_t(f, fs!1, x!1)(b)"
                                                                                                                                                                                                   "LAMBDA (i: below(length(f))): LAMBDA (t: real): fs(i)(t + b)"
                                                                                                                                                                                                   "closed_interval(0, t - b)")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (hide
                                                                                                                                                                                                       -3)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (inst
                                                                                                                                                                                                         1
                                                                                                                                                                                                         "LAMBDA (i: below(length(f))): LAMBDA (t: real): fs(i)(t + b)")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (lemma
                                                                                                                                                                                                           "env_at_t_shift")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (inst
                                                                                                                                                                                                             -1
                                                                                                                                                                                                             "f"
                                                                                                                                                                                                             "fs"
                                                                                                                                                                                                             "x!1"
                                                                                                                                                                                                             "b"
                                                                                                                                                                                                             _)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (decompose-equality
                                                                                                                                                                                                                 1)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (inst
                                                                                                                                                                                                                   -1
                                                                                                                                                                                                                   "x!2")
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                    nil)
                                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                     "hp")
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (typepred
                                                                                                                                                                                                                       "x!2")
                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                        (expand
                                                                                                                                                                                                                         "closed_interval")
                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil)
                                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                                  (skeep)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (inst
                                                                                                                                                                                                                     -1
                                                                                                                                                                                                                     "r_1")
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (replace
                                                                                                                                                                                                                       -3)
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (replace
                                                                                                                                                                                                                         -1
                                                                                                                                                                                                                         1
                                                                                                                                                                                                                         rl)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil)
                                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                       "hp")
                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                        (typepred
                                                                                                                                                                                                                         "r_1")
                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                          (expand
                                                                                                                                                                                                                           "closed_interval")
                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                                            nil
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil)
                                                                                                                                                                                                             ("2"
                                                                                                                                                                                                              (expand
                                                                                                                                                                                                               "hp")
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil)
                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                    (expand
                                                                                                                                                                                                     "dd?")
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (split)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (flatten)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (inst
                                                                                                                                                                                                             1
                                                                                                                                                                                                             "t-b")
                                                                                                                                                                                                            nil
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil)
                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "closed_interval")
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (expand
                                                                                                                                                                                                             "hp")
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (skeep)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil)
                                                                                                                                                                                             ("2"
                                                                                                                                                                                              (hide
                                                                                                                                                                                               -1)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "solution_odes_u?")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (flatten)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (typepred
                                                                                                                                                                                                     "env_at_t(f, fs!1, x!1)(b)")
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (typepred
                                                                                                                                                                                                       "env_at_t(f, fs, x!1)(b)")
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "env_at_t?")
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (flatten)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (decompose-equality
                                                                                                                                                                                                             1)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (case
                                                                                                                                                                                                               "not_in_map(f)(x!2)")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (inst
                                                                                                                                                                                                                 -2
                                                                                                                                                                                                                 "x!2")
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (inst
                                                                                                                                                                                                                   -5
                                                                                                                                                                                                                   "x!2")
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil)
                                                                                                                                                                                                               ("2"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "not_in_map")
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (skeep)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (inst
                                                                                                                                                                                                                     -3
                                                                                                                                                                                                                     "i!1")
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (inst
                                                                                                                                                                                                                       -6
                                                                                                                                                                                                                       "i!1")
                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                        (inst
                                                                                                                                                                                                                         -11
                                                                                                                                                                                                                         "fs!1"
                                                                                                                                                                                                                         "closed_interval(0,b)")
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (inst
                                                                                                                                                                                                                             -11
                                                                                                                                                                                                                             "i!1"
                                                                                                                                                                                                                             "b")
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                                              nil
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                                          (expand
                                                                                                                                                                                                                           "closed_interval")
                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                             "hp")
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (skeep)
                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                                nil
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "hp")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "wf_trace?")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (expand
                                                                                                                                                                               "finite_trace?")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "last")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "nth"
                                                                                                                                                                                     1)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (skeep)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (typepred
                                                                                                                                                                                           "i!1")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("3"
                                                                                                                                                                            (expand
                                                                                                                                                                             "solution_odes_u?")
                                                                                                                                                                            (("3"
                                                                                                                                                                              (flatten)
                                                                                                                                                                              (("3"
                                                                                                                                                                                (typepred
                                                                                                                                                                                 "env_at_t(f, fs!1, x!1)(b)")
                                                                                                                                                                                (("3"
                                                                                                                                                                                  (typepred
                                                                                                                                                                                   "env_at_t(f, fs, x!1)(b)")
                                                                                                                                                                                  (("3"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "env_at_t?")
                                                                                                                                                                                    (("3"
                                                                                                                                                                                      (flatten)
                                                                                                                                                                                      (("3"
                                                                                                                                                                                        (decompose-equality
                                                                                                                                                                                         1)
                                                                                                                                                                                        (("3"
                                                                                                                                                                                          (case
                                                                                                                                                                                           "not_in_map(f)(x!2)")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (inst
                                                                                                                                                                                             -2
                                                                                                                                                                                             "x!2")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (inst
                                                                                                                                                                                               -5
                                                                                                                                                                                               "x!2")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                nil
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "not_in_map")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (skeep)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (inst
                                                                                                                                                                                                 -3
                                                                                                                                                                                                 "i!1")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (inst
                                                                                                                                                                                                   -6
                                                                                                                                                                                                   "i!1")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (inst
                                                                                                                                                                                                     -11
                                                                                                                                                                                                     "fs!1"
                                                                                                                                                                                                     "closed_interval(0,b)")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (inst
                                                                                                                                                                                                         -11
                                                                                                                                                                                                         "i!1"
                                                                                                                                                                                                         "b")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "closed_interval")
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "hp")
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (skeep)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            nil
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("4"
                                                                                                                                                                            (expand
                                                                                                                                                                             "dd?")
                                                                                                                                                                            (("4"
                                                                                                                                                                              (split)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (flatten)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (inst
                                                                                                                                                                                     1
                                                                                                                                                                                     "t-b")
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (inst
                                                                                                                                                                                 1
                                                                                                                                                                                 "t-b")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("5"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (expand
                                                                                                                                                             "hp")
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (flatten)
                                                  (("2"
                                                    (typepred "trace")
                                                    (("2"
                                                      (expand
                                                       "valid_trace?")
                                                      (("2"
                                                        (expand
                                                         "finite_trace?")
                                                        (("2"
                                                          (expand
                                                           "last")
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (expand
                                                               "nth")
                                                              (("2"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (flatten)
                  (("2" (split)
                    (("1" (flatten)
                      (("1" (expand "ALLRUNS_tr")
                        (("1" (expand "normDLEG")
                          (("1" (inst -2 "(: STATE(x!1) :)")
                            (("1" (expand "init_env")
                              (("1"
                                (expand "trace_semantic_rel")
                                (("1"
                                  (assert)
                                  (("1"
                                    (expand "finite_trace?")
                                    (("1"
                                      (expand "final_env")
                                      (("1"
                                        (expand "last")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (expand "nth")
                                            (("1" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "valid_trace?")
                              (("2"
                                (expand "finite_trace?")
                                (("2"
                                  (expand "last")
                                  (("2"
                                    (expand "wf_trace?")
                                    (("2"
                                      (expand "nth")
                                      (("2"
                                        (assert)
                                        (("2"
                                          (skeep)
                                          (("2"
                                            (typepred "i")
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (expand "ALLRUNS_st")
                      (("2" (expand "ALLRUNS_tr")
                        (("2" (skeep)
                          (("2" (expand "normDLEG")
                            (("2" (typepred "trace")
                              (("2"
                                (inst -5 "trace")
                                (("1" (assert) nil nil)
                                 ("2"
                                  (expand "valid_trace?")
                                  (("2" (propax) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("3" (flatten)
                      (("3" (expand "ALLRUNS_tr")
                        (("3" (expand "SOMERUNS_st")
                          (("3" (expand "ALLRUNS_st")
                            (("3" (expand "normDLEG")
                              (("3"
                                (typepred "f")
                                (("3"
                                  (expand "ODEs_s?")
                                  (("3"
                                    (inst -2 "x!1")
                                    (("3"
                                      (expand "ODEs_s?")
                                      (("3"
                                        (skeep)
                                        (("3"
                                          (hide -1)
                                          (("3"
                                            (case
                                             "FORALL(t:(hp(0))): P(env_at_t(f,fs,x!1)(t))")
                                            (("1"
                                              (inst
                                               -3
                                               "(: INF_DIFF(x!1,LAMBDA(t: (hp(0))): env_at_t(f, fs, x!1)(t)) :)")
                                              (("1"
                                                (expand "init_env")
                                                (("1"
                                                  (expand
                                                   "finite_trace?")
                                                  (("1"
                                                    (expand "last")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (expand
                                                         "nth"
                                                         -3)
                                                        (("1"
                                                          (split -3)
                                                          (("1"
                                                            (lemma
                                                             "DLEG_nth")
                                                            (("1"
                                                              (inst?)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (skeep)
                                                                  (("1"
                                                                    (typepred
                                                                     "j")
                                                                    (("1"
                                                                      (expand
                                                                       "length"
                                                                       -1)
                                                                      (("1"
                                                                        (expand
                                                                         "length"
                                                                         -1)
                                                                        (("1"
                                                                          (inst
                                                                           -2
                                                                           "0")
                                                                          (("1"
                                                                            (expand
                                                                             "nth"
                                                                             -2)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (skeep)
                                                                                (("1"
                                                                                  (typepred
                                                                                   "T")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "hp")
                                                                                    (("1"
                                                                                      (case
                                                                                       "T=0")
                                                                                      (("1"
                                                                                        (inst
                                                                                         3
                                                                                         "(: STATE(x!1) :)")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "trace_semantic_rel"
                                                                                             3
                                                                                             1)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "DLBOOL")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "nth")
                                                                                                  (("1"
                                                                                                    (skeep)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "final_env")
                                                                                                      (("1"
                                                                                                        (typepred
                                                                                                         "trace_1")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "finite_trace?")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "last")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "trace_semantic_rel"
                                                                                                               -11)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (flatten)
                                                                                                                  (("1"
                                                                                                                    (replace
                                                                                                                     -11)
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "nth")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (split
                                                                                                                             -2)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "nth")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     -6
                                                                                                                                     "0")
                                                                                                                                    (("1"
                                                                                                                                      (typepred
                                                                                                                                       "env_at_t(f, fs, x!1)(0)")
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "solution_odes_u?")
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "solution_odes?")
                                                                                                                                          (("1"
                                                                                                                                            (flatten)
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               -2
                                                                                                                                               "x!1")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (skeep)
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (hide
                                                                                                                                     2)
                                                                                                                                    (("2"
                                                                                                                                      (replace
                                                                                                                                       -12)
                                                                                                                                      (("2"
                                                                                                                                        (typepred
                                                                                                                                         "D(car(trace_1))")
                                                                                                                                        (("2"
                                                                                                                                          (skeep)
                                                                                                                                          (("2"
                                                                                                                                            (replace
                                                                                                                                             -2)
                                                                                                                                            (("2"
                                                                                                                                              (lemma
                                                                                                                                               "db_max")
                                                                                                                                              (("2"
                                                                                                                                                (inst?)
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  (("2"
                                                                                                                                                    (replace
                                                                                                                                                     -1)
                                                                                                                                                    (("2"
                                                                                                                                                      (replace
                                                                                                                                                       -13)
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        (("2"
                                                                                                                                                          (inst
                                                                                                                                                           -9
                                                                                                                                                           "b")
                                                                                                                                                          (("1"
                                                                                                                                                            (case
                                                                                                                                                             "env_at_t(f, fs, x!1)(b) = env_at_t(f, fs!1, x!1)(b)")
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (hide
                                                                                                                                                               3)
                                                                                                                                                              (("2"
                                                                                                                                                                (typepred
                                                                                                                                                                 "fs!1")
                                                                                                                                                                (("2"
                                                                                                                                                                  (replace
                                                                                                                                                                   -4)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (replace
                                                                                                                                                                     -14)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "solution_odes_u?")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (flatten)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (inst
                                                                                                                                                                           -15
                                                                                                                                                                           "fs!1"
                                                                                                                                                                           "closed_interval(0, b)")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (typepred
                                                                                                                                                                               "env_at_t(f, fs!1, x!1)(b)")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (typepred
                                                                                                                                                                                 "env_at_t(f, fs, x!1)(b)")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "env_at_t?")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (flatten)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (decompose-equality)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (case
                                                                                                                                                                                         "not_in_map(f)(x!2)")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (inst
                                                                                                                                                                                           -5
                                                                                                                                                                                           "x!2")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (inst
                                                                                                                                                                                             -2
                                                                                                                                                                                             "x!2")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil)
                                                                                                                                                                                         ("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "not_in_map")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (skeep)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (inst
                                                                                                                                                                                               -6
                                                                                                                                                                                               "i")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (inst
                                                                                                                                                                                                 -3
                                                                                                                                                                                                 "i")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (inst
                                                                                                                                                                                                   -22
                                                                                                                                                                                                   "i"
                                                                                                                                                                                                   "b")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    nil
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (skeep)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (expand
                                                                                                                                                                               "closed_interval")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (expand
                                                                                                                                                             "hp")
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (expand
                                                                                           "wf_trace?")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "finite_trace?")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "last")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "nth"
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (skeep)
                                                                                                    (("2"
                                                                                                      (typepred
                                                                                                       "i")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (hide
                                                                                         3)
                                                                                        (("2"
                                                                                          (inst
                                                                                           3
                                                                                           "(: STATE_DIFF(closed_interval(0,T),x!1, LAMBDA(t:(closed_interval(0,T))): env_at_t(f,fs,x!1)(t)) :)")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (split
                                                                                               3)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "trace_semantic_rel"
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "nth")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "DLBOOL")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         1
                                                                                                         "fs")
                                                                                                        (("1"
                                                                                                          (lemma
                                                                                                           "solution_odes_subset")
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -1
                                                                                                             "hp(0)"
                                                                                                             "f"
                                                                                                             "x!1"
                                                                                                             "fs"
                                                                                                             "closed_interval(0, T)")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (skeep)
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "closed_interval")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "hp")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("3"
                                                                                                              (grind)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (skeep)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "final_env")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "last")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "nth")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "trace_semantic_rel"
                                                                                                               -2)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (typepred
                                                                                                                   "trace_1")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "finite_trace?")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "last")
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "DLBOOL")
                                                                                                                        (("2"
                                                                                                                          (flatten)
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "nth")
                                                                                                                              (("2"
                                                                                                                                (split
                                                                                                                                 -2)
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -3)
                                                                                                                                    (("1"
                                                                                                                                      (lemma
                                                                                                                                       "db_max")
                                                                                                                                      (("1"
                                                                                                                                        (inst?)
                                                                                                                                        (("1"
                                                                                                                                          (replace
                                                                                                                                           -1)
                                                                                                                                          (("1"
                                                                                                                                            (inst
                                                                                                                                             -8
                                                                                                                                             "T")
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (skeep)
                                                                                                                                    (("2"
                                                                                                                                      (replace
                                                                                                                                       -5)
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (lemma
                                                                                                                                           "db_max")
                                                                                                                                          (("2"
                                                                                                                                            (inst?)
                                                                                                                                            (("2"
                                                                                                                                              (replace
                                                                                                                                               -1)
                                                                                                                                              (("2"
                                                                                                                                                (assert)
                                                                                                                                                (("2"
                                                                                                                                                  (replace
                                                                                                                                                   -4)
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    (("2"
                                                                                                                                                      (typepred
                                                                                                                                                       "D(car(trace_1))")
                                                                                                                                                      (("2"
                                                                                                                                                        (skeep)
                                                                                                                                                        (("2"
                                                                                                                                                          (replace
                                                                                                                                                           -2)
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            (("2"
                                                                                                                                                              (lemma
                                                                                                                                                               "db_max")
                                                                                                                                                              (("2"
                                                                                                                                                                (inst
                                                                                                                                                                 -1
                                                                                                                                                                 "0"
                                                                                                                                                                 "b")
                                                                                                                                                                (("2"
                                                                                                                                                                  (replace
                                                                                                                                                                   -1)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (typepred
                                                                                                                                                                     "fs!1")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (replace
                                                                                                                                                                       -8)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (replace
                                                                                                                                                                         -4)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (lemma
                                                                                                                                                                             "solution_odes_u_init")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (inst
                                                                                                                                                                               -1
                                                                                                                                                                               "f"
                                                                                                                                                                               "fs"
                                                                                                                                                                               "fs!1"
                                                                                                                                                                               "x!1"
                                                                                                                                                                               "closed_interval(0,b)"
                                                                                                                                                                               "b"
                                                                                                                                                                               "T")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (replace
                                                                                                                                                                                   -1)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (inst
                                                                                                                                                                                     -14
                                                                                                                                                                                     "T+b")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "hp")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (expand
                                                                                             "wf_trace?")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "finite_trace?")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "last")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "nth"
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (skeep)
                                                                                                      (("2"
                                                                                                        (typepred
                                                                                                         "i")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("3"
                                                                                            (expand
                                                                                             "solution_odes_u?")
                                                                                            (("3"
                                                                                              (expand
                                                                                               "solution_odes?")
                                                                                              (("3"
                                                                                                (flatten)
                                                                                                (("3"
                                                                                                  (typepred
                                                                                                   "env_at_t(f, fs, x!1)(0)")
                                                                                                  (("3"
                                                                                                    (inst
                                                                                                     -2
                                                                                                     "x!1")
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("4"
                                                                                            (expand
                                                                                             "dd?"
                                                                                             1)
                                                                                            (("4"
                                                                                              (assert)
                                                                                              (("4"
                                                                                                (split)
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (inst?)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (inst?)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("5"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (expand
                                                             "trace_semantic_rel"
                                                             1)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (inst
                                                                 1
                                                                 "fs")
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (expand "valid_trace?")
                                                (("2"
                                                  (expand "last")
                                                  (("2"
                                                    (expand
                                                     "wf_trace?")
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (expand
                                                         "nth"
                                                         1)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (skeep)
                                                            (("2"
                                                              (typepred
                                                               "i")
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("3"
                                                (expand
                                                 "solution_odes_u?")
                                                (("3"
                                                  (expand
                                                   "solution_odes?")
                                                  (("3"
                                                    (flatten)
                                                    (("3"
                                                      (typepred
                                                       "env_at_t(f, fs, x!1)(0)")
                                                      (("3"
                                                        (inst -2 "x!1")
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (skeep)
                                              (("2"
                                                (case "t=0")
                                                (("1"
                                                  (replace -1)
                                                  (("1"
                                                    (inst
                                                     2
                                                     "(: STATE(x!1) :)")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (expand
                                                         "init_env")
                                                        (("1"
                                                          (expand
                                                           "final_env")
                                                          (("1"
                                                            (expand
                                                             "last")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (expand
                                                                 "nth")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (expand
                                                                     "solution_odes_u?")
                                                                    (("1"
                                                                      (expand
                                                                       "solution_odes?")
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (typepred
                                                                           "env_at_t(f, fs, x!1)(0)")
                                                                          (("1"
                                                                            (inst
                                                                             -2
                                                                             "x!1")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (expand
                                                                                 "trace_semantic_rel"
                                                                                 2)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "DLBOOL")
                                                                                    (("1"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand
                                                       "finite_trace?")
                                                      (("2"
                                                        (expand
                                                         "wf_trace?")
                                                        (("2"
                                                          (expand
                                                           "last")
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (expand
                                                               "nth"
                                                               1)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (skeep)
                                                                  (("2"
                                                                    (typepred
                                                                     "i")
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (inst
                                                   3
                                                   "(: STATE_DIFF(closed_interval(0,t),x!1,LAMBDA(t_1:(closed_interval(0,t))): env_at_t(f,fs,x!1)(t_1)) :)")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (expand
                                                       "init_env")
                                                      (("1"
                                                        (expand
                                                         "final_env")
                                                        (("1"
                                                          (expand
                                                           "last")
                                                          (("1"
                                                            (expand
                                                             "length"
                                                             3)
                                                            (("1"
                                                              (expand
                                                               "length"
                                                               3)
                                                              (("1"
                                                                (expand
                                                                 "nth")
                                                                (("1"
                                                                  (lemma
                                                                   "db_max")
                                                                  (("1"
                                                                    (inst?)
                                                                    (("1"
                                                                      (replace
                                                                       -1)
                                                                      (("1"
                                                                        (hide
                                                                         4)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (expand
                                                                             "trace_semantic_rel"
                                                                             3)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (expand
                                                                                 "DLBOOL")
                                                                                (("1"
                                                                                  (inst
                                                                                   3
                                                                                   "fs")
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "solution_odes_subset")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -1
                                                                                       "hp(0)"
                                                                                       "f"
                                                                                       "x!1"
                                                                                       "fs"
                                                                                       "closed_interval(0, t)")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil)
                                                                                       ("2"
                                                                                        (skeep)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "hp")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "closed_interval")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (typepred
                                                                         "t")
                                                                        (("2"
                                                                          (expand
                                                                           "hp")
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (expand
                                                     "finite_trace?")
                                                    (("2"
                                                      (expand "last")
                                                      (("2"
                                                        (expand
                                                         "wf_trace?")
                                                        (("2"
                                                          (expand
                                                           "nth"
                                                           1)
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (skeep)
                                                              (("2"
                                                                (typepred
                                                                 "i")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("3"
                                                    (expand
                                                     "solution_odes_u?")
                                                    (("3"
                                                      (expand
                                                       "solution_odes?")
                                                      (("3"
                                                        (flatten)
                                                        (("3"
                                                          (typepred
                                                           "env_at_t(f, fs, x!1)(0)")
                                                          (("3"
                                                            (inst
                                                             -2
                                                             "x!1")
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("4"
                                                    (typepred "t")
                                                    (("4"
                                                      (expand "hp")
                                                      (("4"
                                                        (expand "dd?")
                                                        (("4"
                                                          (split)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (inst?)
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (inst?)
                                                            (("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("5"
                                                    (assert)
                                                    (("5"
                                                      (typepred "t")
                                                      (("5"
                                                        (expand "hp")
                                                        (("5"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((DLAND const-decl "bool" bool_expr nil)
    (DLNOT const-decl "bool" bool_expr nil)
    (INF_DIFF adt-constructor-decl
     "[[s0: Environment, {ib: [(hp(0)) -> Environment] | ib(0) = s0}] ->
   (inf_diff?)]" TraceState_adt nil)
    (solution_odes? const-decl "bool" hp_expr nil)
    (solution_odes_u_init formula-decl nil solution_odes_props nil)
    (derivable_odes? const-decl "bool" hp_expr nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (final_env const-decl "Environment" trace_semantics nil)
    (solution_odes_u? const-decl "bool" hp_expr nil)
    (state_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (closed_interval const-decl "(closed_interval?(a, b))" interval_def
     ODEs)
    (D adt-accessor-decl "[(state_diff?) ->
   {D: (dd?) | EXISTS (b: posreal): D = closed_interval(0, b)}]"
     TraceState_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (car adt-accessor-decl "[(cons?) -> T]" list_adt nil)
    (inf_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (s0 shared-adt-accessor-decl
     "[{x: TraceState | inf_diff?(x) OR state_diff?(x)} -> Environment]"
     TraceState_adt nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (init_env const-decl "Environment" trace_semantics nil)
    (last const-decl "T" more_list_props structures)
    (DLEG_nth formula-decl nil ltl_expr nil)
    (env_at_t_shift formula-decl nil solution_odes_props nil)
    (solution_odes_u_shift formula-decl nil solution_odes_props nil)
    (STATE_DIFF adt-constructor-decl
     "[[D: {D: (dd?) | EXISTS (b: posreal): D = closed_interval(0, b)},
  s0: Environment, {b: [(D) -> Environment] | b(0) = s0}] ->
   (state_diff?)]" TraceState_adt nil)
    (solution_odes_subset formula-decl nil ODEs_equiv nil)
    (State_Trace const-decl "bool" ltl_expr nil)
    (max_ci const-decl "{rr: (d) | FORALL (x: (d)): x <= rr}"
     more_ci_props ODEs)
    (cut_state_diff const-decl
     "{tt: Trace | length(tt) = length(trace)}" ltl_expr nil)
    (cut_inf_diff const-decl "Trace" ltl_expr nil)
    (DLGLOBALLY const-decl "bool" ltl_expr nil)
    (DLEVENTUALLY const-decl "bool" ltl_expr nil)
    (length_singleton formula-decl nil more_list_props structures)
    (STATE adt-constructor-decl "[Environment -> (state?)]"
     TraceState_adt nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (inf_behavior adt-accessor-decl
     "[d: (inf_diff?) -> {ib: [(hp(0)) -> Environment] | ib(0) = s0(d)}]"
     TraceState_adt nil)
    (not_in_map const-decl "bool" hp_def nil)
    (MapExprInj type-eq-decl nil hp_def nil)
    (env_at_t const-decl "{env: (env_at_t?(odes, fs, envi, t)) |
   FORALL (env2: (env_at_t?(odes, fs, envi, t))): env = env2}" hp_expr
     nil)
    (env_at_t? const-decl "bool" hp_expr nil)
    (db_max formula-decl nil more_ci_props ODEs)
    (normDLEG const-decl "bool" ltl_expr nil)
    (ALLRUNS_tr const-decl "bool" ltl_expr nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (TraceState type-decl nil TraceState_adt nil)
    (DLBOOL const-decl "bool" bool_expr nil)
    (SOMERUNS_st const-decl "bool" ltl_expr nil)
    (hp const-decl "bool" interval_def ODEs)
    (dd? const-decl "bool" hp_expr nil)
    (DIFF adt-constructor-decl "[[ODEs, BoolExpr] -> (diff?)]" HP_adt
     nil)
    (diff? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (ODEs type-eq-decl nil hp_def nil)
    (mapexpr_inj const-decl "bool" hp_def nil)
    (list type-decl nil list_adt nil)
    (MapExpr type-eq-decl nil hp_def nil)
    (RealExpr type-eq-decl nil hp_def nil)
    (ALLRUNS_st const-decl "bool" ltl_expr nil)
    (HP type-decl nil HP_adt nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (Environment type-eq-decl nil hp_def nil)
    (DLOR const-decl "bool" bool_expr nil)
    (null_MapExprInj name-judgement "MapExprInj" hp_def nil))
   shostak))
 (dltl_DIFFEG_dual_eq 0
  (dltl_DIFFEG_dual_eq-1 nil 3901879430
   ("" (skeep)
    (("" (expand "DLOR")
      (("" (expand "DLAND")
        (("" (decompose-equality)
          (("" (iff)
            (("" (split)
              (("1" (flatten)
                (("1" (split)
                  (("1" (flatten)
                    (("1" (expand "SOMERUNS_tr")
                      (("1" (expand "normDLEG")
                        (("1" (inst 1 "(:STATE(x!1):)")
                          (("1" (expand "init_env")
                            (("1" (expand "trace_semantic_rel")
                              (("1"
                                (expand "finite_trace?")
                                (("1"
                                  (expand "final_env")
                                  (("1"
                                    (expand "last")
                                    (("1"
                                      (assert)
                                      (("1"
                                        (expand "nth")
                                        (("1" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (grind) nil nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (expand "SOMERUNS_st")
                    (("2" (expand "SOMERUNS_tr")
                      (("2" (skeep)
                        (("2" (inst 1 "trace")
                          (("1" (expand "normDLEG")
                            (("1" (assert) nil nil)) nil)
                           ("2" (expand "valid_trace?")
                            (("2" (propax) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("3" (flatten)
                    (("3" (expand "ALLRUNS_st")
                      (("3" (expand "SOMERUNS_st")
                        (("3" (expand "SOMERUNS_tr")
                          (("3" (typepred "f")
                            (("3" (hide -1)
                              (("3"
                                (expand "ODEs_s?")
                                (("3"
                                  (expand "ODEs_s?")
                                  (("3"
                                    (inst -1 "x!1")
                                    (("3"
                                      (skeep)
                                      (("3"
                                        (case
                                         "FORALL(t:(hp(0))): P(env_at_t(f,fs,x!1)(t))")
                                        (("1"
                                          (hide -3)
                                          (("1"
                                            (inst
                                             1
                                             "(:INF_DIFF(x!1,LAMBDA(t:(hp(0))):env_at_t(f, fs, x!1)(t)):)")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (expand "init_env" 1)
                                                (("1"
                                                  (expand "normDLEG" 1)
                                                  (("1"
                                                    (expand
                                                     "finite_trace?")
                                                    (("1"
                                                      (expand "last")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (expand
                                                           "nth")
                                                          (("1"
                                                            (split)
                                                            (("1"
                                                              (expand
                                                               "trace_semantic_rel"
                                                               1)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (inst
                                                                   1
                                                                   "fs")
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (lemma
                                                               "DLEG_nth")
                                                              (("2"
                                                                (inst?)
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (hide
                                                                     2)
                                                                    (("2"
                                                                      (skeep)
                                                                      (("2"
                                                                        (inst
                                                                         1
                                                                         "0")
                                                                        (("2"
                                                                          (expand
                                                                           "nth")
                                                                          (("2"
                                                                            (skeep)
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (typepred
                                                                                 "i")
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (hide
                                                                                     1
                                                                                     2
                                                                                     -1)
                                                                                    (("2"
                                                                                      (typepred
                                                                                       "trace_1")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "finite_trace?")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "last")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "trace_semantic_rel"
                                                                                             -6)
                                                                                            (("2"
                                                                                              (split
                                                                                               -6)
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "nth")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (split
                                                                                                       -4)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           1
                                                                                                           "0")
                                                                                                          (("1"
                                                                                                            (skeep)
                                                                                                            (("1"
                                                                                                              (case
                                                                                                               "t_1=0")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -9
                                                                                                                 "(: STATE(x!1):)")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (replace
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "solution_odes_u?")
                                                                                                                      (("1"
                                                                                                                        (flatten)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "solution_odes?")
                                                                                                                          (("1"
                                                                                                                            (flatten)
                                                                                                                            (("1"
                                                                                                                              (typepred
                                                                                                                               "env_at_t(f, fs, x!1)(0)")
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -2
                                                                                                                                 "x!1")
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "init_env")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "final_env")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "last")
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "nth")
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "trace_semantic_rel"
                                                                                                                                               2)
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (hide-all-but
                                                                                                                   1)
                                                                                                                  (("2"
                                                                                                                    (grind)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (inst
                                                                                                                 -8
                                                                                                                 "(: STATE_DIFF(closed_interval(0,t_1),x!1,LAMBDA(r:(closed_interval(0,t_1))): env_at_t(f, fs, x!1)(r)):)")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "init_env")
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "final_env")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "last")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "nth")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (lemma
                                                                                                                                 "db_max")
                                                                                                                                (("1"
                                                                                                                                  (inst?)
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "trace_semantic_rel"
                                                                                                                                         3)
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (inst
                                                                                                                                             3
                                                                                                                                             "fs")
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "DLBOOL")
                                                                                                                                              (("1"
                                                                                                                                                (propax)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (lemma
                                                                                                                                               "solution_odes_subset")
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 -1
                                                                                                                                                 "hp(0)"
                                                                                                                                                 "f"
                                                                                                                                                 "x!1"
                                                                                                                                                 "fs"
                                                                                                                                                 "closed_interval(0, t_1)")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (expand
                                                                                                                                                   "closed_interval")
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "hp")
                                                                                                                                                    (("2"
                                                                                                                                                      (skeep)
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (hide-all-but
                                                                                                                   1)
                                                                                                                  (("2"
                                                                                                                    (grind)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("3"
                                                                                                                  (expand
                                                                                                                   "solution_odes_u?")
                                                                                                                  (("3"
                                                                                                                    (expand
                                                                                                                     "solution_odes?")
                                                                                                                    (("3"
                                                                                                                      (flatten)
                                                                                                                      (("3"
                                                                                                                        (typepred
                                                                                                                         "env_at_t(f, fs, x!1)(0)")
                                                                                                                        (("3"
                                                                                                                          (inst
                                                                                                                           -2
                                                                                                                           "x!1")
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("4"
                                                                                                                  (expand
                                                                                                                   "dd?")
                                                                                                                  (("4"
                                                                                                                    (split)
                                                                                                                    (("1"
                                                                                                                      (flatten)
                                                                                                                      (("1"
                                                                                                                        (inst?)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (inst?)
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("5"
                                                                                                                  (typepred
                                                                                                                   "t_1")
                                                                                                                  (("5"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (expand
                                                                                                             "hp")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (skeep)
                                                                                                          (("2"
                                                                                                            (hide
                                                                                                             -4)
                                                                                                            (("2"
                                                                                                              (typepred
                                                                                                               "D(car(trace_1))")
                                                                                                              (("2"
                                                                                                                (skeep)
                                                                                                                (("2"
                                                                                                                  (replace
                                                                                                                   -2)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "final_env"
                                                                                                                     -10
                                                                                                                     1)
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "last")
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "nth")
                                                                                                                        (("2"
                                                                                                                          (replace
                                                                                                                           -2)
                                                                                                                          (("2"
                                                                                                                            (lemma
                                                                                                                             "db_max")
                                                                                                                            (("2"
                                                                                                                              (inst?)
                                                                                                                              (("2"
                                                                                                                                (replace
                                                                                                                                 -1)
                                                                                                                                (("2"
                                                                                                                                  (replace
                                                                                                                                   -6)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "init_env"
                                                                                                                                       -10)
                                                                                                                                      (("2"
                                                                                                                                        (replace
                                                                                                                                         -10)
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           1
                                                                                                                                           "b")
                                                                                                                                          (("1"
                                                                                                                                            (skeep)
                                                                                                                                            (("1"
                                                                                                                                              (typepred
                                                                                                                                               "t_1")
                                                                                                                                              (("1"
                                                                                                                                                (case
                                                                                                                                                 "t_1=b")
                                                                                                                                                (("1"
                                                                                                                                                  (inst
                                                                                                                                                   -14
                                                                                                                                                   "(:STATE(env_at_t(f, fs, x!1)(t_1)):)")
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "init_env")
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "trace_semantic_rel")
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "DLBOOL")
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "final_env")
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "last")
                                                                                                                                                              (("1"
                                                                                                                                                                (expand
                                                                                                                                                                 "nth")
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (typepred
                                                                                                                                                                     "fs!1")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (replace
                                                                                                                                                                       -7)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (replace
                                                                                                                                                                         -14)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (hide-all-but
                                                                                                                                                                           (-1
                                                                                                                                                                            -13
                                                                                                                                                                            2))
                                                                                                                                                                          (("1"
                                                                                                                                                                            (typepred
                                                                                                                                                                             "env_at_t(f, fs, x!1)(b)")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (typepred
                                                                                                                                                                               "env_at_t(f, fs!1, x!1)(b)")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "env_at_t?")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (flatten)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (decompose-equality
                                                                                                                                                                                     1)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (case
                                                                                                                                                                                       "not_in_map(f)(x!2)")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (inst
                                                                                                                                                                                         -2
                                                                                                                                                                                         "x!2")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (inst
                                                                                                                                                                                           -5
                                                                                                                                                                                           "x!2")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "not_in_map")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (skeep)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (inst
                                                                                                                                                                                             -3
                                                                                                                                                                                             "i!1")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (inst
                                                                                                                                                                                               -6
                                                                                                                                                                                               "i!1")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "solution_odes_u?")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (flatten)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (inst
                                                                                                                                                                                                     -11
                                                                                                                                                                                                     "fs!1"
                                                                                                                                                                                                     "closed_interval(0,b)")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (inst
                                                                                                                                                                                                         -11
                                                                                                                                                                                                         "i!1"
                                                                                                                                                                                                         "b")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "closed_interval")
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "hp")
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (skeep)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            nil
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (hide-all-but
                                                                                                                                                     1)
                                                                                                                                                    (("2"
                                                                                                                                                      (grind)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (inst
                                                                                                                                                   -13
                                                                                                                                                   "(:STATE_DIFF(closed_interval(0,t_1-b),env_at_t(f, fs, x!1)(b),LAMBDA(r:(closed_interval(0,t_1-b))): env_at_t(f, fs,
 x!1)(r+b)):)")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "final_env")
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "last")
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "nth")
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            (("1"
                                                                                                                                                              (lemma
                                                                                                                                                               "db_max")
                                                                                                                                                              (("1"
                                                                                                                                                                (inst
                                                                                                                                                                 -1
                                                                                                                                                                 "0"
                                                                                                                                                                 "t_1-b")
                                                                                                                                                                (("1"
                                                                                                                                                                  (replace
                                                                                                                                                                   -1)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "init_env")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (split
                                                                                                                                                                         3)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (typepred
                                                                                                                                                                           "fs!1")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (replace
                                                                                                                                                                             -7)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (replace
                                                                                                                                                                               -14)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (hide-all-but
                                                                                                                                                                                 (-1
                                                                                                                                                                                  -13
                                                                                                                                                                                  1))
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (typepred
                                                                                                                                                                                   "env_at_t(f, fs, x!1)(b)")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (typepred
                                                                                                                                                                                     "env_at_t(f, fs!1, x!1)(b)")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "env_at_t?")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (flatten)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (decompose-equality
                                                                                                                                                                                           1)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (case
                                                                                                                                                                                             "not_in_map(f)(x!2)")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (inst
                                                                                                                                                                                               -2
                                                                                                                                                                                               "x!2")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (inst
                                                                                                                                                                                                 -5
                                                                                                                                                                                                 "x!2")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil)
                                                                                                                                                                                             ("2"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "not_in_map")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (skeep)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (inst
                                                                                                                                                                                                   -3
                                                                                                                                                                                                   "i!1")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (inst
                                                                                                                                                                                                     -6
                                                                                                                                                                                                     "i!1")
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "solution_odes_u?")
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (flatten)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (inst
                                                                                                                                                                                                           -11
                                                                                                                                                                                                           "fs!1"
                                                                                                                                                                                                           "closed_interval(0,b)")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (inst
                                                                                                                                                                                                               -11
                                                                                                                                                                                                               "i!1"
                                                                                                                                                                                                               "b")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil)
                                                                                                                                                                                                           ("2"
                                                                                                                                                                                                            (expand
                                                                                                                                                                                                             "closed_interval")
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (expand
                                                                                                                                                                                                               "hp")
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (skeep)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "trace_semantic_rel"
                                                                                                                                                                           1)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (expand
                                                                                                                                                                               "DLBOOL")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (lemma
                                                                                                                                                                                 "solution_odes_u_shift")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (inst
                                                                                                                                                                                   -1
                                                                                                                                                                                   "f"
                                                                                                                                                                                   "fs"
                                                                                                                                                                                   "x!1"
                                                                                                                                                                                   "b")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (lemma
                                                                                                                                                                                       "solution_odes_subset")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (inst
                                                                                                                                                                                         -1
                                                                                                                                                                                         "hp(0)"
                                                                                                                                                                                         "f"
                                                                                                                                                                                         "env_at_t(f, fs, x!1)(b)"
                                                                                                                                                                                         "LAMBDA (i: below(length(f))):
                         LAMBDA (t: real): fs(i)(t + b)"
                                                                                                                                                                                         "closed_interval(0, t_1-b)")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (hide
                                                                                                                                                                                             -2)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (lemma
                                                                                                                                                                                               "env_at_t_shift")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (inst
                                                                                                                                                                                                 -1
                                                                                                                                                                                                 "f"
                                                                                                                                                                                                 "fs"
                                                                                                                                                                                                 "x!1"
                                                                                                                                                                                                 "b"
                                                                                                                                                                                                 _)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (inst
                                                                                                                                                                                                     1
                                                                                                                                                                                                     "LAMBDA (i: below(length(f))):
                         LAMBDA (t: real): fs(i)(t + b)")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (decompose-equality
                                                                                                                                                                                                       1)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (inst
                                                                                                                                                                                                         -1
                                                                                                                                                                                                         "x!2")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil)
                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "hp")
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (typepred
                                                                                                                                                                                                             "x!2")
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (expand
                                                                                                                                                                                                               "closed_interval")
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil)
                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                        (skeep)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (inst
                                                                                                                                                                                                           -1
                                                                                                                                                                                                           "r_1")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            nil
                                                                                                                                                                                                            nil)
                                                                                                                                                                                                           ("2"
                                                                                                                                                                                                            (expand
                                                                                                                                                                                                             "hp")
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (typepred
                                                                                                                                                                                                               "r_1")
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "closed_interval")
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil)
                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "hp")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    nil
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil)
                                                                                                                                                                                         ("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "dd?")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (split
                                                                                                                                                                                             1)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (flatten)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (inst
                                                                                                                                                                                                 1
                                                                                                                                                                                                 "t_1-b")
                                                                                                                                                                                                nil
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil)
                                                                                                                                                                                             ("2"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "closed_interval")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "hp")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (skeep)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    nil
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil)
                                                                                                                                                                                   ("2"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "hp")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      nil
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (hide-all-but
                                                                                                                                                     1)
                                                                                                                                                    (("2"
                                                                                                                                                      (grind)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("3"
                                                                                                                                                    (expand
                                                                                                                                                     "dd?")
                                                                                                                                                    (("3"
                                                                                                                                                      (split)
                                                                                                                                                      (("1"
                                                                                                                                                        (flatten)
                                                                                                                                                        (("1"
                                                                                                                                                          (inst
                                                                                                                                                           1
                                                                                                                                                           "t_1-b")
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (inst
                                                                                                                                                         1
                                                                                                                                                         "t_1-b")
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("4"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (expand
                                                                                                                                             "hp")
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (flatten)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (hide-all-but 1)
                                              (("2" (grind) nil nil))
                                              nil)
                                             ("3"
                                              (expand
                                               "solution_odes_u?")
                                              (("3"
                                                (expand
                                                 "solution_odes?")
                                                (("3"
                                                  (flatten)
                                                  (("3"
                                                    (typepred
                                                     "env_at_t(f, fs, x!1)(0)")
                                                    (("3"
                                                      (inst -2 "x!1")
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (skeep)
                                          (("2"
                                            (hide-all-but (-1 -2 1))
                                            (("2"
                                              (case "t=0")
                                              (("1"
                                                (inst
                                                 -3
                                                 "(:STATE(env_at_t(f, fs, x!1)(t)):)")
                                                (("1"
                                                  (expand "init_env")
                                                  (("1"
                                                    (replace -1)
                                                    (("1"
                                                      (expand
                                                       "final_env")
                                                      (("1"
                                                        (expand "last")
                                                        (("1"
                                                          (expand
                                                           "nth")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (expand
                                                               "trace_semantic_rel")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (expand
                                                                   "DLBOOL")
                                                                  (("1"
                                                                    (expand
                                                                     "solution_odes_u?")
                                                                    (("1"
                                                                      (expand
                                                                       "solution_odes?")
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (typepred
                                                                           "env_at_t(f, fs, x!1)(0)")
                                                                          (("1"
                                                                            (inst
                                                                             -2
                                                                             "x!1")
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide-all-but 1)
                                                  (("2"
                                                    (grind)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (typepred "t")
                                                (("2"
                                                  (expand "hp" -1)
                                                  (("2"
                                                    (inst
                                                     -3
                                                     "(: STATE_DIFF(closed_interval(0,t),x!1,LAMBDA(r:(closed_interval(0,t))): env_at_t(f, fs, x!1)(r)):)")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (expand
                                                         "final_env")
                                                        (("1"
                                                          (expand
                                                           "init_env")
                                                          (("1"
                                                            (expand
                                                             "last")
                                                            (("1"
                                                              (expand
                                                               "nth")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (lemma
                                                                   "db_max")
                                                                  (("1"
                                                                    (inst?)
                                                                    (("1"
                                                                      (replace
                                                                       -1)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (expand
                                                                           "trace_semantic_rel"
                                                                           3)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (expand
                                                                               "DLBOOL")
                                                                              (("1"
                                                                                (inst
                                                                                 3
                                                                                 "fs")
                                                                                (("1"
                                                                                  (lemma
                                                                                   "solution_odes_subset")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -1
                                                                                     "hp(0)"
                                                                                     "f"
                                                                                     "x!1"
                                                                                     "fs"
                                                                                     "closed_interval(0, t)")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil)
                                                                                     ("2"
                                                                                      (expand
                                                                                       "closed_interval")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "hp")
                                                                                        (("2"
                                                                                          (skeep)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide-all-but 1)
                                                      (("2"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("3"
                                                      (expand
                                                       "solution_odes_u?")
                                                      (("3"
                                                        (expand
                                                         "solution_odes?")
                                                        (("3"
                                                          (flatten)
                                                          (("3"
                                                            (typepred
                                                             "env_at_t(f, fs, x!1)(0)")
                                                            (("3"
                                                              (inst
                                                               -2
                                                               "x!1")
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("4"
                                                      (expand "dd?")
                                                      (("4"
                                                        (split)
                                                        (("1"
                                                          (flatten)
                                                          (("1"
                                                            (inst?)
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (inst?)
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("5"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (flatten)
                (("2" (expand "SOMERUNS_st")
                  (("2" (expand "ALLRUNS_st")
                    (("2" (expand "SOMERUNS_tr" -1)
                      (("2" (skeep)
                        (("2" (expand "normDLEG" -3)
                          (("2" (split)
                            (("1" (flatten)
                              (("1"
                                (inst 2 "trace")
                                (("1" (assert) nil nil))
                                nil))
                              nil)
                             ("2" (flatten)
                              (("2"
                                (hide 2 3)
                                (("2"
                                  (expand "finite_trace?")
                                  (("2"
                                    (expand "last")
                                    (("2"
                                      (flatten)
                                      (("2"
                                        (expand
                                         "trace_semantic_rel"
                                         -3)
                                        (("2"
                                          (split -3)
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (expand "nth")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (hide 1 2)
                                                      (("1"
                                                        (skeep)
                                                        (("1"
                                                          (split 1)
                                                          (("1"
                                                            (skeep)
                                                            (("1"
                                                              (typepred
                                                               "trace!1")
                                                              (("1"
                                                                (expand
                                                                 "finite_trace?")
                                                                (("1"
                                                                  (expand
                                                                   "last")
                                                                  (("1"
                                                                    (expand
                                                                     "trace_semantic_rel")
                                                                    (("1"
                                                                      (split
                                                                       -4)
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (expand
                                                                           "nth")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (split
                                                                               -4)
                                                                              (("1"
                                                                                (expand
                                                                                 "final_env")
                                                                                (("1"
                                                                                  (expand
                                                                                   "last")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "nth")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "init_env")
                                                                                      (("1"
                                                                                        (typepred
                                                                                         "inf_behavior(car(trace))")
                                                                                        (("1"
                                                                                          (replace
                                                                                           -9)
                                                                                          (("1"
                                                                                            (inst
                                                                                             -10
                                                                                             "0")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (skeep)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "final_env")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "last")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "nth")
                                                                                        (("2"
                                                                                          (typepred
                                                                                           "D(car(trace!1))")
                                                                                          (("2"
                                                                                            (skeep)
                                                                                            (("2"
                                                                                              (replace
                                                                                               -2)
                                                                                              (("2"
                                                                                                (lemma
                                                                                                 "db_max")
                                                                                                (("2"
                                                                                                  (inst?)
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       -12)
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         -6)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "init_env")
                                                                                                            (("2"
                                                                                                              (replace
                                                                                                               -15)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -9)
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -13
                                                                                                                   "b")
                                                                                                                  (("1"
                                                                                                                    (case
                                                                                                                     "env_at_t(f, fs, x!1)(b) = env_at_t(f, fs!1, x!1)(b)")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (typepred
                                                                                                                       "fs")
                                                                                                                      (("2"
                                                                                                                        (typepred
                                                                                                                         "fs!1")
                                                                                                                        (("2"
                                                                                                                          (replace
                                                                                                                           -5)
                                                                                                                          (("2"
                                                                                                                            (replace
                                                                                                                             -11)
                                                                                                                            (("2"
                                                                                                                              (replace
                                                                                                                               -17)
                                                                                                                              (("2"
                                                                                                                                (hide-all-but
                                                                                                                                 (-1
                                                                                                                                  -2
                                                                                                                                  1))
                                                                                                                                (("2"
                                                                                                                                  (typepred
                                                                                                                                   "env_at_t(f, fs, x!1)(b)")
                                                                                                                                  (("2"
                                                                                                                                    (typepred
                                                                                                                                     "env_at_t(f, fs!1, x!1)(b)")
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "env_at_t?")
                                                                                                                                      (("2"
                                                                                                                                        (flatten)
                                                                                                                                        (("2"
                                                                                                                                          (decompose-equality
                                                                                                                                           1)
                                                                                                                                          (("2"
                                                                                                                                            (case
                                                                                                                                             "not_in_map(f)(x!2)")
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               -2
                                                                                                                                               "x!2")
                                                                                                                                              (("1"
                                                                                                                                                (inst
                                                                                                                                                 -5
                                                                                                                                                 "x!2")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (expand
                                                                                                                                               "not_in_map")
                                                                                                                                              (("2"
                                                                                                                                                (skeep)
                                                                                                                                                (("2"
                                                                                                                                                  (inst
                                                                                                                                                   -3
                                                                                                                                                   "i")
                                                                                                                                                  (("2"
                                                                                                                                                    (inst
                                                                                                                                                     -6
                                                                                                                                                     "i")
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "solution_odes_u?")
                                                                                                                                                      (("2"
                                                                                                                                                        (flatten)
                                                                                                                                                        (("2"
                                                                                                                                                          (inst
                                                                                                                                                           -11
                                                                                                                                                           "fs!1"
                                                                                                                                                           "closed_interval(0,b)")
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            (("1"
                                                                                                                                                              (inst
                                                                                                                                                               -11
                                                                                                                                                               "i"
                                                                                                                                                               "b")
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (expand
                                                                                                                                                             "closed_interval")
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "hp")
                                                                                                                                                              (("2"
                                                                                                                                                                (skeep)
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (expand
                                                                                                                     "hp")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (lemma
                                                             "DLEG_nth")
                                                            (("2"
                                                              (inst?)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (hide
                                                                   -6)
                                                                  (("2"
                                                                    (skeep)
                                                                    (("2"
                                                                      (typepred
                                                                       "j")
                                                                      (("2"
                                                                        (inst
                                                                         -2
                                                                         "0")
                                                                        (("2"
                                                                          (expand
                                                                           "nth")
                                                                          (("2"
                                                                            (skeep)
                                                                            (("2"
                                                                              (typepred
                                                                               "T")
                                                                              (("2"
                                                                                (expand
                                                                                 "hp"
                                                                                 -1)
                                                                                (("2"
                                                                                  (case
                                                                                   "T=0")
                                                                                  (("1"
                                                                                    (inst
                                                                                     2
                                                                                     "(:STATE(x!1):)")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "init_env"
                                                                                       2
                                                                                       1)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "trace_semantic_rel"
                                                                                         2
                                                                                         1)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "DLBOOL")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (skeep)
                                                                                              (("1"
                                                                                                (typepred
                                                                                                 "trace_1")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "trace_semantic_rel"
                                                                                                   -8)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "finite_trace?")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "last")
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "nth")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (split
                                                                                                               -2)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "final_env")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "last")
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "nth")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "init_env")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -12)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (typepred
                                                                                                                                   "inf_behavior(car(trace))")
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -12)
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         -7
                                                                                                                                         "0")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (skeep)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "final_env")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "last")
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "nth")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (typepred
                                                                                                                             "D(car(trace_1))")
                                                                                                                            (("2"
                                                                                                                              (skeep)
                                                                                                                              (("2"
                                                                                                                                (replace
                                                                                                                                 -2)
                                                                                                                                (("2"
                                                                                                                                  (lemma
                                                                                                                                   "db_max")
                                                                                                                                  (("2"
                                                                                                                                    (inst?)
                                                                                                                                    (("2"
                                                                                                                                      (replace
                                                                                                                                       -1)
                                                                                                                                      (("2"
                                                                                                                                        (replace
                                                                                                                                         -12)
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (replace
                                                                                                                                             -15)
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "init_env")
                                                                                                                                                (("2"
                                                                                                                                                  (replace
                                                                                                                                                   -17)
                                                                                                                                                  (("2"
                                                                                                                                                    (replace
                                                                                                                                                     -10)
                                                                                                                                                    (("2"
                                                                                                                                                      (assert)
                                                                                                                                                      (("2"
                                                                                                                                                        (inst
                                                                                                                                                         -9
                                                                                                                                                         "b")
                                                                                                                                                        (("1"
                                                                                                                                                          (case
                                                                                                                                                           "env_at_t(f, fs, x!1)(b) = env_at_t(f, fs!1, x!1)(b)")
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (typepred
                                                                                                                                                             "fs!1")
                                                                                                                                                            (("2"
                                                                                                                                                              (replace
                                                                                                                                                               -4)
                                                                                                                                                              (("2"
                                                                                                                                                                (replace
                                                                                                                                                                 -11)
                                                                                                                                                                (("2"
                                                                                                                                                                  (typepred
                                                                                                                                                                   "fs")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (replace
                                                                                                                                                                     -19)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (hide-all-but
                                                                                                                                                                       (-1
                                                                                                                                                                        -2
                                                                                                                                                                        1))
                                                                                                                                                                      (("2"
                                                                                                                                                                        (typepred
                                                                                                                                                                         "env_at_t(f, fs, x!1)(b)")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (typepred
                                                                                                                                                                           "env_at_t(f, fs!1, x!1)(b)")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "env_at_t?")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (flatten)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (decompose-equality
                                                                                                                                                                                 1)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (case
                                                                                                                                                                                   "not_in_map(f)(x!2)")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (inst
                                                                                                                                                                                     -2
                                                                                                                                                                                     "x!2")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       -5
                                                                                                                                                                                       "x!2")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil)
                                                                                                                                                                                   ("2"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "not_in_map")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (skeep)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (inst
                                                                                                                                                                                         -3
                                                                                                                                                                                         "i")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (inst
                                                                                                                                                                                           -6
                                                                                                                                                                                           "i")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "solution_odes_u?")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (flatten)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (inst
                                                                                                                                                                                                 -9
                                                                                                                                                                                                 "fs!1"
                                                                                                                                                                                                 "closed_interval(0,b)")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (inst
                                                                                                                                                                                                     -9
                                                                                                                                                                                                     "i"
                                                                                                                                                                                                     "b")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil)
                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "closed_interval")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (expand
                                                                                                                                                                                                     "hp")
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (skeep)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        nil
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (expand
                                                                                                                                                           "hp")
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (hide-all-but
                                                                                       1)
                                                                                      (("2"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (inst
                                                                                     3
                                                                                     "(: STATE_DIFF(closed_interval(0,T),x!1,LAMBDA(r:(closed_interval(0,T))): env_at_t(f,fs,x!1)(r)):)")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "init_env"
                                                                                         3
                                                                                         1)
                                                                                        (("1"
                                                                                          (split
                                                                                           3)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "trace_semantic_rel"
                                                                                             1)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (inst
                                                                                                 1
                                                                                                 "fs")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "DLBOOL")
                                                                                                  (("1"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (typepred
                                                                                                   "fs")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "init_env")
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       -9)
                                                                                                      (("2"
                                                                                                        (lemma
                                                                                                         "solution_odes_subset")
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -1
                                                                                                           "hp(0)"
                                                                                                           "f"
                                                                                                           "x!1"
                                                                                                           "fs"
                                                                                                           "closed_interval(0, T)")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (expand
                                                                                                             "closed_interval")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "hp")
                                                                                                              (("2"
                                                                                                                (skeep)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (skeep)
                                                                                            (("2"
                                                                                              (typepred
                                                                                               "trace_1")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "finite_trace?")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "last")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "final_env")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "last")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "trace_semantic_rel"
                                                                                                         -4)
                                                                                                        (("2"
                                                                                                          (split
                                                                                                           -4)
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "nth")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (split
                                                                                                                   -4)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "init_env")
                                                                                                                      (("1"
                                                                                                                        (replace
                                                                                                                         -5)
                                                                                                                        (("1"
                                                                                                                          (lemma
                                                                                                                           "db_max")
                                                                                                                          (("1"
                                                                                                                            (inst?)
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -12)
                                                                                                                                (("1"
                                                                                                                                  (replace
                                                                                                                                   -14)
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (inst
                                                                                                                                       -9
                                                                                                                                       "T")
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (skeep)
                                                                                                                      (("2"
                                                                                                                        (typepred
                                                                                                                         "D(car(trace_1))")
                                                                                                                        (("2"
                                                                                                                          (skeep)
                                                                                                                          (("2"
                                                                                                                            (replace
                                                                                                                             -2)
                                                                                                                            (("2"
                                                                                                                              (lemma
                                                                                                                               "db_max")
                                                                                                                              (("2"
                                                                                                                                (inst-cp
                                                                                                                                 -1
                                                                                                                                 "0"
                                                                                                                                 "b")
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -1
                                                                                                                                   "0"
                                                                                                                                   "T")
                                                                                                                                  (("2"
                                                                                                                                    (replace
                                                                                                                                     -1)
                                                                                                                                    (("2"
                                                                                                                                      (replace
                                                                                                                                       -2)
                                                                                                                                      (("2"
                                                                                                                                        (replace
                                                                                                                                         -7)
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "init_env")
                                                                                                                                          (("2"
                                                                                                                                            (replace
                                                                                                                                             -10)
                                                                                                                                            (("2"
                                                                                                                                              (replace
                                                                                                                                               -18)
                                                                                                                                              (("2"
                                                                                                                                                (replace
                                                                                                                                                 -16)
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  (("2"
                                                                                                                                                    (lemma
                                                                                                                                                     "solution_odes_u_init")
                                                                                                                                                    (("2"
                                                                                                                                                      (inst
                                                                                                                                                       -1
                                                                                                                                                       "f"
                                                                                                                                                       "fs"
                                                                                                                                                       "fs!1"
                                                                                                                                                       "x!1"
                                                                                                                                                       "closed_interval(0,b)"
                                                                                                                                                       "b"
                                                                                                                                                       "T")
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        (("2"
                                                                                                                                                          (replace
                                                                                                                                                           -1)
                                                                                                                                                          (("2"
                                                                                                                                                            (inst
                                                                                                                                                             -14
                                                                                                                                                             "T+b")
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "hp")
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (flatten)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (hide-all-but
                                                                                       1)
                                                                                      (("2"
                                                                                        (grind)
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("3"
                                                                                      (typepred
                                                                                       "fs")
                                                                                      (("3"
                                                                                        (expand
                                                                                         "init_env")
                                                                                        (("3"
                                                                                          (replace
                                                                                           -9)
                                                                                          (("3"
                                                                                            (typepred
                                                                                             "env_at_t(f, fs, x!1)(0)")
                                                                                            (("3"
                                                                                              (inst
                                                                                               -2
                                                                                               "x!1")
                                                                                              (("3"
                                                                                                (expand
                                                                                                 "solution_odes_u?")
                                                                                                (("3"
                                                                                                  (expand
                                                                                                   "solution_odes?")
                                                                                                  (("3"
                                                                                                    (flatten)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("4"
                                                                                      (expand
                                                                                       "dd?")
                                                                                      (("4"
                                                                                        (split)
                                                                                        (("1"
                                                                                          (flatten)
                                                                                          (("1"
                                                                                            (inst?)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (inst?)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("5"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (flatten)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (typepred "trace")
                                                (("2"
                                                  (expand
                                                   "valid_trace?")
                                                  (("2"
                                                    (expand
                                                     "finite_trace?")
                                                    (("2"
                                                      (expand "last")
                                                      (("2"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((DLOR const-decl "bool" bool_expr nil)
    (Environment type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (HP type-decl nil HP_adt nil)
    (SOMERUNS_st const-decl "bool" ltl_expr nil)
    (RealExpr type-eq-decl nil hp_def nil)
    (MapExpr type-eq-decl nil hp_def nil)
    (list type-decl nil list_adt nil)
    (mapexpr_inj const-decl "bool" hp_def nil)
    (ODEs type-eq-decl nil hp_def nil)
    (diff? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (DIFF adt-constructor-decl "[[ODEs, BoolExpr] -> (diff?)]" HP_adt
     nil)
    (dd? const-decl "bool" hp_expr nil)
    (hp const-decl "bool" interval_def ODEs)
    (ALLRUNS_st const-decl "bool" ltl_expr nil)
    (DLBOOL const-decl "bool" bool_expr nil)
    (TraceState type-decl nil TraceState_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (SOMERUNS_tr const-decl "bool" ltl_expr nil)
    (normDLEG const-decl "bool" ltl_expr nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (STATE adt-constructor-decl "[Environment -> (state?)]"
     TraceState_adt nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (final_env const-decl "Environment" trace_semantics nil)
    (length_singleton formula-decl nil more_list_props structures)
    (last const-decl "T" more_list_props structures)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (init_env const-decl "Environment" trace_semantics nil)
    (DLEG_nth formula-decl nil ltl_expr nil)
    (solution_odes? const-decl "bool" hp_expr nil)
    (solution_odes_subset formula-decl nil ODEs_equiv nil)
    (db_max formula-decl nil more_ci_props ODEs)
    (STATE_DIFF adt-constructor-decl
     "[[D: {D: (dd?) | EXISTS (b: posreal): D = closed_interval(0, b)},
  s0: Environment, {b: [(D) -> Environment] | b(0) = s0}] ->
   (state_diff?)]" TraceState_adt nil)
    (state_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (closed_interval const-decl "(closed_interval?(a, b))" interval_def
     ODEs)
    (D adt-accessor-decl "[(state_diff?) ->
   {D: (dd?) | EXISTS (b: posreal): D = closed_interval(0, b)}]"
     TraceState_adt nil)
    (car adt-accessor-decl "[(cons?) -> T]" list_adt nil)
    (env_at_t_shift formula-decl nil solution_odes_props nil)
    (solution_odes_u_shift formula-decl nil solution_odes_props nil)
    (MapExprInj type-eq-decl nil hp_def nil)
    (not_in_map const-decl "bool" hp_def nil)
    (s0 shared-adt-accessor-decl
     "[{x: TraceState | inf_diff?(x) OR state_diff?(x)} -> Environment]"
     TraceState_adt nil)
    (solution_odes_u? const-decl "bool" hp_expr nil)
    (INF_DIFF adt-constructor-decl
     "[[s0: Environment, {ib: [(hp(0)) -> Environment] | ib(0) = s0}] ->
   (inf_diff?)]" TraceState_adt nil)
    (inf_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (derivable_odes? const-decl "bool" hp_expr nil)
    (env_at_t const-decl "{env: (env_at_t?(odes, fs, envi, t)) |
   FORALL (env2: (env_at_t?(odes, fs, envi, t))): env = env2}" hp_expr
     nil)
    (env_at_t? const-decl "bool" hp_expr nil)
    (inf_behavior adt-accessor-decl
     "[d: (inf_diff?) -> {ib: [(hp(0)) -> Environment] | ib(0) = s0(d)}]"
     TraceState_adt nil)
    (solution_odes_u_init formula-decl nil solution_odes_props nil)
    (DLAND const-decl "bool" bool_expr nil)
    (null_MapExprInj name-judgement "MapExprInj" hp_def nil))
   shostak))
 (dltl_DIFFGE_eq 0
  (dltl_DIFFGE_eq-1 nil 3901796027
   ("" (skeep)
    (("" (expand "DLAND")
      (("" (expand "DLOR")
        (("" (expand "DLNOT")
          (("" (decompose-equality)
            (("" (iff)
              (("" (split)
                (("1" (flatten)
                  (("1" (expand "ALLRUNS_st")
                    (("1" (expand "SOMERUNS_st")
                      (("1" (expand "ALLRUNS_tr")
                        (("1" (skeep)
                          (("1" (expand "normDLGE")
                            (("1" (split 1)
                              (("1"
                                (flatten)
                                (("1"
                                  (inst -3 "trace")
                                  (("1" (assert) nil nil))
                                  nil))
                                nil)
                               ("2"
                                (flatten)
                                (("2"
                                  (expand "finite_trace?")
                                  (("2"
                                    (expand "last")
                                    (("2"
                                      (flatten)
                                      (("2"
                                        (expand
                                         "trace_semantic_rel"
                                         -5)
                                        (("2"
                                          (split -5)
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (expand "nth")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (skeep)
                                                      (("1"
                                                        (lemma
                                                         "DLGE_nth")
                                                        (("1"
                                                          (inst?)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (hide
                                                               4
                                                               3
                                                               2)
                                                              (("1"
                                                                (skeep)
                                                                (("1"
                                                                  (typepred
                                                                   "j")
                                                                  (("1"
                                                                    (inst
                                                                     2
                                                                     "0")
                                                                    (("1"
                                                                      (expand
                                                                       "nth")
                                                                      (("1"
                                                                        (skeep)
                                                                        (("1"
                                                                          (typepred
                                                                           "T")
                                                                          (("1"
                                                                            (split
                                                                             -9)
                                                                            (("1"
                                                                              (skeep)
                                                                              (("1"
                                                                                (expand
                                                                                 "trace_semantic_rel"
                                                                                 -2)
                                                                                (("1"
                                                                                  (typepred
                                                                                   "trace!1")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "finite_trace?")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "last")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "nth")
                                                                                        (("1"
                                                                                          (split
                                                                                           -4)
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (split
                                                                                                 -4)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (typepred
                                                                                                     "inf_behavior(car(trace))")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "init_env")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "final_env")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "last")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "nth")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -12
                                                                                                                   "0")
                                                                                                                  (("1"
                                                                                                                    (replace
                                                                                                                     -11)
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (skeep)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "init_env")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "final_env")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "last")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "nth")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (hide
                                                                                                                 -14)
                                                                                                                (("2"
                                                                                                                  (replace
                                                                                                                   -3)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (typepred
                                                                                                                       "D(car(trace!1))")
                                                                                                                      (("2"
                                                                                                                        (skeep)
                                                                                                                        (("2"
                                                                                                                          (replace
                                                                                                                           -2)
                                                                                                                          (("2"
                                                                                                                            (lemma
                                                                                                                             "db_max")
                                                                                                                            (("2"
                                                                                                                              (inst?)
                                                                                                                              (("2"
                                                                                                                                (replace
                                                                                                                                 -1)
                                                                                                                                (("2"
                                                                                                                                  (replace
                                                                                                                                   -9)
                                                                                                                                  (("2"
                                                                                                                                    (replace
                                                                                                                                     -14)
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (replace
                                                                                                                                         -17)
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           -15
                                                                                                                                           "b")
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (case
                                                                                                                                               "env_at_t(f, fs, x!1)(b) = env_at_t(f, fs!1, x!1)(b)")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (typepred
                                                                                                                                                 "fs")
                                                                                                                                                (("2"
                                                                                                                                                  (typepred
                                                                                                                                                   "fs!1")
                                                                                                                                                  (("2"
                                                                                                                                                    (replace
                                                                                                                                                     -19)
                                                                                                                                                    (("2"
                                                                                                                                                      (replace
                                                                                                                                                       -5)
                                                                                                                                                      (("2"
                                                                                                                                                        (replace
                                                                                                                                                         -11)
                                                                                                                                                        (("2"
                                                                                                                                                          (hide-all-but
                                                                                                                                                           (-1
                                                                                                                                                            -2
                                                                                                                                                            1))
                                                                                                                                                          (("2"
                                                                                                                                                            (typepred
                                                                                                                                                             "env_at_t(f, fs, x!1)(b)")
                                                                                                                                                            (("2"
                                                                                                                                                              (typepred
                                                                                                                                                               "env_at_t(f, fs!1,x!1)(b)")
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "env_at_t?")
                                                                                                                                                                (("2"
                                                                                                                                                                  (flatten)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "solution_odes_u?")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (flatten)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (inst
                                                                                                                                                                         -10
                                                                                                                                                                         "fs!1"
                                                                                                                                                                         "closed_interval(0,b)")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (decompose-equality
                                                                                                                                                                             1)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (case
                                                                                                                                                                               "not_in_map(f)(x!2)")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (inst
                                                                                                                                                                                 -2
                                                                                                                                                                                 "x!2")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (inst
                                                                                                                                                                                   -5
                                                                                                                                                                                   "x!2")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "not_in_map")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (skeep)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (inst
                                                                                                                                                                                     -3
                                                                                                                                                                                     "i")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       -6
                                                                                                                                                                                       "i")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (inst
                                                                                                                                                                                         -11
                                                                                                                                                                                         "i"
                                                                                                                                                                                         "b")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "closed_interval")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "hp")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (skeep)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (expand
                                                                                                                                             "hp")
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (expand
                                                                               "hp"
                                                                               -2)
                                                                              (("2"
                                                                                (case
                                                                                 "T=0")
                                                                                (("1"
                                                                                  (inst
                                                                                   -2
                                                                                   "(:STATE(x!1):)")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "init_env")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "trace_semantic_rel"
                                                                                         -2
                                                                                         1)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "DLBOOL")
                                                                                            (("1"
                                                                                              (hide
                                                                                               -10)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "final_env"
                                                                                                 -2)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "last")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "nth")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (skeep)
                                                                                                          (("1"
                                                                                                            (typepred
                                                                                                             "trace_1")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "finite_trace?")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "last")
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "trace_semantic_rel"
                                                                                                                   -5)
                                                                                                                  (("1"
                                                                                                                    (flatten)
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "nth")
                                                                                                                        (("1"
                                                                                                                          (split
                                                                                                                           -2)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -12)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (typepred
                                                                                                                                   "inf_behavior(car(trace))")
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     2
                                                                                                                                     "0")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (replace
                                                                                                                                         -12)
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (skeep)
                                                                                                                              (("2"
                                                                                                                                (typepred
                                                                                                                                 "D(car(trace_1))")
                                                                                                                                (("2"
                                                                                                                                  (skeep)
                                                                                                                                  (("2"
                                                                                                                                    (lemma
                                                                                                                                     "db_max")
                                                                                                                                    (("2"
                                                                                                                                      (inst?)
                                                                                                                                      (("2"
                                                                                                                                        (replace
                                                                                                                                         -9)
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (replace
                                                                                                                                             -7)
                                                                                                                                            (("2"
                                                                                                                                              (replace
                                                                                                                                               -3)
                                                                                                                                              (("2"
                                                                                                                                                (replace
                                                                                                                                                 -1)
                                                                                                                                                (("2"
                                                                                                                                                  (replace
                                                                                                                                                   -15)
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    (("2"
                                                                                                                                                      (replace
                                                                                                                                                       -18)
                                                                                                                                                      (("2"
                                                                                                                                                        (inst
                                                                                                                                                         2
                                                                                                                                                         "b")
                                                                                                                                                        (("1"
                                                                                                                                                          (case
                                                                                                                                                           "env_at_t(f, fs, x!1)(b) = env_at_t(f, fs!1, x!1)(b)")
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (typepred
                                                                                                                                                             "fs")
                                                                                                                                                            (("2"
                                                                                                                                                              (typepred
                                                                                                                                                               "fs!1")
                                                                                                                                                              (("2"
                                                                                                                                                                (replace
                                                                                                                                                                 -20)
                                                                                                                                                                (("2"
                                                                                                                                                                  (replace
                                                                                                                                                                   -5)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (replace
                                                                                                                                                                     -9)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (hide-all-but
                                                                                                                                                                       (-1
                                                                                                                                                                        -2
                                                                                                                                                                        1))
                                                                                                                                                                      (("2"
                                                                                                                                                                        (typepred
                                                                                                                                                                         "env_at_t(f, fs, x!1)(b)")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (typepred
                                                                                                                                                                           "env_at_t(f, fs!1,x!1)(b)")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "env_at_t?")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (flatten)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "solution_odes_u?")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (flatten)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (inst
                                                                                                                                                                                     -10
                                                                                                                                                                                     "fs!1"
                                                                                                                                                                                     "closed_interval(0,b)")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (decompose-equality
                                                                                                                                                                                         1)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (case
                                                                                                                                                                                           "not_in_map(f)(x!2)")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (inst
                                                                                                                                                                                             -2
                                                                                                                                                                                             "x!2")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (inst
                                                                                                                                                                                               -5
                                                                                                                                                                                               "x!2")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                nil
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "not_in_map")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (skeep)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (inst
                                                                                                                                                                                                 -3
                                                                                                                                                                                                 "i")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (inst
                                                                                                                                                                                                   -6
                                                                                                                                                                                                   "i")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (inst
                                                                                                                                                                                                     -11
                                                                                                                                                                                                     "i"
                                                                                                                                                                                                     "b")
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil)
                                                                                                                                                                                     ("2"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "closed_interval")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "hp")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (skeep)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (expand
                                                                                                                                                           "hp")
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (expand
                                                                                     "finite_trace?")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "last")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "wf_trace?")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "nth")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (skeep)
                                                                                              (("2"
                                                                                                (typepred
                                                                                                 "i")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (inst
                                                                                   -1
                                                                                   "(: STATE_DIFF(closed_interval(0,T),x!1,LAMBDA(t:(closed_interval(0,T))): env_at_t(f, fs, x!1)(t)):)")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "init_env"
                                                                                       -1
                                                                                       1)
                                                                                      (("1"
                                                                                        (split
                                                                                         -1)
                                                                                        (("1"
                                                                                          (skeep)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "final_env"
                                                                                             -1)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "last")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "nth")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "db_max")
                                                                                                    (("1"
                                                                                                      (inst?)
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (typepred
                                                                                                           "trace_1")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "finite_trace?")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "last")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "trace_semantic_rel"
                                                                                                                 -5)
                                                                                                                (("1"
                                                                                                                  (split
                                                                                                                   -5)
                                                                                                                  (("1"
                                                                                                                    (flatten)
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "nth")
                                                                                                                        (("1"
                                                                                                                          (split
                                                                                                                           -4)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "final_env")
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "last")
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "nth")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "init_env")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (replace
                                                                                                                                           -6)
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -12)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (hide
                                                                                                                                                 -15)
                                                                                                                                                (("1"
                                                                                                                                                  (replace
                                                                                                                                                   -15)
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (inst
                                                                                                                                                       3
                                                                                                                                                       "T")
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (skeep)
                                                                                                                              (("2"
                                                                                                                                (hide
                                                                                                                                 -4)
                                                                                                                                (("2"
                                                                                                                                  (typepred
                                                                                                                                   "D(car(trace_1))")
                                                                                                                                  (("2"
                                                                                                                                    (skeep)
                                                                                                                                    (("2"
                                                                                                                                      (replace
                                                                                                                                       -2)
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "final_env")
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "last")
                                                                                                                                          (("2"
                                                                                                                                            (hide
                                                                                                                                             -17)
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "nth")
                                                                                                                                              (("2"
                                                                                                                                                (replace
                                                                                                                                                 -5)
                                                                                                                                                (("2"
                                                                                                                                                  (replace
                                                                                                                                                   -2)
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "init_env")
                                                                                                                                                    (("2"
                                                                                                                                                      (replace
                                                                                                                                                       -8)
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        (("2"
                                                                                                                                                          (lemma
                                                                                                                                                           "db_max")
                                                                                                                                                          (("2"
                                                                                                                                                            (inst
                                                                                                                                                             -1
                                                                                                                                                             "0"
                                                                                                                                                             "b")
                                                                                                                                                            (("2"
                                                                                                                                                              (replace
                                                                                                                                                               -1)
                                                                                                                                                              (("2"
                                                                                                                                                                (replace
                                                                                                                                                                 -15)
                                                                                                                                                                (("2"
                                                                                                                                                                  (replace
                                                                                                                                                                   -18)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (typepred
                                                                                                                                                                       "fs")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (typepred
                                                                                                                                                                         "fs!1")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (replace
                                                                                                                                                                           -5)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (replace
                                                                                                                                                                             -11)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (replace
                                                                                                                                                                               -20)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (hide-all-but
                                                                                                                                                                                 (-1
                                                                                                                                                                                  -2
                                                                                                                                                                                  -12
                                                                                                                                                                                  -13
                                                                                                                                                                                  1
                                                                                                                                                                                  3))
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (lemma
                                                                                                                                                                                   "solution_odes_u_init")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (inst
                                                                                                                                                                                     -1
                                                                                                                                                                                     "f"
                                                                                                                                                                                     "fs"
                                                                                                                                                                                     "fs!1"
                                                                                                                                                                                     "x!1"
                                                                                                                                                                                     "closed_interval(0, b)"
                                                                                                                                                                                     "b"
                                                                                                                                                                                     "T")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (replace
                                                                                                                                                                                         -1)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (inst
                                                                                                                                                                                           2
                                                                                                                                                                                           "T+b")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "hp")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (flatten)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (expand
                                                                                           "trace_semantic_rel"
                                                                                           1)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (inst
                                                                                               1
                                                                                               "fs")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "DLBOOL")
                                                                                                (("1"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (typepred
                                                                                                 "fs")
                                                                                                (("2"
                                                                                                  (lemma
                                                                                                   "solution_odes_subset")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "init_env")
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       -11)
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -1
                                                                                                         "hp(0)"
                                                                                                         "f"
                                                                                                         "x!1"
                                                                                                         "fs"
                                                                                                         "closed_interval(0,T)")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (expand
                                                                                                           "closed_interval")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "hp")
                                                                                                            (("2"
                                                                                                              (skeep)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (expand
                                                                                     "finite_trace?")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "last")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "wf_trace?")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "nth")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (skeep)
                                                                                              (("2"
                                                                                                (typepred
                                                                                                 "i")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("3"
                                                                                    (typepred
                                                                                     "inf_behavior(car(trace))")
                                                                                    (("3"
                                                                                      (replace
                                                                                       -6)
                                                                                      (("3"
                                                                                        (assert)
                                                                                        (("3"
                                                                                          (expand
                                                                                           "init_env")
                                                                                          (("3"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("4"
                                                                                    (expand
                                                                                     "dd?")
                                                                                    (("4"
                                                                                      (split)
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (inst?)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (inst?)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("5"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (flatten)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (typepred "trace")
                                                (("2"
                                                  (expand
                                                   "valid_trace?")
                                                  (("2"
                                                    (expand
                                                     "finite_trace?")
                                                    (("2"
                                                      (expand "last")
                                                      (("2"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (flatten)
                  (("2" (split)
                    (("1" (flatten)
                      (("1" (expand "ALLRUNS_tr")
                        (("1" (inst -2 "(: STATE(x!1):)")
                          (("1" (expand "init_env")
                            (("1" (expand "trace_semantic_rel")
                              (("1"
                                (assert)
                                (("1"
                                  (expand "normDLGE")
                                  (("1"
                                    (expand "finite_trace?")
                                    (("1"
                                      (expand "final_env")
                                      (("1"
                                        (expand "last")
                                        (("1"
                                          (expand "nth")
                                          (("1" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (expand "valid_trace?")
                            (("2" (expand "finite_trace?")
                              (("2"
                                (expand "last")
                                (("2"
                                  (expand "wf_trace?")
                                  (("2"
                                    (expand "nth")
                                    (("2"
                                      (assert)
                                      (("2"
                                        (skeep)
                                        (("2"
                                          (typepred "i")
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (expand "ALLRUNS_st")
                      (("2" (expand "ALLRUNS_tr")
                        (("2" (skeep)
                          (("2" (expand "normDLGE")
                            (("2" (typepred "trace")
                              (("2"
                                (inst -5 "trace")
                                (("1" (assert) nil nil)
                                 ("2"
                                  (expand "valid_trace?")
                                  (("2" (propax) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("3" (flatten)
                      (("3" (expand "ALLRUNS_st")
                        (("3" (skeep)
                          (("3" (expand "SOMERUNS_st")
                            (("3" (expand "ALLRUNS_tr")
                              (("3"
                                (typepred "trace")
                                (("3"
                                  (expand "finite_trace?")
                                  (("3"
                                    (expand "last")
                                    (("3"
                                      (typepred "f")
                                      (("3"
                                        (expand "ODEs_s?")
                                        (("3"
                                          (expand "ODEs_s?")
                                          (("3"
                                            (inst -2 "x!1")
                                            (("3"
                                              (skeep)
                                              (("3"
                                                (case
                                                 "FORALL(t:(hp(0))): P(env_at_t(f,fs,x!1)(t))")
                                                (("1"
                                                  (expand "normDLGE")
                                                  (("1"
                                                    (inst
                                                     -8
                                                     "(: INF_DIFF(x!1,LAMBDA(t:(hp(0))): env_at_t(f, fs, x!1)(t)) :)")
                                                    (("1"
                                                      (expand
                                                       "init_env")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (split -8)
                                                          (("1"
                                                            (hide 1)
                                                            (("1"
                                                              (expand
                                                               "finite_trace?")
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (expand
                                                                   "last")
                                                                  (("1"
                                                                    (expand
                                                                     "nth")
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (flatten)
                                                            (("2"
                                                              (hide
                                                               1
                                                               2
                                                               -5)
                                                              (("2"
                                                                (lemma
                                                                 "DLGE_nth")
                                                                (("2"
                                                                  (inst?)
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (hide
                                                                       -2)
                                                                      (("2"
                                                                        (inst
                                                                         -1
                                                                         "0")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (expand
                                                                             "nth")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (skeep)
                                                                                (("2"
                                                                                  (typepred
                                                                                   "i")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (hide
                                                                                       -1
                                                                                       1)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "trace_semantic_rel"
                                                                                         -7)
                                                                                        (("2"
                                                                                          (split
                                                                                           -7)
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (split
                                                                                                 -7)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "final_env"
                                                                                                     1
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "last")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "nth")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -4
                                                                                                               "0")
                                                                                                              (("1"
                                                                                                                (skeep)
                                                                                                                (("1"
                                                                                                                  (case
                                                                                                                   "t_1=0")
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     1
                                                                                                                     "(:STATE(x!1):)")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "final_env")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "last")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "nth")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "trace_semantic_rel")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "solution_odes_u?")
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "solution_odes?")
                                                                                                                                        (("1"
                                                                                                                                          (flatten)
                                                                                                                                          (("1"
                                                                                                                                            (typepred
                                                                                                                                             "env_at_t(f, fs, x!1)(0)")
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               -2
                                                                                                                                               "x!1")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (expand
                                                                                                                       "finite_trace?")
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "last")
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "wf_trace?")
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "nth")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (skeep)
                                                                                                                                (("2"
                                                                                                                                  (typepred
                                                                                                                                   "i!1")
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (typepred
                                                                                                                     "t_1")
                                                                                                                    (("2"
                                                                                                                      (hide
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         2
                                                                                                                         "(: STATE_DIFF(closed_interval(0,t_1),x!1,LAMBDA(t:(closed_interval(0,t_1))): env_at_t(f, fs, x!1)(t)):)")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "final_env")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "last")
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "nth")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (lemma
                                                                                                                                     "db_max")
                                                                                                                                    (("1"
                                                                                                                                      (inst?)
                                                                                                                                      (("1"
                                                                                                                                        (replace
                                                                                                                                         -1)
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "trace_semantic_rel"
                                                                                                                                             2)
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "DLBOOL")
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                (("1"
                                                                                                                                                  (inst
                                                                                                                                                   2
                                                                                                                                                   "fs")
                                                                                                                                                  (("1"
                                                                                                                                                    (lemma
                                                                                                                                                     "solution_odes_subset")
                                                                                                                                                    (("1"
                                                                                                                                                      (inst
                                                                                                                                                       -1
                                                                                                                                                       "hp(0)"
                                                                                                                                                       "f"
                                                                                                                                                       "x!1"
                                                                                                                                                       "fs"
                                                                                                                                                       "closed_interval(0,t_1)")
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (expand
                                                                                                                                                         "closed_interval")
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "hp")
                                                                                                                                                          (("2"
                                                                                                                                                            (skeep)
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (expand
                                                                                                                           "finite_trace?")
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "last")
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "wf_trace?")
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "nth")
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (skeep)
                                                                                                                                    (("2"
                                                                                                                                      (typepred
                                                                                                                                       "i!1")
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("3"
                                                                                                                          (expand
                                                                                                                           "solution_odes_u?")
                                                                                                                          (("3"
                                                                                                                            (expand
                                                                                                                             "solution_odes?")
                                                                                                                            (("3"
                                                                                                                              (flatten)
                                                                                                                              (("3"
                                                                                                                                (typepred
                                                                                                                                 "env_at_t(f, fs, x!1)(0)")
                                                                                                                                (("3"
                                                                                                                                  (inst
                                                                                                                                   -2
                                                                                                                                   "x!1")
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("4"
                                                                                                                          (expand
                                                                                                                           "dd?")
                                                                                                                          (("4"
                                                                                                                            (split)
                                                                                                                            (("1"
                                                                                                                              (flatten)
                                                                                                                              (("1"
                                                                                                                                (inst?)
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (inst?)
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("5"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (expand
                                                                                                                 "hp")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (skeep)
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       -4)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "final_env"
                                                                                                         1
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "last")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "nth")
                                                                                                            (("2"
                                                                                                              (replace
                                                                                                               -3)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -8)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (typepred
                                                                                                                     "D(car(trace))")
                                                                                                                    (("2"
                                                                                                                      (skeep)
                                                                                                                      (("2"
                                                                                                                        (replace
                                                                                                                         -2)
                                                                                                                        (("2"
                                                                                                                          (lemma
                                                                                                                           "db_max")
                                                                                                                          (("2"
                                                                                                                            (inst?)
                                                                                                                            (("2"
                                                                                                                              (replace
                                                                                                                               -1)
                                                                                                                              (("2"
                                                                                                                                (inst
                                                                                                                                 -7
                                                                                                                                 "b")
                                                                                                                                (("1"
                                                                                                                                  (skeep)
                                                                                                                                  (("1"
                                                                                                                                    (typepred
                                                                                                                                     "t_1")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "hp"
                                                                                                                                       -1)
                                                                                                                                      (("1"
                                                                                                                                        (case
                                                                                                                                         "env_at_t(f, fs, x!1)(b) = env_at_t(f, fs!1, x!1)(b)")
                                                                                                                                        (("1"
                                                                                                                                          (replace
                                                                                                                                           -1
                                                                                                                                           1
                                                                                                                                           rl)
                                                                                                                                          (("1"
                                                                                                                                            (hide
                                                                                                                                             -1)
                                                                                                                                            (("1"
                                                                                                                                              (case
                                                                                                                                               "t_1=b")
                                                                                                                                              (("1"
                                                                                                                                                (inst
                                                                                                                                                 1
                                                                                                                                                 "(:STATE(env_at_t(f, fs, x!1)(b)):)")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "trace_semantic_rel"
                                                                                                                                                     1)
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "DLBOOL")
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "final_env")
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "last")
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "nth")
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (expand
                                                                                                                                                   "finite_trace?")
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "last")
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "wf_trace?")
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "nth")
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          (("2"
                                                                                                                                                            (skeep)
                                                                                                                                                            (("2"
                                                                                                                                                              (typepred
                                                                                                                                                               "i!1")
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (inst
                                                                                                                                                 2
                                                                                                                                                 "(: STATE_DIFF(closed_interval(0,t_1-b),env_at_t(f, fs, x!1)(b), LAMBDA(r:(closed_interval(0,t_1-b))): env_at_t(f, fs,
 x!1)(b+r)):)")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "final_env")
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "last")
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "nth")
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          (("1"
                                                                                                                                                            (lemma
                                                                                                                                                             "db_max")
                                                                                                                                                            (("1"
                                                                                                                                                              (inst
                                                                                                                                                               -1
                                                                                                                                                               "0"
                                                                                                                                                               "t_1-b")
                                                                                                                                                              (("1"
                                                                                                                                                                (replace
                                                                                                                                                                 -1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "trace_semantic_rel"
                                                                                                                                                                     2)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "DLBOOL")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (lemma
                                                                                                                                                                           "solution_odes_u_shift")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (inst
                                                                                                                                                                             -1
                                                                                                                                                                             "f"
                                                                                                                                                                             "fs"
                                                                                                                                                                             "x!1"
                                                                                                                                                                             "b")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (lemma
                                                                                                                                                                                 "solution_odes_subset")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (inst
                                                                                                                                                                                   -1
                                                                                                                                                                                   "hp(0)"
                                                                                                                                                                                   "f"
                                                                                                                                                                                   "env_at_t(f, fs, x!1)(b)"
                                                                                                                                                                                   "LAMBDA (i: below(length(f))):
                         LAMBDA (t: real): fs(i)(t + b)"
                                                                                                                                                                                   "closed_interval(0,t_1-b)")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       2
                                                                                                                                                                                       "LAMBDA (i: below(length(f))): LAMBDA (t: real): fs(i)(t + b)")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (lemma
                                                                                                                                                                                         "env_at_t_shift")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (inst
                                                                                                                                                                                           -1
                                                                                                                                                                                           "f"
                                                                                                                                                                                           "fs"
                                                                                                                                                                                           "x!1"
                                                                                                                                                                                           "b"
                                                                                                                                                                                           _)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (decompose-equality
                                                                                                                                                                                               2)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (inst
                                                                                                                                                                                                 -1
                                                                                                                                                                                                 "x!2")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil)
                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "hp")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (typepred
                                                                                                                                                                                                     "x!2")
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "closed_interval")
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (flatten)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil)
                                                                                                                                                                                               ("2"
                                                                                                                                                                                                (skeep)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (inst
                                                                                                                                                                                                   -1
                                                                                                                                                                                                   "r_1")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    nil
                                                                                                                                                                                                    nil)
                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                    (expand
                                                                                                                                                                                                     "hp")
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (typepred
                                                                                                                                                                                                       "r_1")
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "closed_interval")
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (flatten)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            nil
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "hp")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil)
                                                                                                                                                                                   ("2"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "dd?")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (split)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (flatten)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (inst
                                                                                                                                                                                           1
                                                                                                                                                                                           "t_1-b")
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "closed_interval")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "hp")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (skeep)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (expand
                                                                                                                                                                               "hp")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (expand
                                                                                                                                                   "finite_trace?")
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "last")
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "wf_trace?")
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "nth")
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          (("2"
                                                                                                                                                            (skeep)
                                                                                                                                                            (("2"
                                                                                                                                                              (typepred
                                                                                                                                                               "i!1")
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("3"
                                                                                                                                                  (expand
                                                                                                                                                   "dd?")
                                                                                                                                                  (("3"
                                                                                                                                                    (split)
                                                                                                                                                    (("1"
                                                                                                                                                      (flatten)
                                                                                                                                                      (("1"
                                                                                                                                                        (inst?)
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (inst
                                                                                                                                                       1
                                                                                                                                                       "t_1-b")
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("4"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (typepred
                                                                                                                                           "fs!1")
                                                                                                                                          (("2"
                                                                                                                                            (replace
                                                                                                                                             -6)
                                                                                                                                            (("2"
                                                                                                                                              (replace
                                                                                                                                               -14)
                                                                                                                                              (("2"
                                                                                                                                                (hide-all-but
                                                                                                                                                 (-1
                                                                                                                                                  -13
                                                                                                                                                  1))
                                                                                                                                                (("2"
                                                                                                                                                  (typepred
                                                                                                                                                   "env_at_t(f, fs, x!1)(b)")
                                                                                                                                                  (("2"
                                                                                                                                                    (typepred
                                                                                                                                                     "env_at_t(f, fs!1,x!1)(b)")
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "env_at_t?")
                                                                                                                                                      (("2"
                                                                                                                                                        (flatten)
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "solution_odes_u?")
                                                                                                                                                          (("2"
                                                                                                                                                            (flatten)
                                                                                                                                                            (("2"
                                                                                                                                                              (inst
                                                                                                                                                               -10
                                                                                                                                                               "fs!1"
                                                                                                                                                               "closed_interval(0,b)")
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (decompose-equality
                                                                                                                                                                   1)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (case
                                                                                                                                                                     "not_in_map(f)(x!2)")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (inst
                                                                                                                                                                       -2
                                                                                                                                                                       "x!2")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (inst
                                                                                                                                                                         -5
                                                                                                                                                                         "x!2")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "not_in_map")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (skeep)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (inst
                                                                                                                                                                           -3
                                                                                                                                                                           "i!1")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (inst
                                                                                                                                                                             -6
                                                                                                                                                                             "i!1")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (inst
                                                                                                                                                                               -11
                                                                                                                                                                               "i!1"
                                                                                                                                                                               "b")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "closed_interval")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (propax)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "closed_interval")
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "hp")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (skeep)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (expand
                                                                                                                                   "hp")
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "nth")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "nth")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("3"
                                                            (expand
                                                             "trace_semantic_rel"
                                                             1)
                                                            (("3"
                                                              (assert)
                                                              (("3"
                                                                (inst
                                                                 1
                                                                 "fs")
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand
                                                       "valid_trace?")
                                                      (("2"
                                                        (expand
                                                         "finite_trace?")
                                                        (("2"
                                                          (expand
                                                           "last")
                                                          (("2"
                                                            (expand
                                                             "wf_trace?")
                                                            (("2"
                                                              (expand
                                                               "nth")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (skeep)
                                                                  (("2"
                                                                    (typepred
                                                                     "i")
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("3"
                                                      (expand
                                                       "solution_odes_u?")
                                                      (("3"
                                                        (expand
                                                         "solution_odes?")
                                                        (("3"
                                                          (flatten)
                                                          (("3"
                                                            (typepred
                                                             "env_at_t(f, fs, x!1)(0)")
                                                            (("3"
                                                              (inst
                                                               -2
                                                               "x!1")
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (skeep)
                                                  (("2"
                                                    (typepred "t")
                                                    (("2"
                                                      (expand "hp")
                                                      (("2"
                                                        (case "t=0")
                                                        (("1"
                                                          (inst
                                                           2
                                                           "(:STATE(x!1):)")
                                                          (("1"
                                                            (expand
                                                             "init_env"
                                                             2)
                                                            (("1"
                                                              (expand
                                                               "trace_semantic_rel"
                                                               2)
                                                              (("1"
                                                                (expand
                                                                 "DLBOOL")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (expand
                                                                     "final_env")
                                                                    (("1"
                                                                      (expand
                                                                       "last")
                                                                      (("1"
                                                                        (expand
                                                                         "nth")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (hide
                                                                             2)
                                                                            (("1"
                                                                              (expand
                                                                               "solution_odes_u?")
                                                                              (("1"
                                                                                (expand
                                                                                 "solution_odes?")
                                                                                (("1"
                                                                                  (flatten)
                                                                                  (("1"
                                                                                    (typepred
                                                                                     "env_at_t(f, fs, x!1)(t)")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -2
                                                                                       "x!1")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil)
                                                                                       ("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (expand
                                                             "finite_trace?")
                                                            (("2"
                                                              (expand
                                                               "last")
                                                              (("2"
                                                                (expand
                                                                 "wf_trace?")
                                                                (("2"
                                                                  (expand
                                                                   "nth")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (skeep)
                                                                      (("2"
                                                                        (typepred
                                                                         "i")
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide-all-but
                                                           (-1
                                                            -3
                                                            1
                                                            2
                                                            3))
                                                          (("2"
                                                            (inst
                                                             3
                                                             "(:STATE_DIFF(closed_interval(0,t),x!1,LAMBDA(r:(closed_interval(0,t))): env_at_t(f, fs, x!1)(r)):)")
                                                            (("1"
                                                              (expand
                                                               "init_env")
                                                              (("1"
                                                                (expand
                                                                 "final_env")
                                                                (("1"
                                                                  (expand
                                                                   "last")
                                                                  (("1"
                                                                    (expand
                                                                     "nth")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (lemma
                                                                         "db_max")
                                                                        (("1"
                                                                          (inst?)
                                                                          (("1"
                                                                            (replace
                                                                             -1)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (expand
                                                                                 "trace_semantic_rel"
                                                                                 3)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (inst
                                                                                     3
                                                                                     "fs")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "DLBOOL")
                                                                                      (("1"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (lemma
                                                                                       "solution_odes_subset")
                                                                                      (("2"
                                                                                        (inst
                                                                                         -1
                                                                                         "hp(0)"
                                                                                         "f"
                                                                                         "x!1"
                                                                                         "fs"
                                                                                         "closed_interval(0,t)")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "hp")
                                                                                            (("1"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (expand
                                                                                           "closed_interval")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "hp")
                                                                                            (("2"
                                                                                              (skeep)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("3"
                                                                                          (expand
                                                                                           "dd?")
                                                                                          (("3"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (expand
                                                               "finite_trace?")
                                                              (("2"
                                                                (expand
                                                                 "last")
                                                                (("2"
                                                                  (expand
                                                                   "wf_trace?")
                                                                  (("2"
                                                                    (expand
                                                                     "nth")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (skeep)
                                                                        (("2"
                                                                          (typepred
                                                                           "i")
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("3"
                                                              (expand
                                                               "solution_odes_u?")
                                                              (("3"
                                                                (expand
                                                                 "solution_odes?")
                                                                (("3"
                                                                  (flatten)
                                                                  (("3"
                                                                    (typepred
                                                                     "env_at_t(f, fs, x!1)(0)")
                                                                    (("3"
                                                                      (inst
                                                                       -2
                                                                       "x!1")
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("4"
                                                              (expand
                                                               "dd?")
                                                              (("4"
                                                                (split)
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (inst?)
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (inst?)
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("5"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((DLAND const-decl "bool" bool_expr nil)
    (DLNOT const-decl "bool" bool_expr nil)
    (solution_odes_u_shift formula-decl nil solution_odes_props nil)
    (env_at_t_shift formula-decl nil solution_odes_props nil)
    (solution_odes? const-decl "bool" hp_expr nil)
    (INF_DIFF adt-constructor-decl
     "[[s0: Environment, {ib: [(hp(0)) -> Environment] | ib(0) = s0}] ->
   (inf_diff?)]" TraceState_adt nil)
    (derivable_odes? const-decl "bool" hp_expr nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (STATE_DIFF adt-constructor-decl
     "[[D: {D: (dd?) | EXISTS (b: posreal): D = closed_interval(0, b)},
  s0: Environment, {b: [(D) -> Environment] | b(0) = s0}] ->
   (state_diff?)]" TraceState_adt nil)
    (solution_odes_subset formula-decl nil ODEs_equiv nil)
    (solution_odes_u_init formula-decl nil solution_odes_props nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (STATE adt-constructor-decl "[Environment -> (state?)]"
     TraceState_adt nil)
    (length_singleton formula-decl nil more_list_props structures)
    (closed_interval const-decl "(closed_interval?(a, b))" interval_def
     ODEs)
    (D adt-accessor-decl "[(state_diff?) ->
   {D: (dd?) | EXISTS (b: posreal): D = closed_interval(0, b)}]"
     TraceState_adt nil)
    (env_at_t? const-decl "bool" hp_expr nil)
    (env_at_t const-decl "{env: (env_at_t?(odes, fs, envi, t)) |
   FORALL (env2: (env_at_t?(odes, fs, envi, t))): env = env2}" hp_expr
     nil)
    (solution_odes_u? const-decl "bool" hp_expr nil)
    (MapExprInj type-eq-decl nil hp_def nil)
    (not_in_map const-decl "bool" hp_def nil)
    (db_max formula-decl nil more_ci_props ODEs)
    (init_env const-decl "Environment" trace_semantics nil)
    (final_env const-decl "Environment" trace_semantics nil)
    (car adt-accessor-decl "[(cons?) -> T]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (inf_behavior adt-accessor-decl
     "[d: (inf_diff?) -> {ib: [(hp(0)) -> Environment] | ib(0) = s0(d)}]"
     TraceState_adt nil)
    (s0 shared-adt-accessor-decl
     "[{x: TraceState | inf_diff?(x) OR state_diff?(x)} -> Environment]"
     TraceState_adt nil)
    (state_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (inf_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (DLGE_nth formula-decl nil ltl_expr nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (last const-decl "T" more_list_props structures)
    (normDLGE const-decl "bool" ltl_expr nil)
    (ALLRUNS_tr const-decl "bool" ltl_expr nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (TraceState type-decl nil TraceState_adt nil)
    (DLBOOL const-decl "bool" bool_expr nil)
    (SOMERUNS_st const-decl "bool" ltl_expr nil)
    (hp const-decl "bool" interval_def ODEs)
    (dd? const-decl "bool" hp_expr nil)
    (DIFF adt-constructor-decl "[[ODEs, BoolExpr] -> (diff?)]" HP_adt
     nil)
    (diff? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (ODEs type-eq-decl nil hp_def nil)
    (mapexpr_inj const-decl "bool" hp_def nil)
    (list type-decl nil list_adt nil)
    (MapExpr type-eq-decl nil hp_def nil)
    (RealExpr type-eq-decl nil hp_def nil)
    (ALLRUNS_st const-decl "bool" ltl_expr nil)
    (HP type-decl nil HP_adt nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (Environment type-eq-decl nil hp_def nil)
    (DLOR const-decl "bool" bool_expr nil)
    (null_MapExprInj name-judgement "MapExprInj" hp_def nil))
   shostak))
 (dltl_DIFFGE_dual_eq 0
  (dltl_DIFFGE_dual_eq-1 nil 3901810486
   ("" (skeep)
    (("" (expand "DLOR")
      (("" (expand "DLAND")
        (("" (decompose-equality)
          (("" (iff)
            (("" (split)
              (("1" (flatten)
                (("1" (split)
                  (("1" (flatten)
                    (("1" (expand "SOMERUNS_tr")
                      (("1" (expand "normDLGE")
                        (("1" (inst 1 "(:STATE(x!1):)")
                          (("1" (expand "init_env")
                            (("1" (expand "trace_semantic_rel")
                              (("1"
                                (expand "finite_trace?")
                                (("1"
                                  (expand "final_env")
                                  (("1"
                                    (expand "last")
                                    (("1"
                                      (assert)
                                      (("1"
                                        (expand "nth")
                                        (("1" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (grind) nil nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (expand "SOMERUNS_st")
                    (("2" (expand "SOMERUNS_tr")
                      (("2" (skeep)
                        (("2" (expand "normDLGE")
                          (("2" (inst 1 "trace")
                            (("1" (assert) nil nil)
                             ("2" (expand "valid_trace?")
                              (("2" (propax) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("3" (flatten)
                    (("3" (expand "ALLRUNS_st")
                      (("3" (expand "SOMERUNS_st")
                        (("3" (expand "SOMERUNS_tr")
                          (("3" (typepred "f")
                            (("3" (hide -1)
                              (("3"
                                (expand "ODEs_s?")
                                (("3"
                                  (expand "ODEs_s?")
                                  (("3"
                                    (inst -1 "x!1")
                                    (("3"
                                      (skeep)
                                      (("3"
                                        (case
                                         "FORALL(t:(hp(0))): P(env_at_t(f,fs,x!1)(t))")
                                        (("1"
                                          (hide -3)
                                          (("1"
                                            (inst
                                             1
                                             "(:INF_DIFF(x!1,LAMBDA(t:(hp(0))):env_at_t(f, fs, x!1)(t)):)")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (expand "init_env" 1)
                                                (("1"
                                                  (expand "normDLGE" 1)
                                                  (("1"
                                                    (expand
                                                     "finite_trace?")
                                                    (("1"
                                                      (expand "last")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (expand
                                                           "nth")
                                                          (("1"
                                                            (split)
                                                            (("1"
                                                              (expand
                                                               "trace_semantic_rel"
                                                               1)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (inst
                                                                   1
                                                                   "fs")
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (lemma
                                                               "DLGE_nth")
                                                              (("2"
                                                                (inst?)
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (hide
                                                                     2)
                                                                    (("2"
                                                                      (skeep)
                                                                      (("2"
                                                                        (hide
                                                                         1)
                                                                        (("2"
                                                                          (inst
                                                                           1
                                                                           "0")
                                                                          (("1"
                                                                            (expand
                                                                             "nth")
                                                                            (("1"
                                                                              (typepred
                                                                               "j")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (skeep)
                                                                                  (("1"
                                                                                    (typepred
                                                                                     "T")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "hp"
                                                                                       -1)
                                                                                      (("1"
                                                                                        (case
                                                                                         "T=0")
                                                                                        (("1"
                                                                                          (inst
                                                                                           -6
                                                                                           "(:STATE(x!1):)")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "init_env")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "trace_semantic_rel"
                                                                                                 -6
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "DLBOOL")
                                                                                                    (("1"
                                                                                                      (skeep)
                                                                                                      (("1"
                                                                                                        (typepred
                                                                                                         "trace_1")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "finite_trace?")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "last")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "trace_semantic_rel"
                                                                                                               -9)
                                                                                                              (("1"
                                                                                                                (flatten)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "nth")
                                                                                                                    (("1"
                                                                                                                      (split
                                                                                                                       -2)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "final_env")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "last")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "nth")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   1
                                                                                                                                   "0")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "solution_odes_u?")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "solution_odes?")
                                                                                                                                      (("1"
                                                                                                                                        (flatten)
                                                                                                                                        (("1"
                                                                                                                                          (typepred
                                                                                                                                           "env_at_t(f, fs, x!1)(0)")
                                                                                                                                          (("1"
                                                                                                                                            (inst
                                                                                                                                             -2
                                                                                                                                             "x!1")
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (skeep)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "final_env")
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "last")
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "nth")
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (typepred
                                                                                                                                     "D(car(trace_1))")
                                                                                                                                    (("2"
                                                                                                                                      (skeep)
                                                                                                                                      (("2"
                                                                                                                                        (replace
                                                                                                                                         -2)
                                                                                                                                        (("2"
                                                                                                                                          (lemma
                                                                                                                                           "db_max")
                                                                                                                                          (("2"
                                                                                                                                            (inst?)
                                                                                                                                            (("2"
                                                                                                                                              (replace
                                                                                                                                               -1)
                                                                                                                                              (("2"
                                                                                                                                                (replace
                                                                                                                                                 -13)
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  (("2"
                                                                                                                                                    (replace
                                                                                                                                                     -11)
                                                                                                                                                    (("2"
                                                                                                                                                      (inst
                                                                                                                                                       1
                                                                                                                                                       "b")
                                                                                                                                                      (("1"
                                                                                                                                                        (case
                                                                                                                                                         "env_at_t(f, fs, x!1)(b) = env_at_t(f, fs!1, x!1)(b)")
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (typepred
                                                                                                                                                           "fs!1")
                                                                                                                                                          (("2"
                                                                                                                                                            (replace
                                                                                                                                                             -4)
                                                                                                                                                            (("2"
                                                                                                                                                              (replace
                                                                                                                                                               -12)
                                                                                                                                                              (("2"
                                                                                                                                                                (hide-all-but
                                                                                                                                                                 (-1
                                                                                                                                                                  -11
                                                                                                                                                                  1))
                                                                                                                                                                (("2"
                                                                                                                                                                  (typepred
                                                                                                                                                                   "env_at_t(f, fs, x!1)(b)")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (typepred
                                                                                                                                                                     "env_at_t(f, fs!1, x!1)(b)")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "env_at_t?")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (flatten)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (decompose-equality
                                                                                                                                                                           1)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (case
                                                                                                                                                                             "not_in_map(f)(x!2)")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (inst
                                                                                                                                                                               -2
                                                                                                                                                                               "x!2")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (inst
                                                                                                                                                                                 -5
                                                                                                                                                                                 "x!2")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (expand
                                                                                                                                                                               "not_in_map")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (skeep)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (inst
                                                                                                                                                                                   -3
                                                                                                                                                                                   "i")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (inst
                                                                                                                                                                                     -6
                                                                                                                                                                                     "i")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "solution_odes_u?")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (flatten)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (inst
                                                                                                                                                                                           -11
                                                                                                                                                                                           "fs!1"
                                                                                                                                                                                           "closed_interval(0,b)")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (inst
                                                                                                                                                                                               -11
                                                                                                                                                                                               "i"
                                                                                                                                                                                               "b")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                nil
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "closed_interval")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "hp")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (skeep)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (expand
                                                                                                                                                         "hp")
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (expand
                                                                                             "wf_trace?")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "finite_trace?")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "last")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "nth")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (skeep)
                                                                                                      (("2"
                                                                                                        (typepred
                                                                                                         "i")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (inst
                                                                                           -5
                                                                                           "(:STATE_DIFF(closed_interval(0,T),x!1,LAMBDA(r:(closed_interval(0,T))): env_at_t(f, fs, x!1)(r)):)")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "init_env")
                                                                                            (("1"
                                                                                              (split)
                                                                                              (("1"
                                                                                                (skeep)
                                                                                                (("1"
                                                                                                  (typepred
                                                                                                   "trace_1")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "finite_trace?")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "last")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "trace_semantic_rel")
                                                                                                        (("1"
                                                                                                          (split
                                                                                                           -4)
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "nth")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (split
                                                                                                                   -4)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "final_env")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "last")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "nth")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (lemma
                                                                                                                                 "db_max")
                                                                                                                                (("1"
                                                                                                                                  (inst?)
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (inst
                                                                                                                                       2
                                                                                                                                       "T")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (skeep)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "final_env")
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "last")
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "nth")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (typepred
                                                                                                                                 "D(car(trace_1))")
                                                                                                                                (("2"
                                                                                                                                  (skeep)
                                                                                                                                  (("2"
                                                                                                                                    (replace
                                                                                                                                     -2)
                                                                                                                                    (("2"
                                                                                                                                      (lemma
                                                                                                                                       "db_max")
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         -1
                                                                                                                                         "0"
                                                                                                                                         "b")
                                                                                                                                        (("2"
                                                                                                                                          (replace
                                                                                                                                           -1)
                                                                                                                                          (("2"
                                                                                                                                            (replace
                                                                                                                                             -6)
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (lemma
                                                                                                                                                 "db_max")
                                                                                                                                                (("2"
                                                                                                                                                  (inst
                                                                                                                                                   -1
                                                                                                                                                   "0"
                                                                                                                                                   "T")
                                                                                                                                                  (("2"
                                                                                                                                                    (replace
                                                                                                                                                     -1)
                                                                                                                                                    (("2"
                                                                                                                                                      (replace
                                                                                                                                                       -10)
                                                                                                                                                      (("2"
                                                                                                                                                        (typepred
                                                                                                                                                         "fs!1")
                                                                                                                                                        (("2"
                                                                                                                                                          (replace
                                                                                                                                                           -5)
                                                                                                                                                          (("2"
                                                                                                                                                            (replace
                                                                                                                                                             -11)
                                                                                                                                                            (("2"
                                                                                                                                                              (lemma
                                                                                                                                                               "solution_odes_u_init")
                                                                                                                                                              (("2"
                                                                                                                                                                (inst
                                                                                                                                                                 -1
                                                                                                                                                                 "f"
                                                                                                                                                                 "fs"
                                                                                                                                                                 "fs!1"
                                                                                                                                                                 "x!1"
                                                                                                                                                                 "closed_interval(0,b)"
                                                                                                                                                                 "b"
                                                                                                                                                                 "T")
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (replace
                                                                                                                                                                     -1)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst
                                                                                                                                                                       2
                                                                                                                                                                       "T+b")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "hp")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (flatten)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (expand
                                                                                                 "trace_semantic_rel")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "DLBOOL")
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       1
                                                                                                       "fs")
                                                                                                      (("2"
                                                                                                        (lemma
                                                                                                         "solution_odes_subset")
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -1
                                                                                                           "hp(0)"
                                                                                                           "f"
                                                                                                           "x!1"
                                                                                                           "fs"
                                                                                                           "closed_interval(0, T)")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (expand
                                                                                                             "closed_interval")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "hp")
                                                                                                              (("2"
                                                                                                                (skeep)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide-all-but
                                                                                             1)
                                                                                            (("2"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("3"
                                                                                            (expand
                                                                                             "solution_odes_u?")
                                                                                            (("3"
                                                                                              (expand
                                                                                               "solution_odes?")
                                                                                              (("3"
                                                                                                (flatten)
                                                                                                (("3"
                                                                                                  (typepred
                                                                                                   "env_at_t(f, fs, x!1)(0)")
                                                                                                  (("3"
                                                                                                    (inst
                                                                                                     -2
                                                                                                     "x!1")
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("4"
                                                                                            (expand
                                                                                             "dd?")
                                                                                            (("4"
                                                                                              (split)
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (inst?)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (inst?)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("5"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (typepred
                                                                               "j")
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (hide-all-but 1)
                                              (("2" (grind) nil nil))
                                              nil)
                                             ("3"
                                              (expand
                                               "solution_odes_u?")
                                              (("3"
                                                (expand
                                                 "solution_odes?")
                                                (("3"
                                                  (flatten)
                                                  (("3"
                                                    (typepred
                                                     "env_at_t(f, fs, x!1)(0)")
                                                    (("3"
                                                      (inst -2 "x!1")
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (skeep)
                                          (("2"
                                            (hide-all-but (-1 -2 1))
                                            (("2"
                                              (case "t=0")
                                              (("1"
                                                (inst
                                                 -3
                                                 "(:STATE(env_at_t(f, fs, x!1)(t)):)")
                                                (("1"
                                                  (expand "init_env")
                                                  (("1"
                                                    (replace -1)
                                                    (("1"
                                                      (expand
                                                       "final_env")
                                                      (("1"
                                                        (expand "last")
                                                        (("1"
                                                          (expand
                                                           "nth")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (expand
                                                               "trace_semantic_rel")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (expand
                                                                   "DLBOOL")
                                                                  (("1"
                                                                    (expand
                                                                     "solution_odes_u?")
                                                                    (("1"
                                                                      (expand
                                                                       "solution_odes?")
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (typepred
                                                                           "env_at_t(f, fs, x!1)(0)")
                                                                          (("1"
                                                                            (inst
                                                                             -2
                                                                             "x!1")
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide-all-but 1)
                                                  (("2"
                                                    (grind)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (typepred "t")
                                                (("2"
                                                  (expand "hp" -1)
                                                  (("2"
                                                    (inst
                                                     -3
                                                     "(: STATE_DIFF(closed_interval(0,t),x!1,LAMBDA(r:(closed_interval(0,t))): env_at_t(f, fs, x!1)(r)):)")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (expand
                                                         "final_env")
                                                        (("1"
                                                          (expand
                                                           "init_env")
                                                          (("1"
                                                            (expand
                                                             "last")
                                                            (("1"
                                                              (expand
                                                               "nth")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (lemma
                                                                   "db_max")
                                                                  (("1"
                                                                    (inst?)
                                                                    (("1"
                                                                      (replace
                                                                       -1)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (expand
                                                                           "trace_semantic_rel"
                                                                           3)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (expand
                                                                               "DLBOOL")
                                                                              (("1"
                                                                                (inst
                                                                                 3
                                                                                 "fs")
                                                                                (("1"
                                                                                  (lemma
                                                                                   "solution_odes_subset")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -1
                                                                                     "hp(0)"
                                                                                     "f"
                                                                                     "x!1"
                                                                                     "fs"
                                                                                     "closed_interval(0, t)")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil)
                                                                                     ("2"
                                                                                      (expand
                                                                                       "closed_interval")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "hp")
                                                                                        (("2"
                                                                                          (skeep)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide-all-but 1)
                                                      (("2"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("3"
                                                      (expand
                                                       "solution_odes_u?")
                                                      (("3"
                                                        (expand
                                                         "solution_odes?")
                                                        (("3"
                                                          (flatten)
                                                          (("3"
                                                            (typepred
                                                             "env_at_t(f, fs, x!1)(0)")
                                                            (("3"
                                                              (inst
                                                               -2
                                                               "x!1")
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("4"
                                                      (expand "dd?")
                                                      (("4"
                                                        (split)
                                                        (("1"
                                                          (flatten)
                                                          (("1"
                                                            (inst?)
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (inst?)
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("5"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (flatten)
                (("2" (expand "SOMERUNS_st")
                  (("2" (expand "ALLRUNS_st")
                    (("2" (expand "SOMERUNS_tr" -1)
                      (("2" (skeep)
                        (("2" (expand "normDLGE" -3)
                          (("2" (split)
                            (("1" (flatten)
                              (("1"
                                (inst 2 "trace")
                                (("1" (assert) nil nil))
                                nil))
                              nil)
                             ("2" (flatten)
                              (("2"
                                (hide 2 3)
                                (("2"
                                  (expand "finite_trace?")
                                  (("2"
                                    (expand "last")
                                    (("2"
                                      (flatten)
                                      (("2"
                                        (expand
                                         "trace_semantic_rel"
                                         -3)
                                        (("2"
                                          (split -3)
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (expand "nth")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (hide 1 2)
                                                      (("1"
                                                        (skeep)
                                                        (("1"
                                                          (split 1)
                                                          (("1"
                                                            (skeep)
                                                            (("1"
                                                              (typepred
                                                               "trace!1")
                                                              (("1"
                                                                (expand
                                                                 "finite_trace?")
                                                                (("1"
                                                                  (expand
                                                                   "last")
                                                                  (("1"
                                                                    (expand
                                                                     "trace_semantic_rel")
                                                                    (("1"
                                                                      (split
                                                                       -4)
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (expand
                                                                           "nth")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (split
                                                                               -4)
                                                                              (("1"
                                                                                (expand
                                                                                 "final_env")
                                                                                (("1"
                                                                                  (expand
                                                                                   "last")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "nth")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "init_env")
                                                                                      (("1"
                                                                                        (typepred
                                                                                         "inf_behavior(car(trace))")
                                                                                        (("1"
                                                                                          (replace
                                                                                           -9)
                                                                                          (("1"
                                                                                            (inst
                                                                                             -10
                                                                                             "0")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (skeep)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "final_env")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "last")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "nth")
                                                                                        (("2"
                                                                                          (typepred
                                                                                           "D(car(trace!1))")
                                                                                          (("2"
                                                                                            (skeep)
                                                                                            (("2"
                                                                                              (replace
                                                                                               -2)
                                                                                              (("2"
                                                                                                (lemma
                                                                                                 "db_max")
                                                                                                (("2"
                                                                                                  (inst?)
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       -12)
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         -6)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "init_env")
                                                                                                            (("2"
                                                                                                              (replace
                                                                                                               -15)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -9)
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -13
                                                                                                                   "b")
                                                                                                                  (("1"
                                                                                                                    (case
                                                                                                                     "env_at_t(f, fs, x!1)(b) = env_at_t(f, fs!1, x!1)(b)")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (typepred
                                                                                                                       "fs")
                                                                                                                      (("2"
                                                                                                                        (typepred
                                                                                                                         "fs!1")
                                                                                                                        (("2"
                                                                                                                          (replace
                                                                                                                           -5)
                                                                                                                          (("2"
                                                                                                                            (replace
                                                                                                                             -11)
                                                                                                                            (("2"
                                                                                                                              (replace
                                                                                                                               -17)
                                                                                                                              (("2"
                                                                                                                                (hide-all-but
                                                                                                                                 (-1
                                                                                                                                  -2
                                                                                                                                  1))
                                                                                                                                (("2"
                                                                                                                                  (typepred
                                                                                                                                   "env_at_t(f, fs, x!1)(b)")
                                                                                                                                  (("2"
                                                                                                                                    (typepred
                                                                                                                                     "env_at_t(f, fs!1, x!1)(b)")
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "env_at_t?")
                                                                                                                                      (("2"
                                                                                                                                        (flatten)
                                                                                                                                        (("2"
                                                                                                                                          (decompose-equality
                                                                                                                                           1)
                                                                                                                                          (("2"
                                                                                                                                            (case
                                                                                                                                             "not_in_map(f)(x!2)")
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               -2
                                                                                                                                               "x!2")
                                                                                                                                              (("1"
                                                                                                                                                (inst
                                                                                                                                                 -5
                                                                                                                                                 "x!2")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (expand
                                                                                                                                               "not_in_map")
                                                                                                                                              (("2"
                                                                                                                                                (skeep)
                                                                                                                                                (("2"
                                                                                                                                                  (inst
                                                                                                                                                   -3
                                                                                                                                                   "i")
                                                                                                                                                  (("2"
                                                                                                                                                    (inst
                                                                                                                                                     -6
                                                                                                                                                     "i")
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "solution_odes_u?")
                                                                                                                                                      (("2"
                                                                                                                                                        (flatten)
                                                                                                                                                        (("2"
                                                                                                                                                          (inst
                                                                                                                                                           -11
                                                                                                                                                           "fs!1"
                                                                                                                                                           "closed_interval(0,b)")
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            (("1"
                                                                                                                                                              (inst
                                                                                                                                                               -11
                                                                                                                                                               "i"
                                                                                                                                                               "b")
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (expand
                                                                                                                                                             "closed_interval")
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "hp")
                                                                                                                                                              (("2"
                                                                                                                                                                (skeep)
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (expand
                                                                                                                     "hp")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (skeep)
                                                            (("2"
                                                              (typepred
                                                               "trace_1")
                                                              (("2"
                                                                (expand
                                                                 "finite_trace?")
                                                                (("2"
                                                                  (expand
                                                                   "last")
                                                                  (("2"
                                                                    (expand
                                                                     "trace_semantic_rel"
                                                                     -4)
                                                                    (("2"
                                                                      (split
                                                                       -4)
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (expand
                                                                             "nth")
                                                                            (("1"
                                                                              (split
                                                                               -4)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (expand
                                                                                   "init_env")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "final_env"
                                                                                     1
                                                                                     1)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "last")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "nth")
                                                                                        (("1"
                                                                                          (replace
                                                                                           -5)
                                                                                          (("1"
                                                                                            (lemma
                                                                                             "DLGE_nth")
                                                                                            (("1"
                                                                                              (inst?)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -1
                                                                                                   "0")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "nth")
                                                                                                    (("1"
                                                                                                      (skeep)
                                                                                                      (("1"
                                                                                                        (replace
                                                                                                         -9)
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -12)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -1
                                                                                                               "0")
                                                                                                              (("1"
                                                                                                                (skeep)
                                                                                                                (("1"
                                                                                                                  (typepred
                                                                                                                   "t")
                                                                                                                  (("1"
                                                                                                                    (case
                                                                                                                     "t=0")
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       1
                                                                                                                       "(:STATE(x!1):)")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "trace_semantic_rel"
                                                                                                                           1)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "final_env")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "last")
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "nth")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (typepred
                                                                                                                                       "env_at_t(f, fs, x!1)(0)")
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         -2
                                                                                                                                         "x!1")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (typepred
                                                                                                                                           "fs")
                                                                                                                                          (("2"
                                                                                                                                            (replace
                                                                                                                                             -17)
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "solution_odes_u?")
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "solution_odes?")
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (expand
                                                                                                                         "finite_trace?")
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "last")
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "wf_trace?")
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "nth")
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (skeep)
                                                                                                                                  (("2"
                                                                                                                                    (typepred
                                                                                                                                     "i!1")
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (inst
                                                                                                                       2
                                                                                                                       "(:STATE_DIFF(closed_interval(0,t),x!1,LAMBDA(r:(closed_interval(0,t))): env_at_t(f, fs, x!1)(r)):)")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "final_env")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "last")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "nth")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (lemma
                                                                                                                                   "db_max")
                                                                                                                                  (("1"
                                                                                                                                    (inst?)
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "trace_semantic_rel"
                                                                                                                                         2)
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "DLBOOL")
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               2
                                                                                                                                               "fs")
                                                                                                                                              (("1"
                                                                                                                                                (typepred
                                                                                                                                                 "fs")
                                                                                                                                                (("1"
                                                                                                                                                  (replace
                                                                                                                                                   -15)
                                                                                                                                                  (("1"
                                                                                                                                                    (lemma
                                                                                                                                                     "solution_odes_subset")
                                                                                                                                                    (("1"
                                                                                                                                                      (inst
                                                                                                                                                       -1
                                                                                                                                                       "hp(0)"
                                                                                                                                                       "f"
                                                                                                                                                       "x!1"
                                                                                                                                                       "fs"
                                                                                                                                                       "closed_interval(0, t)")
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (expand
                                                                                                                                                         "closed_interval")
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "hp")
                                                                                                                                                          (("2"
                                                                                                                                                            (skeep)
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (expand
                                                                                                                         "finite_trace?")
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "last")
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "wf_trace?")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "nth")
                                                                                                                                (("2"
                                                                                                                                  (skeep)
                                                                                                                                  (("2"
                                                                                                                                    (typepred
                                                                                                                                     "i!1")
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("3"
                                                                                                                        (typepred
                                                                                                                         "fs")
                                                                                                                        (("3"
                                                                                                                          (replace
                                                                                                                           -15)
                                                                                                                          (("3"
                                                                                                                            (expand
                                                                                                                             "solution_odes_u?")
                                                                                                                            (("3"
                                                                                                                              (expand
                                                                                                                               "solution_odes?")
                                                                                                                              (("3"
                                                                                                                                (flatten)
                                                                                                                                (("3"
                                                                                                                                  (typepred
                                                                                                                                   "env_at_t(f, fs, x!1)(0)")
                                                                                                                                  (("3"
                                                                                                                                    (inst
                                                                                                                                     -2
                                                                                                                                     "x!1")
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("4"
                                                                                                                        (expand
                                                                                                                         "dd?")
                                                                                                                        (("4"
                                                                                                                          (split)
                                                                                                                          (("1"
                                                                                                                            (flatten)
                                                                                                                            (("1"
                                                                                                                              (inst?)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (inst?)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("5"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (expand
                                                                                                                 "hp")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (skeep)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "final_env"
                                                                                     1
                                                                                     1)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "last")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "nth")
                                                                                        (("2"
                                                                                          (typepred
                                                                                           "D(car(trace_1))")
                                                                                          (("2"
                                                                                            (skeep)
                                                                                            (("2"
                                                                                              (replace
                                                                                               -2)
                                                                                              (("2"
                                                                                                (lemma
                                                                                                 "db_max")
                                                                                                (("2"
                                                                                                  (inst?)
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       -6)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "init_env")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (replace
                                                                                                               -9)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -15)
                                                                                                                (("2"
                                                                                                                  (lemma
                                                                                                                   "DLGE_nth")
                                                                                                                  (("2"
                                                                                                                    (inst?)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (hide
                                                                                                                         -15)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -1
                                                                                                                           "0")
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "nth")
                                                                                                                            (("2"
                                                                                                                              (skeep)
                                                                                                                              (("2"
                                                                                                                                (inst
                                                                                                                                 -1
                                                                                                                                 "b")
                                                                                                                                (("1"
                                                                                                                                  (skeep)
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -13)
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (typepred
                                                                                                                                         "t")
                                                                                                                                        (("1"
                                                                                                                                          (case
                                                                                                                                           "t=b")
                                                                                                                                          (("1"
                                                                                                                                            (inst
                                                                                                                                             1
                                                                                                                                             "(:STATE(env_at_t(f, fs, x!1)(b)):)")
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "final_env")
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "last")
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "nth")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "trace_semantic_rel"
                                                                                                                                                         1)
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "DLBOOL")
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            (("1"
                                                                                                                                                              (typepred
                                                                                                                                                               "fs")
                                                                                                                                                              (("1"
                                                                                                                                                                (typepred
                                                                                                                                                                 "fs!1")
                                                                                                                                                                (("1"
                                                                                                                                                                  (replace
                                                                                                                                                                   -9)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (replace
                                                                                                                                                                     -20)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (replace
                                                                                                                                                                       -15)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (hide-all-but
                                                                                                                                                                         (-1
                                                                                                                                                                          -2
                                                                                                                                                                          1))
                                                                                                                                                                        (("1"
                                                                                                                                                                          (typepred
                                                                                                                                                                           "env_at_t(f, fs, x!1)(b)")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (typepred
                                                                                                                                                                             "env_at_t(f, fs!1, x!1)(b)")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (expand
                                                                                                                                                                               "env_at_t?")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (flatten)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (decompose-equality
                                                                                                                                                                                   1)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (case
                                                                                                                                                                                     "not_in_map(f)(x!2)")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       -2
                                                                                                                                                                                       "x!2")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (inst
                                                                                                                                                                                         -5
                                                                                                                                                                                         "x!2")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil)
                                                                                                                                                                                     ("2"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "not_in_map")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (skeep)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (inst
                                                                                                                                                                                           -3
                                                                                                                                                                                           "i!1")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (inst
                                                                                                                                                                                             -6
                                                                                                                                                                                             "i!1")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "solution_odes_u?")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (inst
                                                                                                                                                                                                   -11
                                                                                                                                                                                                   "fs!1"
                                                                                                                                                                                                   "closed_interval(0,b)")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (inst
                                                                                                                                                                                                       -11
                                                                                                                                                                                                       "i!1"
                                                                                                                                                                                                       "b")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        nil
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil)
                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                    (expand
                                                                                                                                                                                                     "closed_interval")
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "hp")
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (skeep)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (expand
                                                                                                                                               "finite_trace?")
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "last")
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "wf_trace?")
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "nth")
                                                                                                                                                    (("2"
                                                                                                                                                      (assert)
                                                                                                                                                      (("2"
                                                                                                                                                        (skeep)
                                                                                                                                                        (("2"
                                                                                                                                                          (typepred
                                                                                                                                                           "i!1")
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (inst
                                                                                                                                             2
                                                                                                                                             "(:STATE_DIFF(closed_interval(0,t-b),env_at_t(f, fs, x!1)(b),LAMBDA(r:(closed_interval(0,t-b))): env_at_t(f, fs, x!1)(r+b)):)")
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "final_env")
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "last")
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "nth")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (lemma
                                                                                                                                                         "db_max")
                                                                                                                                                        (("1"
                                                                                                                                                          (inst
                                                                                                                                                           -1
                                                                                                                                                           "0"
                                                                                                                                                           "t-b")
                                                                                                                                                          (("1"
                                                                                                                                                            (replace
                                                                                                                                                             -1)
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              (("1"
                                                                                                                                                                (split
                                                                                                                                                                 2)
                                                                                                                                                                (("1"
                                                                                                                                                                  (typepred
                                                                                                                                                                   "fs!1")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (typepred
                                                                                                                                                                     "fs")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (replace
                                                                                                                                                                       -20)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (replace
                                                                                                                                                                         -9)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (replace
                                                                                                                                                                           -15)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (hide-all-but
                                                                                                                                                                             (-1
                                                                                                                                                                              -2
                                                                                                                                                                              1))
                                                                                                                                                                            (("1"
                                                                                                                                                                              (typepred
                                                                                                                                                                               "env_at_t(f, fs, x!1)(b)")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (typepred
                                                                                                                                                                                 "env_at_t(f, fs!1, x!1)(b)")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "env_at_t?")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (flatten)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (decompose-equality
                                                                                                                                                                                       1)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (case
                                                                                                                                                                                         "not_in_map(f)(x!2)")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (inst
                                                                                                                                                                                           -2
                                                                                                                                                                                           "x!2")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (inst
                                                                                                                                                                                             -5
                                                                                                                                                                                             "x!2")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil)
                                                                                                                                                                                         ("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "not_in_map")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (skeep)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (inst
                                                                                                                                                                                               -3
                                                                                                                                                                                               "i!1")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (inst
                                                                                                                                                                                                 -6
                                                                                                                                                                                                 "i!1")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "solution_odes_u?")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (flatten)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (inst
                                                                                                                                                                                                       -9
                                                                                                                                                                                                       "fs!1"
                                                                                                                                                                                                       "closed_interval(0,b)")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (inst
                                                                                                                                                                                                           -9
                                                                                                                                                                                                           "i!1"
                                                                                                                                                                                                           "b")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                            nil
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil)
                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "closed_interval")
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "hp")
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (skeep)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "trace_semantic_rel"
                                                                                                                                                                   1)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "DLBOOL")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (lemma
                                                                                                                                                                         "env_at_t_shift")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (lemma
                                                                                                                                                                           "solution_odes_u_shift")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (inst
                                                                                                                                                                             -1
                                                                                                                                                                             "f"
                                                                                                                                                                             "fs"
                                                                                                                                                                             "x!1"
                                                                                                                                                                             "b")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (lemma
                                                                                                                                                                                 "solution_odes_subset")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (inst
                                                                                                                                                                                   -1
                                                                                                                                                                                   "hp(0)"
                                                                                                                                                                                   "f"
                                                                                                                                                                                   "env_at_t(f, fs, x!1)(b)"
                                                                                                                                                                                   "LAMBDA (i: below(length(f))): LAMBDA (t: real): fs(i)(t + b)"
                                                                                                                                                                                   "closed_interval(0, t-b)")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       1
                                                                                                                                                                                       "LAMBDA (i: below(length(f))): LAMBDA (t: real): fs(i)(t + b)")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (inst
                                                                                                                                                                                         -3
                                                                                                                                                                                         "f"
                                                                                                                                                                                         "fs"
                                                                                                                                                                                         "x!1"
                                                                                                                                                                                         "b"
                                                                                                                                                                                         _)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (decompose-equality
                                                                                                                                                                                           1)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (inst
                                                                                                                                                                                             -3
                                                                                                                                                                                             "x!2")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil)
                                                                                                                                                                                             ("2"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "hp")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (typepred
                                                                                                                                                                                                 "x!2")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "closed_interval")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    nil
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (skeep)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (inst
                                                                                                                                                                                               -3
                                                                                                                                                                                               "r_1")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                nil
                                                                                                                                                                                                nil)
                                                                                                                                                                                               ("2"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "hp")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (typepred
                                                                                                                                                                                                   "r_1")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (expand
                                                                                                                                                                                                     "closed_interval")
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil)
                                                                                                                                                                                         ("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "hp")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil)
                                                                                                                                                                                   ("2"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "dd?")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (split)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (flatten)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (inst
                                                                                                                                                                                           1
                                                                                                                                                                                           "t-b")
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "hp")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "closed_interval")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (skeep)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (expand
                                                                                                                                                                               "hp")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (expand
                                                                                                                                               "finite_trace?")
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "last")
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "wf_trace?")
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "nth")
                                                                                                                                                    (("2"
                                                                                                                                                      (assert)
                                                                                                                                                      (("2"
                                                                                                                                                        (skeep)
                                                                                                                                                        (("2"
                                                                                                                                                          (typepred
                                                                                                                                                           "i!1")
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("3"
                                                                                                                                              (expand
                                                                                                                                               "dd?")
                                                                                                                                              (("3"
                                                                                                                                                (split)
                                                                                                                                                (("1"
                                                                                                                                                  (flatten)
                                                                                                                                                  (("1"
                                                                                                                                                    (inst
                                                                                                                                                     1
                                                                                                                                                     "t-b")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (inst
                                                                                                                                                   1
                                                                                                                                                   "t-b")
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("4"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (expand
                                                                                                                                   "hp")
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (flatten)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (typepred "trace")
                                                (("2"
                                                  (expand
                                                   "valid_trace?")
                                                  (("2"
                                                    (expand
                                                     "finite_trace?")
                                                    (("2"
                                                      (expand "last")
                                                      (("2"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((DLOR const-decl "bool" bool_expr nil)
    (Environment type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (HP type-decl nil HP_adt nil)
    (SOMERUNS_st const-decl "bool" ltl_expr nil)
    (RealExpr type-eq-decl nil hp_def nil)
    (MapExpr type-eq-decl nil hp_def nil)
    (list type-decl nil list_adt nil)
    (mapexpr_inj const-decl "bool" hp_def nil)
    (ODEs type-eq-decl nil hp_def nil)
    (diff? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (DIFF adt-constructor-decl "[[ODEs, BoolExpr] -> (diff?)]" HP_adt
     nil)
    (dd? const-decl "bool" hp_expr nil)
    (hp const-decl "bool" interval_def ODEs)
    (ALLRUNS_st const-decl "bool" ltl_expr nil)
    (DLBOOL const-decl "bool" bool_expr nil)
    (TraceState type-decl nil TraceState_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (SOMERUNS_tr const-decl "bool" ltl_expr nil)
    (normDLGE const-decl "bool" ltl_expr nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (STATE adt-constructor-decl "[Environment -> (state?)]"
     TraceState_adt nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (final_env const-decl "Environment" trace_semantics nil)
    (length_singleton formula-decl nil more_list_props structures)
    (last const-decl "T" more_list_props structures)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (init_env const-decl "Environment" trace_semantics nil)
    (DLGE_nth formula-decl nil ltl_expr nil)
    (STATE_DIFF adt-constructor-decl
     "[[D: {D: (dd?) | EXISTS (b: posreal): D = closed_interval(0, b)},
  s0: Environment, {b: [(D) -> Environment] | b(0) = s0}] ->
   (state_diff?)]" TraceState_adt nil)
    (solution_odes_u_init formula-decl nil solution_odes_props nil)
    (solution_odes_subset formula-decl nil ODEs_equiv nil)
    (solution_odes? const-decl "bool" hp_expr nil)
    (db_max formula-decl nil more_ci_props ODEs)
    (not_in_map const-decl "bool" hp_def nil)
    (MapExprInj type-eq-decl nil hp_def nil)
    (s0 shared-adt-accessor-decl
     "[{x: TraceState | inf_diff?(x) OR state_diff?(x)} -> Environment]"
     TraceState_adt nil)
    (car adt-accessor-decl "[(cons?) -> T]" list_adt nil)
    (D adt-accessor-decl "[(state_diff?) ->
   {D: (dd?) | EXISTS (b: posreal): D = closed_interval(0, b)}]"
     TraceState_adt nil)
    (closed_interval const-decl "(closed_interval?(a, b))" interval_def
     ODEs)
    (state_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (solution_odes_u? const-decl "bool" hp_expr nil)
    (INF_DIFF adt-constructor-decl
     "[[s0: Environment, {ib: [(hp(0)) -> Environment] | ib(0) = s0}] ->
   (inf_diff?)]" TraceState_adt nil)
    (inf_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (derivable_odes? const-decl "bool" hp_expr nil)
    (env_at_t const-decl "{env: (env_at_t?(odes, fs, envi, t)) |
   FORALL (env2: (env_at_t?(odes, fs, envi, t))): env = env2}" hp_expr
     nil)
    (env_at_t? const-decl "bool" hp_expr nil)
    (inf_behavior adt-accessor-decl
     "[d: (inf_diff?) -> {ib: [(hp(0)) -> Environment] | ib(0) = s0(d)}]"
     TraceState_adt nil)
    (solution_odes_u_shift formula-decl nil solution_odes_props nil)
    (env_at_t_shift formula-decl nil solution_odes_props nil)
    (DLAND const-decl "bool" bool_expr nil)
    (null_MapExprInj name-judgement "MapExprInj" hp_def nil))
   shostak))
 (dltl_BSTARcap_eq 0
  (dltl_BSTARcap_eq-1 nil 3899895270
   ("" (skeep*)
    (("" (decompose-equality 1)
      (("" (iff)
        (("" (split 1)
          (("1" (flatten)
            (("1" (induct "i")
              (("1" (expand "ALLRUNS_tr" 1)
                (("1" (skeep)
                  (("1" (inst -3 "0")
                    (("1" (expand "DLAND" -3)
                      (("1" (flatten)
                        (("1" (hide -5)
                          (("1" (expand "BSTAR" -2)
                            (("1" (expand "trace_semantic_rel" -2)
                              (("1"
                                (split -2)
                                (("1"
                                  (flatten)
                                  (("1"
                                    (expand "normDLGLOBALLY" 1)
                                    (("1"
                                      (case
                                       "DLGLOBALLY(State_Trace(Q))(trace)")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (hide -1)
                                          (("1"
                                            (split 1)
                                            (("1"
                                              (flatten)
                                              (("1" (grind) nil nil))
                                              nil)
                                             ("2" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (assert)
                                        (("2"
                                          (lemma "DLGLOBALLY_FORALL")
                                          (("2"
                                            (inst?)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (hide 2)
                                                (("2"
                                                  (skeep)
                                                  (("2"
                                                    (case "i=0")
                                                    (("1"
                                                      (replace -1)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide 2 3 4 5)
                                                      (("2"
                                                        (typepred "i")
                                                        (("2"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten)
                                  (("2"
                                    (typepred "trace")
                                    (("2" (grind) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (skeep)
                (("2" (expand "BSTAR" 1)
                  (("2" (expand "ALLRUNS_tr" 1)
                    (("2" (skeep)
                      (("2" (expand "trace_semantic_rel" -3)
                        (("2" (assert)
                          (("2"
                            (case " trace_semantic_rel(BSTAR(A, j))(trace)")
                            (("1" (expand "ALLRUNS_tr" -2)
                              (("1"
                                (assert)
                                (("1"
                                  (inst -2 "trace")
                                  (("1" (assert) nil nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (assert)
                              (("2"
                                (lemma
                                 "trace_semantic_rel_bounded_star_seq_switch_glob")
                                (("2"
                                  (inst?)
                                  (("2"
                                    (inst -1 "A" "j")
                                    (("2"
                                      (assert)
                                      (("2"
                                        (skeep)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (hide 3)
                                            (("2"
                                              (hide -5)
                                              (("2"
                                                (replace -2 -4 lr)
                                                (("2"
                                                  (hide -2)
                                                  (("2"
                                                    (inst-cp -4 "j")
                                                    (("2"
                                                      (expand
                                                       "DLAND"
                                                       -5)
                                                      (("2"
                                                        (flatten)
                                                        (("2"
                                                          (expand
                                                           "trace_semantic_rel"
                                                           -1)
                                                          (("2"
                                                            (split -1)
                                                            (("1"
                                                              (skeep)
                                                              (("1"
                                                                (expand
                                                                 "ALLRUNS_tr"
                                                                 -6)
                                                                (("1"
                                                                  (inst
                                                                   -6
                                                                   "trace1")
                                                                  (("1"
                                                                    (expand
                                                                     "ALLRUNS_st"
                                                                     -11)
                                                                    (("1"
                                                                      (inst
                                                                       -11
                                                                       "trace1")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (case
                                                                           "init_env(trace1) = x!1")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (expand
                                                                               "ALLRUNS_tr"
                                                                               -12)
                                                                              (("1"
                                                                                (inst
                                                                                 -12
                                                                                 "trace2")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (label
                                                                                     "tbtar"
                                                                                     2)
                                                                                    (("1"
                                                                                      (hide
                                                                                       "tbtar")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "normDLGLOBALLY")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (case
                                                                                             "NOT DLGLOBALLY(State_Trace(Q))(tr1)")
                                                                                            (("1"
                                                                                              (hide
                                                                                               2)
                                                                                              (("1"
                                                                                                (hide
                                                                                                 -9)
                                                                                                (("1"
                                                                                                  (case
                                                                                                   "NOT DLGLOBALLY(State_Trace(Q))(trace2)")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide
                                                                                                     -12)
                                                                                                    (("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (lemma
                                                                                                           "DLGLOBALLY_FORALL")
                                                                                                          (("2"
                                                                                                            (inst?)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (hide
                                                                                                                 -2)
                                                                                                                (("2"
                                                                                                                  (lemma
                                                                                                                   "DLGLOBALLY_FORALL")
                                                                                                                  (("2"
                                                                                                                    (inst?)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (hide
                                                                                                                         2)
                                                                                                                        (("2"
                                                                                                                          (lemma
                                                                                                                           "DLGLOBALLY_FORALL")
                                                                                                                          (("2"
                                                                                                                            (inst?)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (hide
                                                                                                                                 -5)
                                                                                                                                (("2"
                                                                                                                                  (skeep)
                                                                                                                                  (("2"
                                                                                                                                    (lemma
                                                                                                                                     "nth_append[TraceState]")
                                                                                                                                    (("2"
                                                                                                                                      (inst?
                                                                                                                                       -1)
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         -1
                                                                                                                                         "i")
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (typepred
                                                                                                                                             "i")
                                                                                                                                            (("2"
                                                                                                                                              (lemma
                                                                                                                                               "length_append[TraceState]")
                                                                                                                                              (("2"
                                                                                                                                                (inst?
                                                                                                                                                 -1)
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  (("2"
                                                                                                                                                    (lift-if
                                                                                                                                                     -3)
                                                                                                                                                    (("2"
                                                                                                                                                      (split
                                                                                                                                                       -3)
                                                                                                                                                      (("1"
                                                                                                                                                        (flatten)
                                                                                                                                                        (("1"
                                                                                                                                                          (inst
                                                                                                                                                           -5
                                                                                                                                                           "i")
                                                                                                                                                          (("1"
                                                                                                                                                            (split
                                                                                                                                                             -5)
                                                                                                                                                            (("1"
                                                                                                                                                              (grind)
                                                                                                                                                              nil
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (flatten)
                                                                                                                                                              (("2"
                                                                                                                                                                (grind)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("3"
                                                                                                                                                              (flatten)
                                                                                                                                                              (("3"
                                                                                                                                                                (assert)
                                                                                                                                                                (("3"
                                                                                                                                                                  (skeep)
                                                                                                                                                                  (("3"
                                                                                                                                                                    (inst
                                                                                                                                                                     -2
                                                                                                                                                                     "t")
                                                                                                                                                                    (("3"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("4"
                                                                                                                                                              (flatten)
                                                                                                                                                              (("4"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (flatten)
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          (("2"
                                                                                                                                                            (inst
                                                                                                                                                             -5
                                                                                                                                                             "i - length(trace1)")
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              (("2"
                                                                                                                                                                (split
                                                                                                                                                                 -5)
                                                                                                                                                                (("1"
                                                                                                                                                                  (flatten)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (grind)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (flatten)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (grind)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("3"
                                                                                                                                                                  (flatten)
                                                                                                                                                                  (("3"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("3"
                                                                                                                                                                      (skeep)
                                                                                                                                                                      (("3"
                                                                                                                                                                        (inst
                                                                                                                                                                         -2
                                                                                                                                                                         "t")
                                                                                                                                                                        (("3"
                                                                                                                                                                          (grind)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("4"
                                                                                                                                                                  (grind)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (split
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "finite_trace?(trace2)")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (case
                                                                                                         "final_env(trace2) = final_env(tr1)")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (hide
                                                                                                           -13)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "finite_trace?"
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (typepred
                                                                                                                 "tr1"
                                                                                                                 "trace2")
                                                                                                                (("2"
                                                                                                                  (hide
                                                                                                                   -2)
                                                                                                                  (("2"
                                                                                                                    (lemma
                                                                                                                     "last_append[TraceState]")
                                                                                                                    (("2"
                                                                                                                      (inst?)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "final_env")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (lift-if
                                                                                                                               1)
                                                                                                                              (("1"
                                                                                                                                (split
                                                                                                                                 1)
                                                                                                                                (("1"
                                                                                                                                  (flatten)
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (flatten)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (typepred
                                                                                                                         "trace2")
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "wf_trace?"
                                                                                                                           -1)
                                                                                                                          (("2"
                                                                                                                            (flatten)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (hide
                                                                                                         -12)
                                                                                                        (("2"
                                                                                                          (hide
                                                                                                           2)
                                                                                                          (("2"
                                                                                                            (lemma
                                                                                                             "last_append[TraceState]")
                                                                                                            (("2"
                                                                                                              (inst?)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "finite_trace?")
                                                                                                                  (("1"
                                                                                                                    (flatten)
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (typepred
                                                                                                                 "trace2")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "wf_trace?"
                                                                                                                   -1)
                                                                                                                  (("2"
                                                                                                                    (flatten)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (typepred
                                                                                   "trace2")
                                                                                  (("2"
                                                                                    (typepred
                                                                                     "tr1")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "valid_trace?"
                                                                                       1)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "valid_trace?"
                                                                                         -2)
                                                                                        (("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (lemma
                                                                                               "last_append[TraceState]")
                                                                                              (("2"
                                                                                                (inst?)
                                                                                                (("2"
                                                                                                  (split
                                                                                                   -3)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "finite_trace?")
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (expand
                                                                             "init_env"
                                                                             1)
                                                                            (("2"
                                                                              (hide
                                                                               -11)
                                                                              (("2"
                                                                                (hide
                                                                                 -8)
                                                                                (("2"
                                                                                  (case
                                                                                   "car(tr1)=car(trace1)")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "init_env"
                                                                                     -8)
                                                                                    (("1"
                                                                                      (lift-if
                                                                                       1)
                                                                                      (("1"
                                                                                        (split
                                                                                         1)
                                                                                        (("1"
                                                                                          (flatten)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (lemma
                                                                                     "car_append[TraceState]")
                                                                                    (("2"
                                                                                      (inst?)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil)
                                                                                       ("2"
                                                                                        (typepred
                                                                                         "trace1")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "wf_trace?"
                                                                                           -1)
                                                                                          (("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (typepred
                                                                     "tr1")
                                                                    (("2"
                                                                      (expand
                                                                       "valid_trace?")
                                                                      (("2"
                                                                        (lemma
                                                                         "last_append[TraceState]")
                                                                        (("2"
                                                                          (inst?)
                                                                          (("1"
                                                                            (hide
                                                                             -10)
                                                                            (("1"
                                                                              (grind)
                                                                              nil
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (typepred
                                                                             "trace2")
                                                                            (("2"
                                                                              (expand
                                                                               "wf_trace?"
                                                                               -1)
                                                                              (("2"
                                                                                (flatten)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (flatten)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (expand
                                                                   "ALLRUNS_tr")
                                                                  (("2"
                                                                    (inst
                                                                     -3
                                                                     "tr1")
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (flatten)
            (("2" (induct "i")
              (("1" (expand "DLAND" 1)
                (("1" (inst-cp -1 "0")
                  (("1" (expand "BSTAR" -2)
                    (("1" (expand "ALLRUNS_tr" -2)
                      (("1" (inst -2 "(: STATE( x!1) :)")
                        (("1" (assert)
                          (("1"
                            (case " init_env((: STATE(x!1) :)) = x!1 ")
                            (("1" (assert)
                              (("1"
                                (split -3)
                                (("1"
                                  (lemma "DLGLOBALLY_FORALL")
                                  (("1"
                                    (expand "normDLGLOBALLY" -2)
                                    (("1"
                                      (split -2)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (lemma "DLGLOBALLY_FORALL")
                                          (("1"
                                            (inst?)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (inst -1 "0")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (case
                                                     "NOT (P(x!1) AND Q(x!1))")
                                                    (("1"
                                                      (hide 2)
                                                      (("1"
                                                        (hide -5)
                                                        (("1"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (flatten)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (hide -3)
                                                          (("2"
                                                            (hide
                                                             -3
                                                             -4
                                                             -5)
                                                            (("2"
                                                              (inst
                                                               -5
                                                               "1")
                                                              (("2"
                                                                (expand
                                                                 "ALLRUNS_st"
                                                                 1)
                                                                (("2"
                                                                  (skeep)
                                                                  (("2"
                                                                    (expand
                                                                     "ALLRUNS_tr"
                                                                     1)
                                                                    (("2"
                                                                      (skeep)
                                                                      (("2"
                                                                        (expand
                                                                         "ALLRUNS_tr"
                                                                         -9)
                                                                        (("2"
                                                                          (expand
                                                                           "BSTAR"
                                                                           -9)
                                                                          (("2"
                                                                            (lemma
                                                                             "trace_semantic_rel_bounded_star_seq_switch_glob_con")
                                                                            (("2"
                                                                              (inst
                                                                               -1
                                                                               "A"
                                                                               "0"
                                                                               "append(trace,trace_1)"
                                                                               _
                                                                               _)
                                                                              (("1"
                                                                                (inst?)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (split
                                                                                     -1)
                                                                                    (("1"
                                                                                      (skeep)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (split
                                                                                           -4)
                                                                                          (("1"
                                                                                            (lemma
                                                                                             "normDLGLOBALLY_append")
                                                                                            (("1"
                                                                                              (inst?)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (typepred
                                                                                                   "trace"
                                                                                                   "trace_1")
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "wf_trace?")
                                                                                                    (("1"
                                                                                                      (flatten)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (split
                                                                                                           3)
                                                                                                          (("1"
                                                                                                            (lemma
                                                                                                             "length_append[TraceState]")
                                                                                                            (("1"
                                                                                                              (inst?)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "length"
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (lemma
                                                                                                             "car_append[TraceState]")
                                                                                                            (("2"
                                                                                                              (inst?)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("3"
                                                                                                            (skeep)
                                                                                                            (("3"
                                                                                                              (lemma
                                                                                                               "nth_append[TraceState]")
                                                                                                              (("3"
                                                                                                                (inst?)
                                                                                                                (("3"
                                                                                                                  (assert)
                                                                                                                  (("3"
                                                                                                                    (split
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (lift-if
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (split
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (flatten)
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -4
                                                                                                                             "i")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "finite_trace?"
                                                                                                                                 -4)
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "last"
                                                                                                                                   -4)
                                                                                                                                  (("2"
                                                                                                                                    (propax)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (flatten)
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             -6
                                                                                                                             "i-length(trace)")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (typepred
                                                                                                                                 "i")
                                                                                                                                (("2"
                                                                                                                                  (lemma
                                                                                                                                   "length_append[TraceState]")
                                                                                                                                  (("2"
                                                                                                                                    (inst?)
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (lemma
                                                                                                                       "length_append[TraceState]")
                                                                                                                      (("2"
                                                                                                                        (inst?)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide
                                                                                             2)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (hide
                                                                                                 2)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -11
                                                                                                   "tr1")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (lemma
                                                                                                       "car_append[TraceState]")
                                                                                                      (("2"
                                                                                                        (inst?)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "init_env"
                                                                                                           -3
                                                                                                           1)
                                                                                                          (("1"
                                                                                                            (split
                                                                                                             2)
                                                                                                            (("1"
                                                                                                              (hide
                                                                                                               -6)
                                                                                                              (("1"
                                                                                                                (grind)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (expand
                                                                                                               "trace_semantic_rel"
                                                                                                               1)
                                                                                                              (("2"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (typepred
                                                                                                           "trace")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "wf_trace?"
                                                                                                             -1)
                                                                                                            (("2"
                                                                                                              (flatten)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (expand
                                                                                       "trace_semantic_rel"
                                                                                       1)
                                                                                      (("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (inst
                                                                                             1
                                                                                             "trace"
                                                                                             "trace_1")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide
                                                                                 -3
                                                                                 -9)
                                                                                (("2"
                                                                                  (typepred
                                                                                   "trace"
                                                                                   "trace_1")
                                                                                  (("2"
                                                                                    (split
                                                                                     1)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "wf_trace?")
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (split
                                                                                           1)
                                                                                          (("1"
                                                                                            (lemma
                                                                                             "length_append[TraceState]")
                                                                                            (("1"
                                                                                              (inst?)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "length"
                                                                                                   -)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (lemma
                                                                                             "car_append[TraceState]")
                                                                                            (("2"
                                                                                              (inst?)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil)
                                                                                               ("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("3"
                                                                                            (skeep)
                                                                                            (("3"
                                                                                              (lemma
                                                                                               "length_append[TraceState]")
                                                                                              (("3"
                                                                                                (inst?)
                                                                                                (("3"
                                                                                                  (lemma
                                                                                                   "nth_append[TraceState]")
                                                                                                  (("3"
                                                                                                    (inst?)
                                                                                                    (("3"
                                                                                                      (assert)
                                                                                                      (("3"
                                                                                                        (lift-if
                                                                                                         -1)
                                                                                                        (("3"
                                                                                                          (split
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -5
                                                                                                               "i")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "finite_trace?"
                                                                                                                   -5)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "last"
                                                                                                                     -)
                                                                                                                    (("2"
                                                                                                                      (propax)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (flatten)
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -7
                                                                                                               "i-length(trace)")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (expand
                                                                                       "valid_trace?")
                                                                                      (("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (lemma
                                                                                             "last_append[TraceState]")
                                                                                            (("2"
                                                                                              (inst?)
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "wf_trace?"
                                                                                                   -4)
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "finite_trace?"
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (flatten)
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "finite_trace?"
                                                                                                                 -6)
                                                                                                                (("1"
                                                                                                                  (propax)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (expand
                                                                                                 "wf_trace?")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (flatten)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (hide 2)
                                            (("2"
                                              (hide -)
                                              (("2" (grind) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (hide 2)
                                  (("2"
                                    (hide -)
                                    (("2"
                                      (grind)
                                      (("2"
                                        (grind)
                                        (("2"
                                          (expand "trace_semantic_rel")
                                          (("2"
                                            (flatten)
                                            (("2" (grind) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide-all-but 1)
                              (("2" (grind) nil nil)) nil)
                             ("3" (expand "wf_trace?" 1)
                              (("3"
                                (hide-all-but 1)
                                (("3"
                                  (skeep)
                                  (("3"
                                    (typepred "i")
                                    (("3" (grind) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (hide-all-but 1) (("2" (grind) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (skeep)
                (("2" (expand "DLAND" 1)
                  (("2" (expand "DLAND" -1)
                    (("2" (flatten)
                      (("2" (assert)
                        (("2" (expand "ALLRUNS_st" 1)
                          (("2" (skeep)
                            (("2" (expand "ALLRUNS_st" -3)
                              (("2"
                                (expand "BSTAR" -5)
                                (("2"
                                  (expand "trace_semantic_rel" -5)
                                  (("2"
                                    (case
                                     " trace_semantic_rel(BSTAR(A, j))(trace)")
                                    (("1"
                                      (inst -4 "trace")
                                      (("1" (assert) nil nil))
                                      nil)
                                     ("2"
                                      (assert)
                                      (("2"
                                        (lemma
                                         "trace_semantic_rel_bounded_star_seq_switch_glob_con")
                                        (("2"
                                          (inst?)
                                          (("2"
                                            (expand "ALLRUNS_tr" 2)
                                            (("2"
                                              (skeep)
                                              (("2"
                                                (inst -9 "j+2")
                                                (("2"
                                                  (expand "BSTAR" -9)
                                                  (("2"
                                                    (expand
                                                     "BSTAR"
                                                     -9
                                                     1)
                                                    (("2"
                                                      (expand
                                                       "trace_semantic_rel"
                                                       -6)
                                                      (("2"
                                                        (split -6)
                                                        (("1"
                                                          (skeep)
                                                          (("1"
                                                            (inst
                                                             -6
                                                             "append(trace2,trace_1)"
                                                             "P"
                                                             "Q")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (split
                                                                 -6)
                                                                (("1"
                                                                  (skeep)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (split
                                                                       -4)
                                                                      (("1"
                                                                        (hide
                                                                         -12)
                                                                        (("1"
                                                                          (hide
                                                                           -15)
                                                                          (("1"
                                                                            (hide
                                                                             1)
                                                                            (("1"
                                                                              (lemma
                                                                               "normDLGLOBALLY_append")
                                                                              (("1"
                                                                                (inst?)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (hide
                                                                                     2)
                                                                                    (("1"
                                                                                      (typepred
                                                                                       "trace2"
                                                                                       "trace_1")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "wf_trace?")
                                                                                        (("1"
                                                                                          (flatten)
                                                                                          (("1"
                                                                                            (lemma
                                                                                             "length_append[TraceState]")
                                                                                            (("1"
                                                                                              (inst?)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (split
                                                                                                   3)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "length"
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (lemma
                                                                                                     "car_append[TraceState]")
                                                                                                    (("2"
                                                                                                      (inst?)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("3"
                                                                                                    (skeep)
                                                                                                    (("3"
                                                                                                      (lemma
                                                                                                       "nth_append[TraceState]")
                                                                                                      (("3"
                                                                                                        (inst?)
                                                                                                        (("3"
                                                                                                          (assert)
                                                                                                          (("3"
                                                                                                            (lift-if
                                                                                                             -1)
                                                                                                            (("3"
                                                                                                              (split
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (flatten)
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -5
                                                                                                                   "i")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (typepred
                                                                                                                     "trace")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "finite_trace?"
                                                                                                                       -2)
                                                                                                                      (("2"
                                                                                                                        (lemma
                                                                                                                         "last_append[TraceState]")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -1
                                                                                                                           "trace1"
                                                                                                                           "trace2")
                                                                                                                          (("2"
                                                                                                                            (replace
                                                                                                                             -19
                                                                                                                             -1
                                                                                                                             rl)
                                                                                                                            (("2"
                                                                                                                              (replace
                                                                                                                               -1)
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "last"
                                                                                                                                 -3)
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (flatten)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -6
                                                                                                                     "i-length(trace2)")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (expand
                                                                         "ALLRUNS_tr"
                                                                         -15)
                                                                        (("2"
                                                                          (inst
                                                                           -15
                                                                           "append(trace1,tr1)")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (split
                                                                               -14)
                                                                              (("1"
                                                                                (hide
                                                                                 2)
                                                                                (("1"
                                                                                  (hide
                                                                                   3)
                                                                                  (("1"
                                                                                    (hide
                                                                                     2)
                                                                                    (("1"
                                                                                      (lemma
                                                                                       "normDLGLOBALLY_append")
                                                                                      (("1"
                                                                                        (inst?)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (hide
                                                                                             -1
                                                                                             2)
                                                                                            (("1"
                                                                                              (typepred
                                                                                               "trace1"
                                                                                               "tr1")
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "length_append[TraceState]")
                                                                                                (("1"
                                                                                                  (inst?)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "wf_trace?")
                                                                                                    (("1"
                                                                                                      (split
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "length"
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (flatten)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (lemma
                                                                                                             "car_append[TraceState]")
                                                                                                            (("2"
                                                                                                              (inst?)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("3"
                                                                                                        (skeep)
                                                                                                        (("3"
                                                                                                          (assert)
                                                                                                          (("3"
                                                                                                            (typepred
                                                                                                             "i")
                                                                                                            (("3"
                                                                                                              (assert)
                                                                                                              (("3"
                                                                                                                (lemma
                                                                                                                 "nth_append[TraceState]")
                                                                                                                (("3"
                                                                                                                  (inst?)
                                                                                                                  (("3"
                                                                                                                    (assert)
                                                                                                                    (("3"
                                                                                                                      (lift-if
                                                                                                                       -1)
                                                                                                                      (("3"
                                                                                                                        (split
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (flatten)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               -6
                                                                                                                               "i")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (expand
                                                                                                                                 "finite_trace?"
                                                                                                                                 -13)
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "last"
                                                                                                                                   -13)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (flatten)
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             -7
                                                                                                                             "i-length(trace1)")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (expand
                                                                                 "init_env"
                                                                                 1
                                                                                 1)
                                                                                (("2"
                                                                                  (lemma
                                                                                   "car_append[TraceState]")
                                                                                  (("2"
                                                                                    (inst?)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -1)
                                                                                      (("1"
                                                                                        (replace
                                                                                         -8
                                                                                         -12)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "init_env"
                                                                                           -12)
                                                                                          (("1"
                                                                                            (lemma
                                                                                             "car_append[TraceState]")
                                                                                            (("1"
                                                                                              (inst
                                                                                               -1
                                                                                               "trace2"
                                                                                               "trace1")
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (typepred
                                                                                                   "trace1")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "wf_trace?"
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (typepred
                                                                                       "trace1")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "wf_trace?")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("3"
                                                                                (expand
                                                                                 "trace_semantic_rel"
                                                                                 1)
                                                                                (("3"
                                                                                  (flatten)
                                                                                  (("3"
                                                                                    (hide
                                                                                     2)
                                                                                    (("3"
                                                                                      (expand
                                                                                       "trace_semantic_rel"
                                                                                       1
                                                                                       1)
                                                                                      (("3"
                                                                                        (flatten)
                                                                                        (("3"
                                                                                          (hide
                                                                                           2)
                                                                                          (("3"
                                                                                            (inst
                                                                                             1
                                                                                             "trace1"
                                                                                             "tr1")
                                                                                            (("3"
                                                                                              (assert)
                                                                                              (("3"
                                                                                                (split
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "trace_semantic_rel"
                                                                                                   1
                                                                                                   1)
                                                                                                  (("1"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "init_env"
                                                                                                     -2
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (lemma
                                                                                                       "car_append[TraceState]")
                                                                                                      (("2"
                                                                                                        (inst?)
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "init_env"
                                                                                                               -7)
                                                                                                              (("1"
                                                                                                                (lift-if
                                                                                                                 -3)
                                                                                                                (("1"
                                                                                                                  (split
                                                                                                                   -3)
                                                                                                                  (("1"
                                                                                                                    (flatten)
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (flatten)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (typepred
                                                                                                           "trace2")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "wf_trace?")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide
                                                                             -11)
                                                                            (("2"
                                                                              (typepred
                                                                               "trace1"
                                                                               "tr1")
                                                                              (("2"
                                                                                (split
                                                                                 1)
                                                                                (("1"
                                                                                  (expand
                                                                                   "wf_trace?")
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (lemma
                                                                                       "length_append[TraceState]")
                                                                                      (("1"
                                                                                        (inst?)
                                                                                        (("1"
                                                                                          (split
                                                                                           1)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "length"
                                                                                             -1)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (lemma
                                                                                             "car_append[TraceState]")
                                                                                            (("2"
                                                                                              (inst?)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil)
                                                                                               ("2"
                                                                                                (typepred
                                                                                                 "trace1")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "wf_trace?")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("3"
                                                                                            (skeep)
                                                                                            (("3"
                                                                                              (typepred
                                                                                               "i")
                                                                                              (("3"
                                                                                                (lemma
                                                                                                 "nth_append[TraceState]")
                                                                                                (("3"
                                                                                                  (inst?)
                                                                                                  (("3"
                                                                                                    (assert)
                                                                                                    (("3"
                                                                                                      (lift-if
                                                                                                       -1)
                                                                                                      (("3"
                                                                                                        (split
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (flatten)
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -6
                                                                                                             "i")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (expand
                                                                                                               "finite_trace?"
                                                                                                               -13)
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "last"
                                                                                                                 -13)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (flatten)
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -7
                                                                                                             "i-length(trace1)")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (expand
                                                                                   "valid_trace?")
                                                                                  (("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (lemma
                                                                                       "last_append[TraceState]")
                                                                                      (("2"
                                                                                        (inst?)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "finite_trace?"
                                                                                             1)
                                                                                            (("1"
                                                                                              (flatten)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "finite_trace?"
                                                                                                   -4)
                                                                                                  (("1"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (typepred
                                                                                           "tr1")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "wf_trace?")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (expand
                                                                   "trace_semantic_rel"
                                                                   1
                                                                   1)
                                                                  (("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (inst
                                                                       1
                                                                       "trace2"
                                                                       "trace_1")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (typepred
                                                                           "trace2")
                                                                          (("2"
                                                                            (typepred
                                                                             "trace")
                                                                            (("2"
                                                                              (hide
                                                                               2)
                                                                              (("2"
                                                                                (split
                                                                                 1)
                                                                                (("1"
                                                                                  (expand
                                                                                   "finite_trace?")
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "last_append[TraceState]")
                                                                                    (("1"
                                                                                      (inst?)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (flatten)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (expand
                                                                                   "final_env")
                                                                                  (("2"
                                                                                    (lemma
                                                                                     "last_append[TraceState]")
                                                                                    (("2"
                                                                                      (inst?)
                                                                                      (("1"
                                                                                        (lift-if
                                                                                         1)
                                                                                        (("1"
                                                                                          (split
                                                                                           1)
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (typepred
                                                                                           "trace2")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "wf_trace?")
                                                                                            (("2"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (assert)
                                                              (("2"
                                                                (typepred
                                                                 "trace2"
                                                                 "trace_1")
                                                                (("2"
                                                                  (split
                                                                   1)
                                                                  (("1"
                                                                    (expand
                                                                     "wf_trace?"
                                                                     1)
                                                                    (("1"
                                                                      (lemma
                                                                       "length_append[TraceState]")
                                                                      (("1"
                                                                        (inst?)
                                                                        (("1"
                                                                          (split
                                                                           1)
                                                                          (("1"
                                                                            (expand
                                                                             "length"
                                                                             -1)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (expand
                                                                                 "wf_trace?")
                                                                                (("1"
                                                                                  (flatten)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (expand
                                                                             "wf_trace?")
                                                                            (("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (lemma
                                                                                   "car_append[TraceState]")
                                                                                  (("2"
                                                                                    (inst?)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("3"
                                                                            (skeep)
                                                                            (("3"
                                                                              (typepred
                                                                               "i")
                                                                              (("3"
                                                                                (assert)
                                                                                (("3"
                                                                                  (lemma
                                                                                   "nth_append[TraceState]")
                                                                                  (("3"
                                                                                    (inst?)
                                                                                    (("3"
                                                                                      (assert)
                                                                                      (("3"
                                                                                        (lift-if
                                                                                         -1)
                                                                                        (("3"
                                                                                          (split
                                                                                           -1)
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "wf_trace?")
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -6
                                                                                                     "i")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (typepred
                                                                                                       "trace2")
                                                                                                      (("2"
                                                                                                        (typepred
                                                                                                         "trace")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "finite_trace?"
                                                                                                           -2)
                                                                                                          (("2"
                                                                                                            (lemma
                                                                                                             "last_append[TraceState]")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -1
                                                                                                               "trace1"
                                                                                                               "trace2")
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -17
                                                                                                                 -1
                                                                                                                 rl)
                                                                                                                (("2"
                                                                                                                  (replace
                                                                                                                   -1)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "last"
                                                                                                                     -3)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "wf_trace?")
                                                                                                (("2"
                                                                                                  (flatten)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -7
                                                                                                     "i-length(trace2)")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (expand
                                                                     "wf_trace?")
                                                                    (("2"
                                                                      (expand
                                                                       "valid_trace?")
                                                                      (("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (split
                                                                             -5)
                                                                            (("1"
                                                                              (expand
                                                                               "finite_trace?")
                                                                              (("1"
                                                                                (lemma
                                                                                 "last_append[TraceState]")
                                                                                (("1"
                                                                                  (inst?)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -1)
                                                                                      (("1"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (lemma
                                                                                 "last_append[TraceState]")
                                                                                (("2"
                                                                                  (inst?)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (flatten)
                                                          (("2"
                                                            (typepred
                                                             "trace")
                                                            (("2"
                                                              (expand
                                                               "finite_trace?"
                                                               -2)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (split
                                                                   -3)
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil)
                                                                   ("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Environment type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (DLAND const-decl "bool" bool_expr nil)
    (HP type-decl nil HP_adt nil)
    (ALLRUNS_st const-decl "bool" ltl_expr nil)
    (BSTAR def-decl "HP" bounded_star_semantics nil)
    (TraceState type-decl nil TraceState_adt nil)
    (list type-decl nil list_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (ALLRUNS_tr const-decl "bool" ltl_expr nil)
    (normDLGLOBALLY const-decl "bool" ltl_expr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (pred type-eq-decl nil defined_types nil)
    (nat_induction formula-decl nil naturalnumbers nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (DLGLOBALLY const-decl "bool" ltl_expr nil)
    (State_Trace const-decl "bool" ltl_expr nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (init_env const-decl "Environment" trace_semantics nil)
    (DLBOOL const-decl "bool" bool_expr nil)
    (final_env const-decl "Environment" trace_semantics nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (last const-decl "T" more_list_props structures)
    (nth def-decl "T" list_props nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (DLGLOBALLY_FORALL formula-decl nil ltl_expr nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (below type-eq-decl nil naturalnumbers nil)
    (length def-decl "nat" list_props nil)
    (< const-decl "bool" reals nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (last_append formula-decl nil more_list_props structures)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (length_append formula-decl nil list_props nil)
    (state_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (dd? const-decl "bool" hp_expr nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (closed_interval const-decl "(closed_interval?(a, b))" interval_def
     ODEs)
    (D adt-accessor-decl "[(state_diff?) ->
   {D: (dd?) | EXISTS (b: posreal): D = closed_interval(0, b)}]"
     TraceState_adt nil)
    (below type-eq-decl nil nat_types nil)
    (cut_inf_diff const-decl "Trace" ltl_expr nil)
    (cut_state_diff const-decl
     "{tt: Trace | length(tt) = length(trace)}" ltl_expr nil)
    (max_ci const-decl "{rr: (d) | FORALL (x: (d)): x <= rr}"
     more_ci_props ODEs)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nth_append formula-decl nil more_list_props structures)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (car adt-accessor-decl "[(cons?) -> T]" list_adt nil)
    (car_append formula-decl nil more_list_props structures)
    (trace_semantic_rel_bounded_star_seq_switch_glob formula-decl nil
     trace_bounded_star_semantics nil)
    (length_singleton formula-decl nil more_list_props structures)
    (append def-decl "list[T]" list_props nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (normDLGLOBALLY_append formula-decl nil ltl_expr nil)
    (trace_semantic_rel_bounded_star_seq_switch_glob_con formula-decl
     nil trace_bounded_star_semantics nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (STATE adt-constructor-decl "[Environment -> (state?)]"
     TraceState_adt nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (TRUE const-decl "bool" booleans nil))
   shostak))
 (dltl_STARcap_eq 0
  (dltl_STARcap_eq-1 nil 3899893391
   ("" (skeep)
    (("" (lemma "dltl_BSTARcap_eq")
      (("" (inst?)
        (("" (assert)
          (("" (decompose-equality -1)
            (("" (decompose-equality 1)
              (("" (inst -1 "x!1")
                (("" (iff)
                  (("" (flatten)
                    (("" (split 1)
                      (("1" (flatten)
                        (("1" (expand "DLAND" -1)
                          (("1" (flatten)
                            (("1" (lemma "allruns_st_star")
                              (("1"
                                (inst?)
                                (("1"
                                  (assert)
                                  (("1"
                                    (lemma "allruns_tr_star")
                                    (("1"
                                      (inst?)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (hide 2)
                                          (("1"
                                            (skeep)
                                            (("1"
                                              (split -5)
                                              (("1"
                                                (inst -1 "i")
                                                nil
                                                nil)
                                               ("2"
                                                (skeep)
                                                (("2"
                                                  (inst -1 "i!1")
                                                  (("2"
                                                    (expand "DLAND" 1)
                                                    (("2"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (flatten)
                        (("2" (expand "DLAND" 1)
                          (("2" (lemma "allruns_st_star")
                            (("2" (inst?)
                              (("2"
                                (assert)
                                (("2"
                                  (split -4)
                                  (("1"
                                    (inst-cp -1 "0")
                                    (("1"
                                      (expand "DLAND" -2)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (skeep)
                                              (("1"
                                                (inst -1 "i")
                                                (("1"
                                                  (expand "DLAND" -1)
                                                  (("1"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (assert)
                                    (("2"
                                      (hide 2)
                                      (("2"
                                        (flatten)
                                        (("2"
                                          (lemma "allruns_tr_star")
                                          (("2"
                                            (inst?)
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((dltl_BSTARcap_eq formula-decl nil temporal_logic nil)
    (STAR adt-constructor-decl "[HP -> (star?)]" HP_adt nil)
    (star? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (allruns_st_star formula-decl nil trace_bounded_star_semantics nil)
    (allruns_tr_star formula-decl nil trace_bounded_star_semantics nil)
    (normDLGLOBALLY const-decl "bool" ltl_expr nil)
    (ALLRUNS_tr const-decl "bool" ltl_expr nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (list type-decl nil list_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (BSTAR def-decl "HP" bounded_star_semantics nil)
    (ALLRUNS_st const-decl "bool" ltl_expr nil)
    (DLAND const-decl "bool" bool_expr nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (Environment type-eq-decl nil hp_def nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (HP type-decl nil HP_adt nil))
   shostak))
 (dltl_STARcup_dual 0
  (dltl_STARcup_dual-1 nil 3901701280
   ("" (skeep)
    (("" (lemma "dltl_STARcap_eq")
      (("" (inst?)
        (("" (inst -1 "DLNOT(P)" "DLNOT(Q)")
          (("" (decompose-equality 1)
            (("" (iff 1)
              (("" (decompose-equality -1)
                (("" (inst?)
                  (("" (split 1)
                    (("1" (flatten)
                      (("1" (assert)
                        (("1" (iff -2)
                          (("1" (flatten)
                            (("1" (split -3)
                              (("1"
                                (hide (-3 1))
                                (("1"
                                  (expand "DLOR")
                                  (("1"
                                    (expand "DLAND")
                                    (("1"
                                      (flatten)
                                      (("1"
                                        (expand "DLNOT")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (expand "ALLRUNS_st" -1)
                                            (("1"
                                              (expand "SOMERUNS_st" -2)
                                              (("1"
                                                (skeep)
                                                (("1"
                                                  (inst -1 "trace")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (expand
                                                       "ALLRUNS_tr"
                                                       -1)
                                                      (("1"
                                                        (expand
                                                         "SOMERUNS_tr"
                                                         -4)
                                                        (("1"
                                                          (skeep)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (inst
                                                               -1
                                                               "trace_1")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (expand
                                                                   "normDLGLOBALLY"
                                                                   -1)
                                                                  (("1"
                                                                    (expand
                                                                     "normDLEVENTUALLY")
                                                                    (("1"
                                                                      (case
                                                                       "finite_trace?(trace_1)")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (lemma
                                                                               "DLGLOBALLY_FORALL")
                                                                              (("1"
                                                                                (inst?)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (hide
                                                                                     -3)
                                                                                    (("1"
                                                                                      (lemma
                                                                                       "DLEVENTUALLY_EXISTS")
                                                                                      (("1"
                                                                                        (inst?)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (hide
                                                                                             -8)
                                                                                            (("1"
                                                                                              (skeep)
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -2
                                                                                                 "i")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "state?(nth(trace_1,i))")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (case
                                                                                                         "state_diff?(nth(trace_1,i))")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (skeep)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -3
                                                                                                               "t")
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (skeep)
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -2
                                                                                                               "t")
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (lemma
                                                                           "DLEVENTUALLY_EXISTS")
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (inst?)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (hide
                                                                                   -7)
                                                                                  (("2"
                                                                                    (lemma
                                                                                     "DLGLOBALLY_FORALL")
                                                                                    (("2"
                                                                                      (inst?)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (skeep)
                                                                                          (("2"
                                                                                            (inst
                                                                                             -1
                                                                                             "i")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (case
                                                                                                 "state_diff?(nth(trace_1,i))")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (skeep)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -2
                                                                                                         "t")
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (case
                                                                                                     "state?(nth(trace_1,i))")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (skeep)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -1
                                                                                                           "t")
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (assert)
                                (("2"
                                  (hide -)
                                  (("2"
                                    (expand "ALLRUNS_tr")
                                    (("2"
                                      (expand "SOMERUNS_tr")
                                      (("2"
                                        (skeep)
                                        (("2"
                                          (inst?)
                                          (("2"
                                            (assert)
                                            (("2"
                                              (expand "normDLGLOBALLY")
                                              (("2"
                                                (expand
                                                 "normDLEVENTUALLY")
                                                (("2"
                                                  (case
                                                   "finite_trace?(trace)")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (split 1)
                                                        (("1"
                                                          (expand
                                                           "DLNOT")
                                                          (("1"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (assert)
                                                          (("2"
                                                            (hide 2)
                                                            (("2"
                                                              (lemma
                                                               "DLGLOBALLY_FORALL")
                                                              (("2"
                                                                (lemma
                                                                 "DLEVENTUALLY_EXISTS")
                                                                (("2"
                                                                  (inst?)
                                                                  (("2"
                                                                    (inst?)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (hide
                                                                         3
                                                                         4)
                                                                        (("2"
                                                                          (skeep)
                                                                          (("2"
                                                                            (inst
                                                                             1
                                                                             "i")
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (typepred
                                                                                 "trace")
                                                                                (("2"
                                                                                  (expand
                                                                                   "wf_trace?"
                                                                                   -1)
                                                                                  (("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (inst
                                                                                       -2
                                                                                       "i")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (case
                                                                                           "error?(nth(trace,i))")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (case
                                                                                               "state?(nth(trace,i))")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "DLNOT")
                                                                                                  (("1"
                                                                                                    (propax)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (skeep)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     4
                                                                                                     "t")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "DLNOT")
                                                                                                      (("2"
                                                                                                        (propax)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (typepred
                                                                                           "i")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "finite_trace?"
                                                                                             -4)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "last")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (case
                                                                                                       "state?(nth(trace,i))")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "DLNOT")
                                                                                                          (("1"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (skeep)
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               5
                                                                                                               "t")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "DLNOT")
                                                                                                                  (("2"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    (("2"
                                                      (hide 1)
                                                      (("2"
                                                        (lemma
                                                         "DLEVENTUALLY_EXISTS")
                                                        (("2"
                                                          (lemma
                                                           "DLGLOBALLY_FORALL")
                                                          (("2"
                                                            (inst?)
                                                            (("2"
                                                              (inst?)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (hide
                                                                   3
                                                                   4)
                                                                  (("2"
                                                                    (skeep)
                                                                    (("2"
                                                                      (inst
                                                                       5
                                                                       "i")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (case
                                                                           "state?(nth(trace,i))")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (expand
                                                                               "DLNOT")
                                                                              (("1"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (expand
                                                                               "DLNOT")
                                                                              (("2"
                                                                                (case
                                                                                 "state_diff?(nth(trace,i))")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (skeep)
                                                                                    (("1"
                                                                                      (inst
                                                                                       5
                                                                                       "t")
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (case
                                                                                     "error?(nth(trace,i))")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (typepred
                                                                                         "trace")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "wf_trace?"
                                                                                           -1)
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (inst
                                                                                               -2
                                                                                               "i")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (skeep)
                                                                                        (("2"
                                                                                          (inst
                                                                                           7
                                                                                           "t")
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (assert)
                      (("2" (flatten)
                        (("2" (assert)
                          (("2" (iff -2)
                            (("2" (flatten)
                              (("2"
                                (split -2)
                                (("1"
                                  (hide -3)
                                  (("1"
                                    (hide 1)
                                    (("1"
                                      (expand "ALLRUNS_tr")
                                      (("1"
                                        (expand "SOMERUNS_tr")
                                        (("1"
                                          (skeep)
                                          (("1"
                                            (inst?)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (expand
                                                 "normDLEVENTUALLY")
                                                (("1"
                                                  (expand
                                                   "normDLGLOBALLY")
                                                  (("1"
                                                    (case
                                                     "DLGLOBALLY(State_Trace(DLNOT(Q)))(trace)")
                                                    (("1"
                                                      (case
                                                       "DLEVENTUALLY(State_Trace(Q))(trace)")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (hide -3 -6)
                                                          (("1"
                                                            (lemma
                                                             "DLEVENTUALLY_EXISTS")
                                                            (("1"
                                                              (lemma
                                                               "DLGLOBALLY_FORALL")
                                                              (("1"
                                                                (inst?)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (inst?)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (hide
                                                                         -3
                                                                         -4)
                                                                        (("1"
                                                                          (skeep)
                                                                          (("1"
                                                                            (inst
                                                                             -1
                                                                             "i")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (case
                                                                                 "state?(nth(trace,i))")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "DLNOT")
                                                                                    (("1"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (case
                                                                                     "state_diff?(nth(trace,i))")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (skeep)
                                                                                        (("1"
                                                                                          (inst
                                                                                           -2
                                                                                           "t")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "DLNOT"
                                                                                             -2)
                                                                                            (("1"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (skeep)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -1
                                                                                           "t")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "DLNOT"
                                                                                             -1)
                                                                                            (("2"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (case
                                                         "finite_trace?(trace)")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (expand
                                                             "DLNOT")
                                                            (("1"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (case
                                                       "finite_trace?(trace)")
                                                      (("1"
                                                        (assert)
                                                        nil
                                                        nil)
                                                       ("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (hide -)
                                  (("2"
                                    (expand "DLAND")
                                    (("2"
                                      (expand "DLOR")
                                      (("2"
                                        (flatten)
                                        (("2"
                                          (expand "DLNOT")
                                          (("2"
                                            (assert)
                                            (("2"
                                              (expand "ALLRUNS_st")
                                              (("2"
                                                (expand "SOMERUNS_st")
                                                (("2"
                                                  (skeep)
                                                  (("2"
                                                    (inst 4 "trace")
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (expand
                                                         "ALLRUNS_tr"
                                                         1)
                                                        (("2"
                                                          (expand
                                                           "SOMERUNS_tr"
                                                           4)
                                                          (("2"
                                                            (skeep)
                                                            (("2"
                                                              (inst
                                                               4
                                                               "trace_1")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (expand
                                                                   "normDLGLOBALLY"
                                                                   1)
                                                                  (("2"
                                                                    (expand
                                                                     "normDLEVENTUALLY"
                                                                     4)
                                                                    (("2"
                                                                      (case
                                                                       "NOT DLEVENTUALLY(State_Trace(Q))(trace_1)")
                                                                      (("1"
                                                                        (case
                                                                         "NOT DLGLOBALLY(State_Trace(LAMBDA (env: Environment): NOT Q(env))) (trace_1)")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (lemma
                                                                             "DLGLOBALLY_FORALL")
                                                                            (("1"
                                                                              (inst?)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (hide
                                                                                   2)
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "DLEVENTUALLY_EXISTS")
                                                                                    (("1"
                                                                                      (inst?)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (hide
                                                                                           3)
                                                                                          (("1"
                                                                                            (skeep)
                                                                                            (("1"
                                                                                              (inst
                                                                                               1
                                                                                               "i")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (case
                                                                                                   "error?(nth(trace_1,i))")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (typepred
                                                                                                       "trace_1")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "wf_trace?"
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (flatten)
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -2
                                                                                                             "i")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (case
                                                                                                       "state_diff?(nth(trace_1,i))")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (skeep)
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             2
                                                                                                             "t")
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (case
                                                                                                           "state?(nth(trace_1,i))")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (skeep)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 4
                                                                                                                 "t")
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (case
                                                                             "finite_trace?(trace_1)")
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil)
                                                                             ("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((dltl_STARcap_eq formula-decl nil temporal_logic nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (Environment type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (DLNOT const-decl "bool" bool_expr nil)
    (DLEVENTUALLY const-decl "bool" ltl_expr nil)
    (State_Trace const-decl "bool" ltl_expr nil)
    (DLGLOBALLY const-decl "bool" ltl_expr nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (DLGLOBALLY_FORALL formula-decl nil ltl_expr nil)
    (DLEVENTUALLY_EXISTS formula-decl nil ltl_expr nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (hp const-decl "bool" interval_def ODEs)
    (D adt-accessor-decl "[(state_diff?) ->
   {D: (dd?) | EXISTS (b: posreal): D = closed_interval(0, b)}]"
     TraceState_adt nil)
    (closed_interval const-decl "(closed_interval?(a, b))" interval_def
     ODEs)
    nil (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (dd? const-decl "bool" hp_expr nil)
    (state_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (nth def-decl "T" list_props nil)
    (below type-eq-decl nil nat_types nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (< const-decl "bool" reals nil)
    (length def-decl "nat" list_props nil)
    (below type-eq-decl nil naturalnumbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    nil nil (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (error? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (last const-decl "T" more_list_props structures)
    (normDLGLOBALLY const-decl "bool" ltl_expr nil)
    (ALLRUNS_tr const-decl "bool" ltl_expr nil)
    (ALLRUNS_st const-decl "bool" ltl_expr nil)
    (DLAND const-decl "bool" bool_expr nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (normDLEVENTUALLY const-decl "bool" ltl_expr nil)
    (SOMERUNS_tr const-decl "bool" ltl_expr nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (list type-decl nil list_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (STAR adt-constructor-decl "[HP -> (star?)]" HP_adt nil)
    (star? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (SOMERUNS_st const-decl "bool" ltl_expr nil)
    (DLOR const-decl "bool" bool_expr nil)
    (HP type-decl nil HP_adt nil))
   shostak))
 (dltl_STARcup 0
  (dltl_STARcup-1 nil 3889265668
   ("" (skeep)
    (("" (expand "ALLRUNS_tr")
      (("" (expand "DLOR")
        (("" (decompose-equality)
          (("" (iff)
            (("" (split)
              (("1" (flatten)
                (("1" (skeep)
                  (("1" (expand "DLAND")
                    (("1" (split)
                      (("1" (expand "normDLEVENTUALLY")
                        (("1"
                          (case "DLEVENTUALLY(State_Trace(P))(trace)")
                          (("1" (assert) nil nil)
                           ("2" (hide 2)
                            (("2" (lemma "DLEVENTUALLY_EXISTS")
                              (("2"
                                (inst?)
                                (("2"
                                  (assert)
                                  (("2"
                                    (inst 1 "0")
                                    (("1"
                                      (expand "nth")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (expand "init_env")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (lift-if)
                                              (("1"
                                                (split -2)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (flatten)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (typepred
                                                       "trace")
                                                      (("2"
                                                        (expand
                                                         "wf_trace?")
                                                        (("2"
                                                          (flatten)
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (flatten)
                                                              (("2"
                                                                (case
                                                                 "state_diff?(car(trace))")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (typepred
                                                                     "behavior(car(trace))")
                                                                    (("1"
                                                                      (inst
                                                                       3
                                                                       "0")
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil)
                                                                       ("2"
                                                                        (typepred
                                                                         "D(nth[TraceState](trace, 0))")
                                                                        (("2"
                                                                          (skeep)
                                                                          (("2"
                                                                            (replace
                                                                             -2)
                                                                            (("2"
                                                                              (expand
                                                                               "closed_interval")
                                                                              (("2"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (typepred
                                                                     "inf_behavior(car(trace))")
                                                                    (("2"
                                                                      (inst
                                                                       5
                                                                       "0")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (typepred "trace")
                                      (("2"
                                        (expand "wf_trace?")
                                        (("2"
                                          (flatten)
                                          (("2" (grind) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (flatten)
                        (("2" (expand "trace_semantic_rel" -4)
                          (("2" (assert)
                            (("2" (split)
                              (("1"
                                (flatten)
                                (("1"
                                  (expand "normDLEVENTUALLY")
                                  (("1"
                                    (expand "finite_trace?")
                                    (("1"
                                      (expand "final_env")
                                      (("1"
                                        (expand "last")
                                        (("1"
                                          (replace -1)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (expand "nth")
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (expand "init_env")
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (inst -3 "trace")
                                (("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (flatten)
                (("2" (expand "DLAND")
                  (("2" (assert)
                    (("2" (split)
                      (("1" (inst -1 "(: STATE(x!1) :)")
                        (("1" (assert)
                          (("1" (expand "init_env")
                            (("1" (expand "trace_semantic_rel")
                              (("1"
                                (expand "length")
                                (("1"
                                  (expand "length")
                                  (("1"
                                    (expand "normDLEVENTUALLY")
                                    (("1"
                                      (expand "finite_trace?")
                                      (("1"
                                        (expand "final_env")
                                        (("1"
                                          (expand "last")
                                          (("1"
                                            (expand "length")
                                            (("1"
                                              (expand "length")
                                              (("1"
                                                (expand "nth")
                                                (("1"
                                                  (lemma
                                                   "DLEVENTUALLY_EXISTS")
                                                  (("1"
                                                    (inst?)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (skeep)
                                                        (("1"
                                                          (typepred
                                                           "i")
                                                          (("1"
                                                            (grind)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (grind) nil nil))
                        nil)
                       ("2" (skeep)
                        (("2" (inst -3 "trace")
                          (("2" (assert)
                            (("2" (expand "trace_semantic_rel" 2)
                              (("2" (propax) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((ALLRUNS_tr const-decl "bool" ltl_expr nil)
    (Environment type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (DLAND const-decl "bool" bool_expr nil)
    (TraceState type-decl nil TraceState_adt nil)
    (list type-decl nil list_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (init_env const-decl "Environment" trace_semantics nil)
    (HP type-decl nil HP_adt nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (seq? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (SEQ adt-constructor-decl "[[HP, HP] -> (seq?)]" HP_adt nil)
    (star? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (STAR adt-constructor-decl "[HP -> (star?)]" HP_adt nil)
    (normDLEVENTUALLY const-decl "bool" ltl_expr nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (DLEVENTUALLY const-decl "bool" ltl_expr nil)
    (State_Trace const-decl "bool" ltl_expr nil)
    (DLEVENTUALLY_EXISTS formula-decl nil ltl_expr nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (last const-decl "T" more_list_props structures)
    (inf_behavior adt-accessor-decl
     "[d: (inf_diff?) -> {ib: [(hp(0)) -> Environment] | ib(0) = s0(d)}]"
     TraceState_adt nil)
    (hp const-decl "bool" interval_def ODEs)
    (behavior adt-accessor-decl
     "[d: (state_diff?) -> {b: [(D(d)) -> Environment] | b(0) = s0(d)}]"
     TraceState_adt nil)
    (s0 shared-adt-accessor-decl
     "[{x: TraceState | inf_diff?(x) OR state_diff?(x)} -> Environment]"
     TraceState_adt nil)
    (inf_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (D adt-accessor-decl "[(state_diff?) ->
   {D: (dd?) | EXISTS (b: posreal): D = closed_interval(0, b)}]"
     TraceState_adt nil)
    (closed_interval const-decl "(closed_interval?(a, b))" interval_def
     ODEs)
    (dd? const-decl "bool" hp_expr nil)
    (car adt-accessor-decl "[(cons?) -> T]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (state_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (final_env const-decl "Environment" trace_semantics nil)
    (STATE adt-constructor-decl "[Environment -> (state?)]"
     TraceState_adt nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (DLOR const-decl "bool" bool_expr nil))
   shostak))
 (dltl_STARcap_dual 0
  (dltl_STARcap_dual-1 nil 3901701292
   ("" (skeep)
    (("" (decompose-equality)
      (("" (iff)
        (("" (split)
          (("1" (flatten)
            (("1" (expand "DLAND")
              (("1" (flatten)
                (("1" (expand "SOMERUNS_tr")
                  (("1" (expand "normDLGLOBALLY")
                    (("1" (expand "DLOR")
                      (("1" (split)
                        (("1" (inst 1 "(:STATE(x!1):)")
                          (("1" (expand "init_env")
                            (("1" (expand "finite_trace?")
                              (("1"
                                (expand "final_env")
                                (("1"
                                  (expand "last")
                                  (("1"
                                    (expand "nth")
                                    (("1"
                                      (assert)
                                      (("1"
                                        (lemma "DLGLOBALLY_FORALL")
                                        (("1"
                                          (inst?)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (split)
                                              (("1"
                                                (expand
                                                 "trace_semantic_rel"
                                                 1)
                                                (("1"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil)
                                               ("2"
                                                (assert)
                                                (("2"
                                                  (skeep)
                                                  (("2"
                                                    (typepred "i")
                                                    (("2"
                                                      (expand "nth")
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2" (grind) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (grind) nil nil))
                          nil)
                         ("2" (skeep)
                          (("2" (expand "trace_semantic_rel" 1)
                            (("2" (inst 1 "trace")
                              (("2" (assert) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (flatten)
            (("2" (expand "DLAND")
              (("2" (expand "DLOR")
                (("2" (split)
                  (("1" (expand "SOMERUNS_tr")
                    (("1" (skeep)
                      (("1" (lemma "norm_implies_DLGLOBALLY")
                        (("1" (inst?)
                          (("1" (assert)
                            (("1" (lemma "DLGLOBALLY_FORALL")
                              (("1"
                                (inst?)
                                (("1"
                                  (assert)
                                  (("1"
                                    (inst -1 "0")
                                    (("1"
                                      (expand "nth")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (typepred "trace")
                                          (("1"
                                            (expand "wf_trace?")
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (expand "init_env")
                                                  (("1"
                                                    (lift-if)
                                                    (("1"
                                                      (split -6)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (flatten)
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (flatten)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (split)
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (inst
                                                                 -2
                                                                 "0")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil)
                                                                 ("2"
                                                                  (typepred
                                                                   "D(nth[TraceState](trace, 0))")
                                                                  (("2"
                                                                    (skeep)
                                                                    (("2"
                                                                      (replace
                                                                       -2)
                                                                      (("2"
                                                                        (expand
                                                                         "closed_interval")
                                                                        (("2"
                                                                          (propax)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (flatten)
                                                              (("2"
                                                                (inst
                                                                 -2
                                                                 "0")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil)
                                                                 ("2"
                                                                  (expand
                                                                   "hp")
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (typepred "trace")
                                      (("2"
                                        (expand "wf_trace?")
                                        (("2"
                                          (flatten)
                                          (("2"
                                            (expand "length")
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (flatten)
                    (("2" (expand "SOMERUNS_tr")
                      (("2" (skeep)
                        (("2" (expand "normDLGLOBALLY")
                          (("2" (expand "trace_semantic_rel" -2)
                            (("2" (split)
                              (("1"
                                (flatten)
                                (("1"
                                  (expand "finite_trace?")
                                  (("1"
                                    (expand "last")
                                    (("1"
                                      (expand "nth")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (expand "final_env")
                                          (("1"
                                            (expand "last")
                                            (("1"
                                              (expand "nth")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (expand "init_env")
                                                    (("1"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (inst?)
                                (("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Environment type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (DLAND const-decl "bool" bool_expr nil)
    (DLOR const-decl "bool" bool_expr nil)
    (HP type-decl nil HP_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (list type-decl nil list_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (SOMERUNS_tr const-decl "bool" ltl_expr nil)
    (seq? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (SEQ adt-constructor-decl "[[HP, HP] -> (seq?)]" HP_adt nil)
    (star? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (STAR adt-constructor-decl "[HP -> (star?)]" HP_adt nil)
    (normDLGLOBALLY const-decl "bool" ltl_expr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (STATE adt-constructor-decl "[Environment -> (state?)]"
     TraceState_adt nil)
    nil (valid_trace? const-decl "bool" trace_semantics nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (last const-decl "T" more_list_props structures)
    (length_singleton formula-decl nil more_list_props structures)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (below type-eq-decl nil naturalnumbers nil)
    (length def-decl "nat" list_props nil)
    (< const-decl "bool" reals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (State_Trace const-decl "bool" ltl_expr nil)
    (max_ci const-decl "{rr: (d) | FORALL (x: (d)): x <= rr}"
     more_ci_props ODEs)
    (cut_state_diff const-decl
     "{tt: Trace | length(tt) = length(trace)}" ltl_expr nil)
    (cut_inf_diff const-decl "Trace" ltl_expr nil)
    (DLGLOBALLY const-decl "bool" ltl_expr nil)
    (suffix? def-decl "bool" more_list_props structures)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (DLGLOBALLY_FORALL formula-decl nil ltl_expr nil)
    (nth def-decl "T" list_props nil)
    (final_env const-decl "Environment" trace_semantics nil)
    (init_env const-decl "Environment" trace_semantics nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (hp const-decl "bool" interval_def ODEs)
    (state_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (dd? const-decl "bool" hp_expr nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (= const-decl "[T, T -> boolean]" equalities nil) nil
    (closed_interval const-decl "(closed_interval?(a, b))" interval_def
     ODEs)
    (D adt-accessor-decl "[(state_diff?) ->
   {D: (dd?) | EXISTS (b: posreal): D = closed_interval(0, b)}]"
     TraceState_adt nil)
    (below type-eq-decl nil nat_types nil) nil
    (norm_implies_DLGLOBALLY formula-decl nil ltl_expr nil))
   shostak))
 (dltl_BSTARindcup 0
  (dltl_BSTARindcup-1 nil 3899815255
   ("" (induct "n")
    (("1" (skeep)
      (("1" (skeep)
        (("1" (expand "BSTAR")
          (("1" (expand "ALLRUNS_tr")
            (("1" (assert)
              (("1" (lemma "dlSequent_equiv")
                (("1" (hide -2)
                  (("1" (inst?)
                    (("1" (assert)
                      (("1" (hide 2)
                        (("1" (expand "dlSequent")
                          (("1" (skeep)
                            (("1" (inst -1 "0")
                              (("1"
                                (inst 1 "0")
                                (("1"
                                  (expand "nth")
                                  (("1"
                                    (skeep)
                                    (("1"
                                      (expand "trace_semantic_rel")
                                      (("1"
                                        (expand "DLBOOL")
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (expand "normDLEVENTUALLY")
                                            (("1"
                                              (expand "finite_trace?")
                                              (("1"
                                                (expand "final_env")
                                                (("1"
                                                  (expand "last")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (expand "nth")
                                                      (("1"
                                                        (expand
                                                         "init_env")
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (skeep)
      (("2" (skeep*)
        (("2" (expand "BSTAR" 1)
          (("2" (inst?)
            (("2" (assert)
              (("2" (lemma "dlSequent_equiv")
                (("2" (inst -1 _ "P")
                  (("2" (assert)
                    (("2" (copy -1)
                      (("2" (inst?)
                        (("2" (assert)
                          (("2" (hide -3)
                            (("2" (copy -2)
                              (("2"
                                (inst?)
                                (("2"
                                  (assert)
                                  (("2"
                                    (hide -4)
                                    (("2"
                                      (inst?)
                                      (("2"
                                        (assert)
                                        (("2"
                                          (hide 2)
                                          (("2"
                                            (expand "dlSequent")
                                            (("2"
                                              (skeep)
                                              (("2"
                                                (inst -3 "0")
                                                (("2"
                                                  (inst 1 "0")
                                                  (("2"
                                                    (expand
                                                     "nth"
                                                     (-3 1))
                                                    (("2"
                                                      (expand
                                                       "ALLRUNS_tr")
                                                      (("2"
                                                        (skeep)
                                                        (("2"
                                                          (expand
                                                           "trace_semantic_rel"
                                                           -5)
                                                          (("2"
                                                            (split)
                                                            (("1"
                                                              (expand
                                                               "trace_semantic_rel"
                                                               -1)
                                                              (("1"
                                                                (split
                                                                 -1)
                                                                (("1"
                                                                  (skeep)
                                                                  (("1"
                                                                    (inst
                                                                     -7
                                                                     "init_env(trace2)")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (inst
                                                                         -6
                                                                         "env")
                                                                        (("1"
                                                                          (split
                                                                           -6)
                                                                          (("1"
                                                                            (skeep)
                                                                            (("1"
                                                                              (typepred
                                                                               "j!1")
                                                                              (("1"
                                                                                (expand
                                                                                 "length")
                                                                                (("1"
                                                                                  (expand
                                                                                   "length")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "nth")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (inst
                                                                                         -2
                                                                                         "trace1")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (split
                                                                                             -2)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "normDLEVENTUALLY"
                                                                                               -1)
                                                                                              (("1"
                                                                                                (split
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (split
                                                                                                     -8)
                                                                                                    (("1"
                                                                                                      (skeep)
                                                                                                      (("1"
                                                                                                        (typepred
                                                                                                         "j_1")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "length"
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "length"
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -2
                                                                                                                 "trace2")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "normDLEVENTUALLY")
                                                                                                                    (("1"
                                                                                                                      (split
                                                                                                                       1)
                                                                                                                      (("1"
                                                                                                                        (flatten)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "finite_trace?")
                                                                                                                          (("1"
                                                                                                                            (case
                                                                                                                             "state?(last(trace2)) OR state_diff?(last(trace2))")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (split
                                                                                                                                 -4)
                                                                                                                                (("1"
                                                                                                                                  (flatten)
                                                                                                                                  (("1"
                                                                                                                                    (hide
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (split
                                                                                                                                       -1)
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (typepred
                                                                                                                                           "trace2")
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "wf_trace?")
                                                                                                                                            (("1"
                                                                                                                                              (flatten)
                                                                                                                                              (("1"
                                                                                                                                                (lemma
                                                                                                                                                 "last_append[TraceState]")
                                                                                                                                                (("1"
                                                                                                                                                  (inst?)
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "final_env")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (split
                                                                                                                                                         2)
                                                                                                                                                        (("1"
                                                                                                                                                          (flatten)
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (flatten)
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (typepred
                                                                                                                                                     "trace2")
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "wf_trace?")
                                                                                                                                                      (("2"
                                                                                                                                                        (flatten)
                                                                                                                                                        (("2"
                                                                                                                                                          (lemma
                                                                                                                                                           "last_append[TraceState]")
                                                                                                                                                          (("2"
                                                                                                                                                            (inst?)
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (typepred
                                                                                                                                                               "trace2")
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "wf_trace?")
                                                                                                                                                                (("2"
                                                                                                                                                                  (flatten)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (lemma
                                                                                                                                         "DLEVENTUALLY_EXISTS")
                                                                                                                                        (("2"
                                                                                                                                          (inst-cp
                                                                                                                                           -1
                                                                                                                                           "Q"
                                                                                                                                           "trace2")
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             -1
                                                                                                                                             "Q"
                                                                                                                                             "trace")
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (skeep)
                                                                                                                                                (("2"
                                                                                                                                                  (typepred
                                                                                                                                                   "trace2")
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "wf_trace?")
                                                                                                                                                    (("2"
                                                                                                                                                      (flatten)
                                                                                                                                                      (("2"
                                                                                                                                                        (lemma
                                                                                                                                                         "length_append[TraceState]")
                                                                                                                                                        (("2"
                                                                                                                                                          (inst?)
                                                                                                                                                          (("2"
                                                                                                                                                            (lemma
                                                                                                                                                             "nth_append[TraceState]")
                                                                                                                                                            (("2"
                                                                                                                                                              (inst
                                                                                                                                                               -1
                                                                                                                                                               "trace1"
                                                                                                                                                               "trace2"
                                                                                                                                                               "length(trace1)+i")
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst
                                                                                                                                                                   2
                                                                                                                                                                   "length(trace1)+i")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (split
                                                                                                                                                                       -5)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (flatten)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (flatten)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (skeep)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (inst
                                                                                                                                                                               3
                                                                                                                                                                               "t")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("3"
                                                                                                                                                                        (flatten)
                                                                                                                                                                        (("3"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (flatten)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (flatten)
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (lemma
                                                                                                                                   "last_append[TraceState]")
                                                                                                                                  (("2"
                                                                                                                                    (inst?)
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("3"
                                                                                                                              (flatten)
                                                                                                                              (("3"
                                                                                                                                (assert)
                                                                                                                                (("3"
                                                                                                                                  (typepred
                                                                                                                                   "trace2")
                                                                                                                                  (("3"
                                                                                                                                    (expand
                                                                                                                                     "wf_trace?")
                                                                                                                                    (("3"
                                                                                                                                      (propax)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("4"
                                                                                                                              (assert)
                                                                                                                              (("4"
                                                                                                                                (typepred
                                                                                                                                 "trace2")
                                                                                                                                (("4"
                                                                                                                                  (expand
                                                                                                                                   "wf_trace?")
                                                                                                                                  (("4"
                                                                                                                                    (propax)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (flatten)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (split
                                                                                                                             -2)
                                                                                                                            (("1"
                                                                                                                              (flatten)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "finite_trace?")
                                                                                                                                (("1"
                                                                                                                                  (lemma
                                                                                                                                   "last_append[TraceState]")
                                                                                                                                  (("1"
                                                                                                                                    (inst?)
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (flatten)
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (typepred
                                                                                                                                       "trace2")
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "wf_trace?"
                                                                                                                                         -1)
                                                                                                                                        (("2"
                                                                                                                                          (flatten)
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (flatten)
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (lemma
                                                                                                                                   "DLEVENTUALLY_EXISTS")
                                                                                                                                  (("2"
                                                                                                                                    (inst?)
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (hide
                                                                                                                                         -2)
                                                                                                                                        (("2"
                                                                                                                                          (lemma
                                                                                                                                           "DLEVENTUALLY_EXISTS")
                                                                                                                                          (("2"
                                                                                                                                            (inst?)
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (skeep)
                                                                                                                                                (("2"
                                                                                                                                                  (lemma
                                                                                                                                                   "length_append[TraceState]")
                                                                                                                                                  (("2"
                                                                                                                                                    (inst?)
                                                                                                                                                    (("2"
                                                                                                                                                      (lemma
                                                                                                                                                       "nth_append[TraceState]")
                                                                                                                                                      (("2"
                                                                                                                                                        (inst?)
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          (("2"
                                                                                                                                                            (inst
                                                                                                                                                             -1
                                                                                                                                                             "length(trace1)+i")
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              (("2"
                                                                                                                                                                (inst
                                                                                                                                                                 1
                                                                                                                                                                 "length(trace1)+i")
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (flatten)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (split
                                                                                                                                                                       -3)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (flatten)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (flatten)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (skeep)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (inst
                                                                                                                                                                               2
                                                                                                                                                                               "t")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("3"
                                                                                                                                                                        (flatten)
                                                                                                                                                                        (("3"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (typepred
                                                                                                                   "trace")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "valid_trace?")
                                                                                                                    (("2"
                                                                                                                      (flatten)
                                                                                                                      (("2"
                                                                                                                        (lemma
                                                                                                                         "last_append[TraceState]")
                                                                                                                        (("2"
                                                                                                                          (inst?)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "finite_trace?")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (flatten)
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (skeep)
                                                                                                      (("2"
                                                                                                        (typepred
                                                                                                         "i")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "length"
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "length"
                                                                                                             -1)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (hide
                                                                                                   -8)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "normDLEVENTUALLY"
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (case
                                                                                                       "NOT DLEVENTUALLY(State_Trace(Q))(trace)")
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         2)
                                                                                                        (("1"
                                                                                                          (lemma
                                                                                                           "DLEVENTUALLY_EXISTS")
                                                                                                          (("1"
                                                                                                            (inst?)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (lemma
                                                                                                                 "DLEVENTUALLY_EXISTS")
                                                                                                                (("1"
                                                                                                                  (hide
                                                                                                                   2)
                                                                                                                  (("1"
                                                                                                                    (inst?)
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (hide
                                                                                                                         -2)
                                                                                                                        (("1"
                                                                                                                          (skeep)
                                                                                                                          (("1"
                                                                                                                            (lemma
                                                                                                                             "length_append[TraceState]")
                                                                                                                            (("1"
                                                                                                                              (inst?)
                                                                                                                              (("1"
                                                                                                                                (lemma
                                                                                                                                 "nth_append[TraceState]")
                                                                                                                                (("1"
                                                                                                                                  (inst?)
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (inst
                                                                                                                                       -1
                                                                                                                                       "i")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (inst
                                                                                                                                           2
                                                                                                                                           "i")
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (flatten)
                                                                                                                                              (("1"
                                                                                                                                                (split
                                                                                                                                                 -3)
                                                                                                                                                (("1"
                                                                                                                                                  (flatten)
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (flatten)
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    (("2"
                                                                                                                                                      (skeep)
                                                                                                                                                      (("2"
                                                                                                                                                        (inst
                                                                                                                                                         3
                                                                                                                                                         "t")
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("3"
                                                                                                                                                  (flatten)
                                                                                                                                                  (("3"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (hide
                                                                                                 -7)
                                                                                                (("2"
                                                                                                  (lemma
                                                                                                   "car_append[TraceState]")
                                                                                                  (("2"
                                                                                                    (inst?)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "init_env")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (lift-if
                                                                                                           1)
                                                                                                          (("1"
                                                                                                            (split
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (flatten)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (typepred
                                                                                                       "trace1")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "wf_trace?"
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (flatten)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (typepred
                                                                                           "trace")
                                                                                          (("2"
                                                                                            (hide
                                                                                             -9)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "valid_trace?")
                                                                                              (("2"
                                                                                                (propax)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (skeep)
                                                                            (("2"
                                                                              (typepred
                                                                               "i")
                                                                              (("2"
                                                                                (expand
                                                                                 "length"
                                                                                 -1)
                                                                                (("2"
                                                                                  (expand
                                                                                   "length"
                                                                                   -1)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "nth"
                                                                                       1)
                                                                                      (("2"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (typepred
                                                                       "trace")
                                                                      (("2"
                                                                        (expand
                                                                         "valid_trace?"
                                                                         -2)
                                                                        (("2"
                                                                          (expand
                                                                           "finite_trace?"
                                                                           -2)
                                                                          (("2"
                                                                            (split
                                                                             -3)
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil)
                                                                             ("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (inst
                                                                                 -5
                                                                                 "env")
                                                                                (("2"
                                                                                  (split
                                                                                   -5)
                                                                                  (("1"
                                                                                    (skeep)
                                                                                    (("1"
                                                                                      (typepred
                                                                                       "j!1")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "length"
                                                                                         -1)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "length"
                                                                                           -1)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "nth"
                                                                                             -2)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -2
                                                                                                 "trace")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (skeep)
                                                                                    (("2"
                                                                                      (typepred
                                                                                       "i")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "length"
                                                                                         -1)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "length"
                                                                                           -1)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "nth"
                                                                                             1)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (inst
                                                               -3
                                                               "env")
                                                              (("2"
                                                                (split
                                                                 -3)
                                                                (("1"
                                                                  (skeep)
                                                                  (("1"
                                                                    (typepred
                                                                     "j_1")
                                                                    (("1"
                                                                      (expand
                                                                       "length"
                                                                       -1)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (expand
                                                                           "length"
                                                                           -1)
                                                                          (("1"
                                                                            (expand
                                                                             "nth"
                                                                             -2)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (inst
                                                                                 -2
                                                                                 "trace")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (skeep)
                                                                  (("2"
                                                                    (typepred
                                                                     "i")
                                                                    (("2"
                                                                      (expand
                                                                       "length"
                                                                       -1)
                                                                      (("2"
                                                                        (expand
                                                                         "length"
                                                                         -1)
                                                                        (("2"
                                                                          (expand
                                                                           "nth"
                                                                           1)
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((SEQ adt-constructor-decl "[[HP, HP] -> (seq?)]" HP_adt nil)
    (seq? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (UNION adt-constructor-decl "[[HP, HP] -> (union?)]" HP_adt nil)
    (union? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (car_append formula-decl nil more_list_props structures)
    (DLEVENTUALLY const-decl "bool" ltl_expr nil)
    (State_Trace const-decl "bool" ltl_expr nil)
    (last_append formula-decl nil more_list_props structures)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (below type-eq-decl nil nat_types nil)
    (D adt-accessor-decl "[(state_diff?) ->
   {D: (dd?) | EXISTS (b: posreal): D = closed_interval(0, b)}]"
     TraceState_adt nil)
    (closed_interval const-decl "(closed_interval?(a, b))" interval_def
     ODEs)
    nil (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (dd? const-decl "bool" hp_expr nil)
    (nth_append formula-decl nil more_list_props structures)
    (length_append formula-decl nil list_props nil)
    (DLEVENTUALLY_EXISTS formula-decl nil ltl_expr nil)
    (state_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil) nil nil
    (dlSequent const-decl "bool" dynamic_logic nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (below type-eq-decl nil naturalnumbers nil)
    (length def-decl "nat" list_props nil)
    (< const-decl "bool" reals nil)
    (length_singleton formula-decl nil more_list_props structures)
    (nth def-decl "T" list_props nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (last const-decl "T" more_list_props structures)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (final_env const-decl "Environment" trace_semantics nil)
    (TRUE const-decl "bool" booleans nil)
    (DLBOOL const-decl "bool" bool_expr nil)
    (TEST adt-constructor-decl "[BoolExpr -> (test?)]" HP_adt nil)
    (test? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (init_env const-decl "Environment" trace_semantics nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (dlSequent_equiv formula-decl nil dynamic_logic nil)
    (nat_induction formula-decl nil naturalnumbers nil)
    (BSTAR def-decl "HP" bounded_star_semantics nil)
    (normDLEVENTUALLY const-decl "bool" ltl_expr nil)
    (ALLRUNS_tr const-decl "bool" ltl_expr nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (TraceState type-decl nil TraceState_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (\|- const-decl "bool" dynamic_logic nil)
    (Formulas type-eq-decl nil bool_expr nil)
    (list type-decl nil list_adt nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (HP type-decl nil HP_adt nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (Environment type-eq-decl nil hp_def nil)
    (pred type-eq-decl nil defined_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil))
   shostak))
 (dltl_STARindcup 0
  (dltl_STARindcup-1 nil 3891418097
   ("" (skeep)
    (("" (lemma "dlSequent_equiv")
      ((""
        (inst -1 "(: ALLRUNS_tr(STAR(A), normDLEVENTUALLY(P, Q)) :)"
         "(: P :)")
        (("" (assert)
          (("" (expand "dlSequent")
            (("" (skeep)
              (("" (inst 1 "0")
                (("" (expand "nth" 1)
                  (("" (expand "ALLRUNS_tr" 1)
                    (("" (skeep)
                      (("" (lemma "dltl_BSTARindcup")
                        ((""
                          (lemma
                           "trace_semantic_rel_star_bounded_star")
                          (("" (inst?)
                            (("" (assert)
                              ((""
                                (skeep)
                                ((""
                                  (inst -2 "i" "P" "Q" "A")
                                  ((""
                                    (assert)
                                    ((""
                                      (lemma "dlSequent_equiv")
                                      ((""
                                        (inst
                                         -1
                                         "(: ALLRUNS_tr(BSTAR(A, i), normDLEVENTUALLY(P, Q)) :)"
                                         "(: P :)")
                                        ((""
                                          (assert)
                                          ((""
                                            (expand "dlSequent")
                                            ((""
                                              (inst?)
                                              ((""
                                                (split -1)
                                                (("1"
                                                  (skeep)
                                                  (("1"
                                                    (typepred "j")
                                                    (("1"
                                                      (expand "length")
                                                      (("1"
                                                        (expand
                                                         "length")
                                                        (("1"
                                                          (expand
                                                           "nth"
                                                           -2)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (expand
                                                               "ALLRUNS_tr"
                                                               -2)
                                                              (("1"
                                                                (inst?)
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((dlSequent_equiv formula-decl nil dynamic_logic nil)
    (nth def-decl "T" list_props nil)
    (trace_semantic_rel_star_bounded_star formula-decl nil
     trace_bounded_star_semantics nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (BSTAR def-decl "HP" bounded_star_semantics nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (dltl_BSTARindcup formula-decl nil temporal_logic nil)
    (below type-eq-decl nil naturalnumbers nil)
    (length def-decl "nat" list_props nil)
    (< const-decl "bool" reals nil)
    (length_singleton formula-decl nil more_list_props structures)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (dlSequent const-decl "bool" dynamic_logic nil)
    (normDLEVENTUALLY const-decl "bool" ltl_expr nil)
    (STAR adt-constructor-decl "[HP -> (star?)]" HP_adt nil)
    (star? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (ALLRUNS_tr const-decl "bool" ltl_expr nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (TraceState type-decl nil TraceState_adt nil)
    (HP type-decl nil HP_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (Formulas type-eq-decl nil bool_expr nil)
    (list type-decl nil list_adt nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (Environment type-eq-decl nil hp_def nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil))
   shostak))
 (dltl_BSTAREG_dual 0
  (dltl_BSTAREG_dual-1 nil 3904050583
   ("" (skeep)
    (("" (decompose-equality 1)
      (("" (iff)
        (("" (split 1)
          (("1" (flatten)
            (("1" (skeep)
              (("1" (expand "DLOR" -1)
                (("1" (split -1)
                  (("1" (inst 1 "0")
                    (("1" (expand "BSTAR" 1)
                      (("1" (expand "SOMERUNS_tr")
                        (("1" (inst 1 "(:STATE( x!1 ) :)")
                          (("1" (grind)
                            (("1" (expand "trace_semantic_rel" 1)
                              (("1" (grind) nil nil)) nil))
                            nil)
                           ("2" (grind) nil nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (inst 1 "i+1")
                    (("2" (expand "SOMERUNS_tr")
                      (("2" (expand "SOMERUNS_st")
                        (("2" (skeep*)
                          (("2"
                            (lemma
                             "trace_semantic_rel_bounded_star_seq_switch_eg_con")
                            (("2"
                              (inst -1 "A" "i" "append(trace_1,trace)"
                               "P" "Q")
                              (("1"
                                (assert)
                                (("1"
                                  (split -1)
                                  (("1"
                                    (skeep)
                                    (("1"
                                      (inst 1 "tr1")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (case
                                           "NOT init_env(tr1) = x!1")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (hide 2)
                                              (("1"
                                                (expand "init_env" -2)
                                                (("1"
                                                  (lemma
                                                   "car_append[TraceState]")
                                                  (("1"
                                                    (expand
                                                     "init_env"
                                                     -6)
                                                    (("1"
                                                      (lift-if -3)
                                                      (("1"
                                                        (split -3)
                                                        (("1"
                                                          (flatten)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (inst?)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (lift-if
                                                                   -2)
                                                                  (("1"
                                                                    (split
                                                                     -2)
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (expand
                                                                           "init_env")
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (expand
                                                                         "init_env")
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (typepred
                                                                 "trace_1")
                                                                (("2"
                                                                  (expand
                                                                   "wf_trace?"
                                                                   -1)
                                                                  (("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (flatten)
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (expand
                                                               "init_env")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (inst?)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (lift-if
                                                                       -1)
                                                                      (("1"
                                                                        (split
                                                                         -1)
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (flatten)
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (typepred
                                                                     "trace_1")
                                                                    (("2"
                                                                      (expand
                                                                       "wf_trace?")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (assert)
                                            (("2"
                                              (split 1)
                                              (("1"
                                                (expand "BSTAR" 1)
                                                (("1"
                                                  (expand
                                                   "trace_semantic_rel"
                                                   1)
                                                  (("1"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (assert)
                                                (("2"
                                                  (hide 1)
                                                  (("2"
                                                    (expand "normDLEG")
                                                    (("2"
                                                      (split 1)
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (split -10)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (expand
                                                               "final_env")
                                                              (("1"
                                                                (lemma
                                                                 "last_append[TraceState]")
                                                                (("1"
                                                                  (inst?)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (split
                                                                       1)
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (typepred
                                                                     "trace")
                                                                    (("2"
                                                                      (expand
                                                                       "wf_trace?"
                                                                       -1)
                                                                      (("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (flatten)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (expand
                                                                 "finite_trace?")
                                                                (("2"
                                                                  (lemma
                                                                   "last_append[TraceState]")
                                                                  (("2"
                                                                    (inst?)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (flatten)
                                                        (("2"
                                                          (split -9)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (expand
                                                               "finite_trace?")
                                                              (("1"
                                                                (lemma
                                                                 "last_append[TraceState]")
                                                                (("1"
                                                                  (inst?)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (typepred
                                                                         "trace")
                                                                        (("2"
                                                                          (expand
                                                                           "wf_trace?")
                                                                          (("2"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (assert)
                                                            (("2"
                                                              (flatten)
                                                              (("2"
                                                                (rewrite
                                                                 "DLEG_nth")
                                                                (("2"
                                                                  (rewrite
                                                                   "DLEG_nth")
                                                                  (("2"
                                                                    (skeep)
                                                                    (("2"
                                                                      (typepred
                                                                       "j")
                                                                      (("2"
                                                                        (inst
                                                                         4
                                                                         "length(trace_1)+j")
                                                                        (("1"
                                                                          (split)
                                                                          (("1"
                                                                            (lemma
                                                                             "length_append[TraceState]")
                                                                            (("1"
                                                                              (inst?)
                                                                              (("1"
                                                                                (lemma
                                                                                 "nth_append[TraceState]")
                                                                                (("1"
                                                                                  (inst?)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (skeep)
                                                                              (("2"
                                                                                (split
                                                                                 3)
                                                                                (("1"
                                                                                  (flatten)
                                                                                  (("1"
                                                                                    (typepred
                                                                                     "i!1")
                                                                                    (("1"
                                                                                      (lemma
                                                                                       "length_append[TraceState]")
                                                                                      (("1"
                                                                                        (inst?)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (lemma
                                                                                             "nth_append[TraceState]")
                                                                                            (("1"
                                                                                              (inst
                                                                                               -6
                                                                                               "i!1")
                                                                                              (("1"
                                                                                                (inst?)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (split
                                                                                                     -6)
                                                                                                    (("1"
                                                                                                      (grind)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (skeep)
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             1
                                                                                                             "T")
                                                                                                            (("2"
                                                                                                              (skeep)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -2
                                                                                                                 "t")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("3"
                                                                                                      (flatten)
                                                                                                      (("3"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (lemma
                                                                                       "length_append[TraceState]")
                                                                                      (("2"
                                                                                        (lemma
                                                                                         "nth_append[TraceState]")
                                                                                        (("2"
                                                                                          (inst?
                                                                                           -2)
                                                                                          (("2"
                                                                                            (inst
                                                                                             -4
                                                                                             "i!1")
                                                                                            (("1"
                                                                                              (inst?
                                                                                               -1)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (split
                                                                                                   -4)
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("3"
                                                                                                    (flatten)
                                                                                                    (("3"
                                                                                                      (assert)
                                                                                                      (("3"
                                                                                                        (skeep)
                                                                                                        (("3"
                                                                                                          (inst
                                                                                                           -2
                                                                                                           "t")
                                                                                                          (("3"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("4"
                                                                                                    (flatten)
                                                                                                    (("4"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (lemma
                                                                             "length_append[TraceState]")
                                                                            (("2"
                                                                              (inst?)
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (hide 2)
                                    (("2"
                                      (expand "trace_semantic_rel" 1)
                                      (("2"
                                        (flatten)
                                        (("2"
                                          (inst 1 "trace_1" "trace")
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (typepred "trace_1" "trace")
                                (("2"
                                  (split 1)
                                  (("1"
                                    (expand "wf_trace?")
                                    (("1"
                                      (lemma
                                       "length_append[TraceState]")
                                      (("1"
                                        (inst?)
                                        (("1"
                                          (lemma
                                           "nth_append[TraceState]")
                                          (("1"
                                            (split 1)
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (assert)
                                                (("1" (grind) nil nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (flatten)
                                              (("2"
                                                (lemma
                                                 "car_append[TraceState]")
                                                (("2"
                                                  (inst?)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("3"
                                              (skeep)
                                              (("3"
                                                (inst
                                                 -1
                                                 "trace_1"
                                                 "trace"
                                                 "i!1")
                                                (("3"
                                                  (assert)
                                                  (("3"
                                                    (lift-if -1)
                                                    (("3"
                                                      (split -1)
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (inst
                                                           -5
                                                           "i!1")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (expand
                                                             "valid_trace?"
                                                             -8)
                                                            (("2"
                                                              (typepred
                                                               "trace_1")
                                                              (("2"
                                                                (expand
                                                                 "finite_trace?"
                                                                 -2)
                                                                (("2"
                                                                  (lemma
                                                                   "last_append[TraceState]")
                                                                  (("2"
                                                                    (inst?)
                                                                    (("2"
                                                                      (expand
                                                                       "last")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (flatten)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (inst
                                                             -7
                                                             "i!1-length(trace_1)")
                                                            (("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (expand "valid_trace?")
                                    (("2"
                                      (flatten)
                                      (("2"
                                        (lemma
                                         "last_append[TraceState]")
                                        (("2"
                                          (inst?)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (expand "finite_trace?")
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (expand "wf_trace?")
                                            (("2"
                                              (flatten)
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (flatten)
            (("2" (skeep)
              (("2" (case "i=0")
                (("1" (inst 1 "0")
                  (("1" (expand "DLOR" 1)
                    (("1" (flatten)
                      (("1" (hide 2)
                        (("1" (expand "BSTAR" -2)
                          (("1" (expand "SOMERUNS_tr" -2)
                            (("1" (skeep)
                              (("1"
                                (assert)
                                (("1"
                                  (expand "trace_semantic_rel" -3)
                                  (("1"
                                    (split -3)
                                    (("1" (grind) nil nil)
                                     ("2"
                                      (flatten)
                                      (("2" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2"
                  (name "Ilo"
                        "min[nat](LAMBDA(i:nat): SOMERUNS_tr(BSTAR(A, i), normDLEG(P, Q))(x!1))")
                  (("1" (case "Ilo=0")
                    (("1" (inst 2 "0")
                      (("1" (typepred "Ilo")
                        (("1" (expand "DLOR" 2)
                          (("1" (replace -3)
                            (("1" (expand "BSTAR" -1)
                              (("1"
                                (hide -5 -2)
                                (("1"
                                  (flatten)
                                  (("1"
                                    (hide 3)
                                    (("1"
                                      (hide -3)
                                      (("1"
                                        (expand "SOMERUNS_tr" -1)
                                        (("1"
                                          (skeep)
                                          (("1"
                                            (expand
                                             "trace_semantic_rel"
                                             -2)
                                            (("1"
                                              (split -2)
                                              (("1" (grind) nil nil)
                                               ("2"
                                                (flatten)
                                                (("2" (grind) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (inst 3 "Ilo-1")
                      (("1" (expand "DLOR")
                        (("1" (hide -2)
                          (("1" (typepred "Ilo")
                            (("1" (flatten)
                              (("1"
                                (expand "SOMERUNS_st" 4)
                                (("1"
                                  (expand "SOMERUNS_tr" -1)
                                  (("1"
                                    (skeep)
                                    (("1"
                                      (expand "BSTAR" -2)
                                      (("1"
                                        (split -2)
                                        (("1" (flatten) nil nil)
                                         ("2"
                                          (flatten)
                                          (("2"
                                            (assert)
                                            (("2"
                                              (expand
                                               "trace_semantic_rel"
                                               -1)
                                              (("2"
                                                (split -1)
                                                (("1"
                                                  (hide -4)
                                                  (("1"
                                                    (lemma
                                                     "trace_semantic_rel_bounded_star_seq_switch_eg")
                                                    (("1"
                                                      (inst
                                                       -1
                                                       "A"
                                                       "Ilo-1"
                                                       "trace"
                                                       "P"
                                                       "Q")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (skeep)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (hide -4)
                                                              (("1"
                                                                (expand
                                                                 "trace_semantic_rel"
                                                                 -1)
                                                                (("1"
                                                                  (split
                                                                   -1)
                                                                  (("1"
                                                                    (skeep)
                                                                    (("1"
                                                                      (replace
                                                                       -6
                                                                       -8)
                                                                      (("1"
                                                                        (hide
                                                                         -6)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (inst
                                                                             5
                                                                             "trace1")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (split
                                                                                 5)
                                                                                (("1"
                                                                                  (expand
                                                                                   "init_env")
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "car_append[TraceState]")
                                                                                    (("1"
                                                                                      (inst?)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (lift-if
                                                                                           1)
                                                                                          (("1"
                                                                                            (split
                                                                                             1)
                                                                                            (("1"
                                                                                              (flatten)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (flatten)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (typepred
                                                                                         "trace1")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "wf_trace?"
                                                                                           -1)
                                                                                          (("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "SOMERUNS_tr"
                                                                                     1)
                                                                                    (("2"
                                                                                      (inst
                                                                                       1
                                                                                       "trace2")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (hide
                                                                                           -8)
                                                                                          (("1"
                                                                                            (hide
                                                                                             -8)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "normDLEG")
                                                                                              (("1"
                                                                                                (split
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (split
                                                                                                     -7)
                                                                                                    (("1"
                                                                                                      (flatten)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "final_env")
                                                                                                          (("1"
                                                                                                            (lemma
                                                                                                             "last_append[TraceState]")
                                                                                                            (("1"
                                                                                                              (inst?)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (split
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (flatten)
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (flatten)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (typepred
                                                                                                                 "trace2")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "wf_trace?"
                                                                                                                   -1)
                                                                                                                  (("2"
                                                                                                                    (flatten)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "finite_trace?")
                                                                                                          (("2"
                                                                                                            (flatten)
                                                                                                            (("2"
                                                                                                              (lemma
                                                                                                               "last_append[TraceState]")
                                                                                                              (("2"
                                                                                                                (inst?)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (typepred
                                                                                                                   "trace2")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "wf_trace?"
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (flatten)
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (flatten)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (split
                                                                                                       -6)
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (lemma
                                                                                                           "last_append[TraceState]")
                                                                                                          (("1"
                                                                                                            (inst?)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "finite_trace?")
                                                                                                              (("1"
                                                                                                                (flatten)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (typepred
                                                                                                                 "trace2")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "wf_trace?"
                                                                                                                   -1)
                                                                                                                  (("2"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (flatten)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (hide
                                                                                                             1
                                                                                                             2)
                                                                                                            (("2"
                                                                                                              (lemma
                                                                                                               "DLEG_nth")
                                                                                                              (("2"
                                                                                                                (inst?)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (hide
                                                                                                                     -2)
                                                                                                                    (("2"
                                                                                                                      (rewrite
                                                                                                                       "DLEG_nth")
                                                                                                                      (("2"
                                                                                                                        (skeep)
                                                                                                                        (("2"
                                                                                                                          (typepred
                                                                                                                           "j")
                                                                                                                          (("2"
                                                                                                                            (lemma
                                                                                                                             "length_append[TraceState]")
                                                                                                                            (("2"
                                                                                                                              (inst?)
                                                                                                                              (("2"
                                                                                                                                (lemma
                                                                                                                                 "nth_append[TraceState]")
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (inst?
                                                                                                                                     -1)
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         -1
                                                                                                                                         "j")
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (lift-if
                                                                                                                                             -1)
                                                                                                                                            (("2"
                                                                                                                                              (split
                                                                                                                                               -1)
                                                                                                                                              (("1"
                                                                                                                                                (flatten)
                                                                                                                                                (("1"
                                                                                                                                                  (inst
                                                                                                                                                   2
                                                                                                                                                   "0")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (split
                                                                                                                                                       2)
                                                                                                                                                      (("1"
                                                                                                                                                        (typepred
                                                                                                                                                         "trace2")
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "wf_trace?"
                                                                                                                                                           -1)
                                                                                                                                                          (("1"
                                                                                                                                                            (flatten)
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              (("1"
                                                                                                                                                                (inst
                                                                                                                                                                 -2
                                                                                                                                                                 "0")
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (typepred
                                                                                                                                                                   "trace2")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "length"
                                                                                                                                                                     1
                                                                                                                                                                     1)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "wf_trace?"
                                                                                                                                                                         -1)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "nth"
                                                                                                                                                                           -)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (propax)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (assert)
                                                                                                                                                        (("2"
                                                                                                                                                          (skeep)
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            (("2"
                                                                                                                                                              (inst
                                                                                                                                                               -5
                                                                                                                                                               "i!1+length(trace1)-j")
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                (("2"
                                                                                                                                                                  (lemma
                                                                                                                                                                   "nth_append[TraceState]")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (inst
                                                                                                                                                                     -1
                                                                                                                                                                     "trace1"
                                                                                                                                                                     "trace2"
                                                                                                                                                                     "length(trace1)+i!1")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (split
                                                                                                                                                                         -6)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (flatten)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (flatten)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("3"
                                                                                                                                                                          (flatten)
                                                                                                                                                                          (("3"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("3"
                                                                                                                                                                              (case
                                                                                                                                                                               "i!1=0")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (inst
                                                                                                                                                                                   3
                                                                                                                                                                                   "0")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (skeep)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       -3
                                                                                                                                                                                       "t")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil)
                                                                                                                                                                                   ("2"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (typepred
                                                                                                                                                                                       " D(nth[TraceState](trace2, i!1))")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "dd?"
                                                                                                                                                                                         -1)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (hide
                                                                                                                                                                                           -1)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (skeep)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (replace
                                                                                                                                                                                               -1)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (hide-all-but
                                                                                                                                                                                                 1)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (grind)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (skeep)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (inst
                                                                                                                                                                                     -2
                                                                                                                                                                                     "t")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      nil
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("4"
                                                                                                                                                                          (flatten)
                                                                                                                                                                          (("4"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("4"
                                                                                                                                                                              (split
                                                                                                                                                                               3)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (flatten)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (inst
                                                                                                                                                                                     1
                                                                                                                                                                                     "0")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (skeep)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (inst
                                                                                                                                                                                         -3
                                                                                                                                                                                         "t")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil)
                                                                                                                                                                                     ("2"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "hp"
                                                                                                                                                                                       1)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (flatten)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (skeep)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (inst
                                                                                                                                                                                     -2
                                                                                                                                                                                     "t")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      nil
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (typepred
                                                                                                                                                     "trace2")
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "wf_trace?"
                                                                                                                                                       -1)
                                                                                                                                                      (("2"
                                                                                                                                                        (flatten)
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          (("2"
                                                                                                                                                            (expand
                                                                                                                                                             "length"
                                                                                                                                                             2)
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (flatten)
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  (("2"
                                                                                                                                                    (inst
                                                                                                                                                     3
                                                                                                                                                     "j-length(trace1)")
                                                                                                                                                    (("2"
                                                                                                                                                      (assert)
                                                                                                                                                      (("2"
                                                                                                                                                        (skeep)
                                                                                                                                                        (("2"
                                                                                                                                                          (typepred
                                                                                                                                                           "i!1")
                                                                                                                                                          (("2"
                                                                                                                                                            (typepred
                                                                                                                                                             "i!1")
                                                                                                                                                            (("2"
                                                                                                                                                              (lemma
                                                                                                                                                               "nth_append[TraceState]")
                                                                                                                                                              (("2"
                                                                                                                                                                (inst
                                                                                                                                                                 -1
                                                                                                                                                                 "trace1"
                                                                                                                                                                 "trace2"
                                                                                                                                                                 _)
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst
                                                                                                                                                                   -1
                                                                                                                                                                   "i!1+j")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst
                                                                                                                                                                       -7
                                                                                                                                                                       "i!1")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (split
                                                                                                                                                                         -7)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (flatten)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (flatten)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("3"
                                                                                                                                                                          (flatten)
                                                                                                                                                                          (("3"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("3"
                                                                                                                                                                              (flatten)
                                                                                                                                                                              (("3"
                                                                                                                                                                                (split
                                                                                                                                                                                 -2)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (flatten)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (skeep)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (inst
                                                                                                                                                                                         5
                                                                                                                                                                                         "T")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (skeep)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (inst
                                                                                                                                                                                             -2
                                                                                                                                                                                             "t")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil)
                                                                                                                                                                                 ("2"
                                                                                                                                                                                  (flatten)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("4"
                                                                                                                                                                          (flatten)
                                                                                                                                                                          (("4"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("4"
                                                                                                                                                                              (split
                                                                                                                                                                               -1)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (flatten)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (skeep)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       -2
                                                                                                                                                                                       "t")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (flatten)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (typepred
                                                                                         "trace2")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "valid_trace?"
                                                                                           1)
                                                                                          (("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (typepred
                                                                                               "trace")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "valid_trace?"
                                                                                                 -2)
                                                                                                (("2"
                                                                                                  (lemma
                                                                                                   "last_append[TraceState]")
                                                                                                  (("2"
                                                                                                    (inst?)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "finite_trace?")
                                                                                                        (("2"
                                                                                                          (flatten)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (typepred
                                                                                                               "Ilo")
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -2
                                                                                                                 "Ilo-1")
                                                                                                                (("2"
                                                                                                                  (case
                                                                                                                   "inf_diff?(last(trace))")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "SOMERUNS_tr"
                                                                                                                       1)
                                                                                                                      (("1"
                                                                                                                        (lemma
                                                                                                                         "last_append[TraceState]")
                                                                                                                        (("1"
                                                                                                                          (inst?)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (typepred
                                                                                                                               "tr1")
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "valid_trace?"
                                                                                                                                 -2)
                                                                                                                                (("1"
                                                                                                                                  (lemma
                                                                                                                                   "last_append[TraceState]")
                                                                                                                                  (("1"
                                                                                                                                    (inst?)
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "finite_trace?")
                                                                                                                                        (("1"
                                                                                                                                          (propax)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (typepred
                                                                                                                       "tr1")
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "valid_trace?"
                                                                                                                         -2)
                                                                                                                        (("2"
                                                                                                                          (lemma
                                                                                                                           "last_append[TraceState]")
                                                                                                                          (("2"
                                                                                                                            (inst?)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "finite_trace?")
                                                                                                                                (("2"
                                                                                                                                  (propax)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("3"
                                                                                                                    (assert)
                                                                                                                    (("3"
                                                                                                                      (typepred
                                                                                                                       "trace")
                                                                                                                      (("3"
                                                                                                                        (expand
                                                                                                                         "wf_trace?")
                                                                                                                        (("3"
                                                                                                                          (propax)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (typepred
                                                                         "Ilo")
                                                                        (("2"
                                                                          (inst
                                                                           -2
                                                                           "Ilo-1")
                                                                          (("2"
                                                                            (case
                                                                             "inf_diff?(last(tr1))")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (expand
                                                                                 "SOMERUNS_tr"
                                                                                 1)
                                                                                (("1"
                                                                                  (inst
                                                                                   1
                                                                                   "tr1")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (typepred
                                                                                 "tr1")
                                                                                (("2"
                                                                                  (expand
                                                                                   "valid_trace?"
                                                                                   -2)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "finite_trace?"
                                                                                       -2)
                                                                                      (("2"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("3"
                                                                              (typepred
                                                                               "tr1")
                                                                              (("3"
                                                                                (expand
                                                                                 "valid_trace?"
                                                                                 -2)
                                                                                (("3"
                                                                                  (assert)
                                                                                  (("3"
                                                                                    (expand
                                                                                     "wf_trace?"
                                                                                     -1)
                                                                                    (("3"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (inst -4 "Ilo-1")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (expand
                                                       "SOMERUNS_tr"
                                                       2)
                                                      (("2"
                                                        (inst
                                                         2
                                                         "trace")
                                                        (("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (assert) nil nil))
                      nil))
                    nil)
                   ("2" (expand "nonempty?" 1)
                    (("2" (expand "empty?" -1)
                      (("2" (inst -1 "i")
                        (("2" (expand "member" 1)
                          (("2" (propax) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Environment type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (DLOR const-decl "bool" bool_expr nil)
    (HP type-decl nil HP_adt nil)
    (SOMERUNS_st const-decl "bool" ltl_expr nil)
    (BSTAR def-decl "HP" bounded_star_semantics nil)
    (TraceState type-decl nil TraceState_adt nil)
    (list type-decl nil list_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (SOMERUNS_tr const-decl "bool" ltl_expr nil)
    (normDLEG const-decl "bool" ltl_expr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (STATE adt-constructor-decl "[Environment -> (state?)]"
     TraceState_adt nil)
    (x!1 skolem-const-decl "[nat -> real]" temporal_logic nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (DLBOOL const-decl "bool" bool_expr nil)
    (length def-decl "nat" list_props nil)
    (nth def-decl "T" list_props nil)
    (last const-decl "T" more_list_props structures)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (final_env const-decl "Environment" trace_semantics nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (init_env const-decl "Environment" trace_semantics nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (< const-decl "bool" reals nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (below type-eq-decl nil naturalnumbers nil)
    (TRUE const-decl "bool" booleans nil)
    (append def-decl "list[T]" list_props nil)
    (trace_1 skolem-const-decl "(finite_trace?)" temporal_logic nil)
    (trace skolem-const-decl "(valid_trace?)" temporal_logic nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (car_append formula-decl nil more_list_props structures)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (last_append formula-decl nil more_list_props structures)
    (nth_append formula-decl nil more_list_props structures)
    (length_append formula-decl nil list_props nil)
    (i!1 skolem-const-decl
     "below(length(append(trace_1, trace)) - length(trace_1) - j)"
     temporal_logic nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (state_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (dd? const-decl "bool" hp_expr nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (closed_interval? const-decl "bool" interval_def ODEs)
    (closed_interval const-decl "(closed_interval?(a, b))" interval_def
     ODEs)
    (D adt-accessor-decl "[(state_diff?) ->
   {D: (dd?) | EXISTS (b: posreal): D = closed_interval(0, b)}]"
     TraceState_adt nil)
    (below type-eq-decl nil nat_types nil)
    (j skolem-const-decl "below(length(trace))" temporal_logic nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (DLEG_nth formula-decl nil ltl_expr nil)
    (i!1 skolem-const-decl
     "below(length(append[TraceState](trace_1, trace)) - 1)"
     temporal_logic nil)
    (trace_semantic_rel_bounded_star_seq_switch_eg_con formula-decl nil
     trace_bounded_star_semantics nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (min const-decl "{a | S(a) AND (FORALL x: S(x) IMPLIES a <= x)}"
         min_nat nil)
    (<= const-decl "bool" reals nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (nonempty? const-decl "bool" sets nil)
    (set type-eq-decl nil sets nil)
    (A skolem-const-decl "HP" temporal_logic nil)
    (P skolem-const-decl "BoolExpr" temporal_logic nil)
    (Q skolem-const-decl "BoolExpr" temporal_logic nil)
    (Ilo skolem-const-decl "{a |
   SOMERUNS_tr(BSTAR(A, a), normDLEG(P, Q))(x!1) AND
    FORALL (x: nat):
      SOMERUNS_tr(BSTAR(A, x), normDLEG(P, Q))(x!1) IMPLIES a <= x}"
     temporal_logic nil)
    (trace2 skolem-const-decl "Trace" temporal_logic nil)
    (hp const-decl "bool" interval_def ODEs)
    (i!1 skolem-const-decl "below(length(trace2))" temporal_logic nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (inf_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (trace1 skolem-const-decl "Trace" temporal_logic nil)
    (trace_semantic_rel_bounded_star_seq_switch_eg formula-decl nil
     trace_bounded_star_semantics nil)
    (empty? const-decl "bool" sets nil)
    (member const-decl "bool" sets nil))
   shostak))
 (dltl_BSTARGE_dual 0
  (dltl_BSTARGE_dual-1 nil 3904050901
   ("" (skeep)
    (("" (decompose-equality 1)
      (("" (iff)
        (("" (split 1)
          (("1" (flatten)
            (("1" (skeep)
              (("1" (expand "DLOR" -1)
                (("1" (split -1)
                  (("1" (inst 1 "0")
                    (("1" (expand "BSTAR" 1)
                      (("1" (expand "SOMERUNS_tr" 1)
                        (("1" (inst 1 "(: STATE(x!1) :)")
                          (("1" (split 1)
                            (("1" (grind) nil nil)
                             ("2" (expand "trace_semantic_rel" 1)
                              (("2"
                                (flatten)
                                (("2" (grind) nil nil))
                                nil))
                              nil)
                             ("3" (expand "normDLGE" 1)
                              (("3" (grind) nil nil)) nil))
                            nil)
                           ("2" (grind) nil nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (inst 1 "i+1")
                    (("2" (expand "BSTAR" 1)
                      (("2" (expand "SOMERUNS_tr" 1)
                        (("2" (expand "SOMERUNS_st" -1)
                          (("2" (skeep)
                            (("2" (expand "SOMERUNS_tr" -3)
                              (("2"
                                (skeep)
                                (("2"
                                  (lemma
                                   "trace_semantic_rel_bounded_star_seq_switch_ge_con")
                                  (("2"
                                    (inst
                                     -1
                                     "A"
                                     "i"
                                     "append(trace,trace_1)"
                                     "P"
                                     "Q")
                                    (("1"
                                      (assert)
                                      (("1"
                                        (split -1)
                                        (("1"
                                          (skeep)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (inst 1 "tr1")
                                              (("1"
                                                (split 1)
                                                (("1"
                                                  (expand "init_env")
                                                  (("1"
                                                    (lemma
                                                     "car_append[TraceState]")
                                                    (("1"
                                                      (inst?)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (lift-if -3)
                                                          (("1"
                                                            (split -3)
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (lift-if
                                                                   1)
                                                                  (("1"
                                                                    (split
                                                                     1)
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (flatten)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (lift-if
                                                                   2)
                                                                  (("2"
                                                                    (split
                                                                     2)
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (assert)
                                                        (("2"
                                                          (typepred
                                                           "trace")
                                                          (("2"
                                                            (expand
                                                             "wf_trace?")
                                                            (("2"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (assert)
                                                  (("2"
                                                    (expand
                                                     "trace_semantic_rel"
                                                     1
                                                     1)
                                                    (("2"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("3"
                                                  (assert)
                                                  (("3"
                                                    (hide 1)
                                                    (("3"
                                                      (hide -3)
                                                      (("3"
                                                        (expand
                                                         "normDLGE")
                                                        (("3"
                                                          (split 1)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (split
                                                               -8)
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (expand
                                                                   "final_env")
                                                                  (("1"
                                                                    (lemma
                                                                     "last_append[TraceState]")
                                                                    (("1"
                                                                      (inst?)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (split
                                                                           1)
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (typepred
                                                                         "trace_1")
                                                                        (("2"
                                                                          (expand
                                                                           "wf_trace?"
                                                                           -1)
                                                                          (("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (flatten)
                                                                (("2"
                                                                  (expand
                                                                   "finite_trace?")
                                                                  (("2"
                                                                    (lemma
                                                                     "last_append[TraceState]")
                                                                    (("2"
                                                                      (inst?)
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (flatten)
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (flatten)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (split
                                                                 -7)
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (expand
                                                                     "finite_trace?")
                                                                    (("1"
                                                                      (lemma
                                                                       "last_append[TraceState]")
                                                                      (("1"
                                                                        (inst?)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (flatten)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (typepred
                                                                               "trace_1")
                                                                              (("2"
                                                                                (expand
                                                                                 "wf_trace?"
                                                                                 -1)
                                                                                (("2"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (lemma
                                                                       "DLGE_nth")
                                                                      (("2"
                                                                        (inst?)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (hide
                                                                             -2)
                                                                            (("2"
                                                                              (lemma
                                                                               "DLGE_nth")
                                                                              (("2"
                                                                                (inst?)
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (hide
                                                                                     4)
                                                                                    (("2"
                                                                                      (skeep)
                                                                                      (("2"
                                                                                        (typepred
                                                                                         "j")
                                                                                        (("2"
                                                                                          (case
                                                                                           "j <= length[TraceState](trace)-1")
                                                                                          (("1"
                                                                                            (lemma
                                                                                             "nth_append[TraceState]")
                                                                                            (("1"
                                                                                              (inst?)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "length_append[TraceState]")
                                                                                                  (("1"
                                                                                                    (inst?
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -5
                                                                                                         "0")
                                                                                                        (("1"
                                                                                                          (split
                                                                                                           -5)
                                                                                                          (("1"
                                                                                                            (typepred
                                                                                                             "trace_1")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "valid_trace?"
                                                                                                               -2)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "wf_trace?"
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (flatten)
                                                                                                                  (("1"
                                                                                                                    (hide
                                                                                                                     3)
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -2
                                                                                                                       "0")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "last"
                                                                                                                           -)
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "nth"
                                                                                                                               -2
                                                                                                                               1)
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "length"
                                                                                                                                 1
                                                                                                                                 1)
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "length"
                                                                                                                                     -2)
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "nth"
                                                                                                                                         -3)
                                                                                                                                        (("2"
                                                                                                                                          (propax)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (skeep
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (case
                                                                                                                 "i!1=0")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     3
                                                                                                                     "i!1 - j + length(trace)")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (lemma
                                                                                                                         "nth_append[TraceState]")
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -1
                                                                                                                           _
                                                                                                                           _
                                                                                                                           "length(trace)+i!1")
                                                                                                                          (("1"
                                                                                                                            (inst?
                                                                                                                             -1)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (split
                                                                                                                                 -3)
                                                                                                                                (("1"
                                                                                                                                  (flatten)
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (flatten)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       -2
                                                                                                                                       "0")
                                                                                                                                      (("1"
                                                                                                                                        (skeep
                                                                                                                                         -2)
                                                                                                                                        (("1"
                                                                                                                                          (inst
                                                                                                                                           4
                                                                                                                                           "t")
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (typepred
                                                                                                                                         " D(nth[TraceState](trace_1, i!1))")
                                                                                                                                        (("2"
                                                                                                                                          (skeep
                                                                                                                                           -2)
                                                                                                                                          (("2"
                                                                                                                                            (replace
                                                                                                                                             -2)
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "closed_interval"
                                                                                                                                                 1)
                                                                                                                                                (("2"
                                                                                                                                                  (propax)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("3"
                                                                                                                                  (flatten)
                                                                                                                                  (("3"
                                                                                                                                    (assert)
                                                                                                                                    (("3"
                                                                                                                                      (inst
                                                                                                                                       -2
                                                                                                                                       "0")
                                                                                                                                      (("1"
                                                                                                                                        (skeep)
                                                                                                                                        (("1"
                                                                                                                                          (inst
                                                                                                                                           5
                                                                                                                                           "t")
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (expand
                                                                                                                                         "hp"
                                                                                                                                         1)
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     4
                                                                                                                     "i!1 - j + length(trace)")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (lemma
                                                                                                                         "nth_append[TraceState]")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -1
                                                                                                                           _
                                                                                                                           _
                                                                                                                           "length(trace)+i!1")
                                                                                                                          (("2"
                                                                                                                            (inst?)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (split
                                                                                                                                 -2)
                                                                                                                                (("1"
                                                                                                                                  (flatten)
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (flatten)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (skeep)
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         5
                                                                                                                                         "t")
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("3"
                                                                                                                                  (flatten)
                                                                                                                                  (("3"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (typepred
                                                                                                             "trace_1")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "wf_trace?"
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (flatten)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "length"
                                                                                                                     2)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (flip-ineq
                                                                                             1)
                                                                                            (("2"
                                                                                              (inst
                                                                                               -3
                                                                                               "j - length(trace)")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (split
                                                                                                   -3)
                                                                                                  (("1"
                                                                                                    (typepred
                                                                                                     "trace_1")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "valid_trace?"
                                                                                                       -2)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "wf_trace?"
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (flatten)
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -2
                                                                                                             "j-length(trace)")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "last"
                                                                                                                 -2)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (lemma
                                                                                                                     "length_append[TraceState]")
                                                                                                                    (("2"
                                                                                                                      (inst?)
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (skeep
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (typepred
                                                                                                       "i!1")
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         3
                                                                                                         "i!1")
                                                                                                        (("1"
                                                                                                          (split
                                                                                                           3)
                                                                                                          (("1"
                                                                                                            (lemma
                                                                                                             "nth_append[TraceState]")
                                                                                                            (("1"
                                                                                                              (inst?)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (flatten)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (split
                                                                                                                 -3)
                                                                                                                (("1"
                                                                                                                  (flatten)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (lemma
                                                                                                                       "nth_append[TraceState]")
                                                                                                                      (("1"
                                                                                                                        (inst?)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (flatten)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (lemma
                                                                                                                       "nth_append[TraceState]")
                                                                                                                      (("2"
                                                                                                                        (inst?)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (skeep)
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -3
                                                                                                                               "T")
                                                                                                                              (("2"
                                                                                                                                (skeep)
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   2
                                                                                                                                   "t")
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("3"
                                                                                                                  (flatten)
                                                                                                                  (("3"
                                                                                                                    (lemma
                                                                                                                     "nth_append[TraceState]")
                                                                                                                    (("3"
                                                                                                                      (inst?)
                                                                                                                      (("3"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("3"
                                                                                                            (flatten)
                                                                                                            (("3"
                                                                                                              (assert)
                                                                                                              (("3"
                                                                                                                (lemma
                                                                                                                 "nth_append[TraceState]")
                                                                                                                (("3"
                                                                                                                  (inst?)
                                                                                                                  (("3"
                                                                                                                    (assert)
                                                                                                                    (("3"
                                                                                                                      (split
                                                                                                                       -3)
                                                                                                                      (("1"
                                                                                                                        (flatten)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (flatten)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (skeep)
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               3
                                                                                                                               "t")
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("3"
                                                                                                                        (flatten)
                                                                                                                        (("3"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (lemma
                                                                                                             "length_append[TraceState]")
                                                                                                            (("2"
                                                                                                              (inst?)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (lemma
                                                                                                   "length_append[TraceState]")
                                                                                                  (("2"
                                                                                                    (inst?)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (expand
                                           "trace_semantic_rel"
                                           1)
                                          (("2"
                                            (flatten)
                                            (("2"
                                              (inst
                                               1
                                               "trace"
                                               "trace_1")
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (split 1)
                                      (("1"
                                        (expand "wf_trace?")
                                        (("1"
                                          (typepred "trace" "trace_1")
                                          (("1"
                                            (split 1)
                                            (("1"
                                              (expand "wf_trace?")
                                              (("1"
                                                (lemma
                                                 "length_append[TraceState]")
                                                (("1"
                                                  (lemma
                                                   "nth_append[TraceState]")
                                                  (("1"
                                                    (inst? -2)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (expand
                                                           "length"
                                                           -2)
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (assert)
                                              (("2"
                                                (lemma
                                                 "car_append[TraceState]")
                                                (("2"
                                                  (inst?)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (expand
                                                       "wf_trace?")
                                                      (("1"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (expand
                                                     "wf_trace?")
                                                    (("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("3"
                                              (skeep)
                                              (("3"
                                                (expand "wf_trace?")
                                                (("3"
                                                  (flatten)
                                                  (("3"
                                                    (lemma
                                                     "length_append[TraceState]")
                                                    (("3"
                                                      (lemma
                                                       "nth_append[TraceState]")
                                                      (("3"
                                                        (inst? -2)
                                                        (("3"
                                                          (inst?)
                                                          (("3"
                                                            (assert)
                                                            (("3"
                                                              (lift-if
                                                               -1)
                                                              (("3"
                                                                (split
                                                                 -1)
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (inst
                                                                       -5
                                                                       "i!1")
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil)
                                                                       ("2"
                                                                        (expand
                                                                         "valid_trace?")
                                                                        (("2"
                                                                          (typepred
                                                                           "trace")
                                                                          (("2"
                                                                            (expand
                                                                             "finite_trace?"
                                                                             -7)
                                                                            (("2"
                                                                              (expand
                                                                               "last"
                                                                               -7)
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (inst
                                                                       -7
                                                                       "i!1-length(trace)")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (expand "valid_trace?")
                                        (("2"
                                          (lemma
                                           "last_append[TraceState]")
                                          (("2"
                                            (inst?)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (expand
                                                     "finite_trace?")
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (typepred
                                                           "trace_1")
                                                          (("1"
                                                            (expand
                                                             "wf_trace?"
                                                             -1)
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (expand
                                                                   "valid_trace?"
                                                                   -3)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (expand
                                                                       "finite_trace?"
                                                                       -3)
                                                                      (("1"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (flatten)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (typepred "trace_1")
                                                  (("2"
                                                    (expand
                                                     "wf_trace?"
                                                     -1)
                                                    (("2"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (flatten)
            (("2" (skeep)
              (("2" (assert)
                (("2"
                  (name "Ilo"
                        "min[nat](LAMBDA(i:nat): SOMERUNS_tr(BSTAR(A, i), normDLGE(P, Q))(x!1))")
                  (("1" (hide -2)
                    (("1" (case "Ilo = 0")
                      (("1" (inst 1 "0")
                        (("1" (typepred "Ilo")
                          (("1" (replace -3)
                            (("1" (expand "BSTAR" -1)
                              (("1"
                                (hide -2 -4)
                                (("1"
                                  (expand "SOMERUNS_tr" -1)
                                  (("1"
                                    (skeep)
                                    (("1"
                                      (expand "trace_semantic_rel" -2)
                                      (("1"
                                        (split -2)
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (expand "normDLGE" -5)
                                            (("1"
                                              (expand "DLOR" 1)
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (split -5)
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (hide 2)
                                                      (("1"
                                                        (hide -5)
                                                        (("1"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (flatten)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (flatten)
                                          (("2"
                                            (assert)
                                            (("2" (grind) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (typepred "Ilo")
                        (("2" (inst 2 "Ilo-1")
                          (("1" (expand "DLOR" 2)
                            (("1" (flatten)
                              (("1"
                                (expand "SOMERUNS_st")
                                (("1"
                                  (expand "SOMERUNS_tr" -1)
                                  (("1"
                                    (skeep)
                                    (("1"
                                      (expand "BSTAR" -2)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (expand
                                           "trace_semantic_rel"
                                           -2)
                                          (("1"
                                            (split -2)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (lemma
                                                 "trace_semantic_rel_bounded_star_seq_switch_ge")
                                                (("1"
                                                  (inst
                                                   -1
                                                   "A"
                                                   "Ilo-1"
                                                   "trace"
                                                   "P"
                                                   "Q")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (skeep)
                                                      (("1"
                                                        (replace -2 -5)
                                                        (("1"
                                                          (hide -2)
                                                          (("1"
                                                            (hide -3)
                                                            (("1"
                                                              (expand
                                                               "trace_semantic_rel"
                                                               -1)
                                                              (("1"
                                                                (split
                                                                 -1)
                                                                (("1"
                                                                  (skeep)
                                                                  (("1"
                                                                    (inst
                                                                     3
                                                                     "trace1")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (split
                                                                         3)
                                                                        (("1"
                                                                          (lemma
                                                                           "car_append[TraceState]")
                                                                          (("1"
                                                                            (inst?)
                                                                            (("1"
                                                                              (expand
                                                                               "init_env")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (lift-if
                                                                                   1)
                                                                                  (("1"
                                                                                    (split
                                                                                     1)
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (typepred
                                                                               "trace1")
                                                                              (("2"
                                                                                (expand
                                                                                 "wf_trace?"
                                                                                 -1)
                                                                                (("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (expand
                                                                           "SOMERUNS_tr"
                                                                           1)
                                                                          (("2"
                                                                            (inst
                                                                             1
                                                                             "trace2")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (hide
                                                                                 -8
                                                                                 -9)
                                                                                (("1"
                                                                                  (hide
                                                                                   -8)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "normDLGE")
                                                                                    (("1"
                                                                                      (split)
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (split
                                                                                           -7)
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "last_append[TraceState]")
                                                                                              (("1"
                                                                                                (inst?)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "final_env")
                                                                                                    (("1"
                                                                                                      (split
                                                                                                       1)
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (flatten)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (typepred
                                                                                                   "trace2")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "wf_trace?"
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "finite_trace?")
                                                                                                (("2"
                                                                                                  (lemma
                                                                                                   "last_append[TraceState]")
                                                                                                  (("2"
                                                                                                    (inst?)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (typepred
                                                                                                           "trace2")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "wf_trace?"
                                                                                                             -1)
                                                                                                            (("2"
                                                                                                              (propax)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (split
                                                                                             -6)
                                                                                            (("1"
                                                                                              (flatten)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "finite_trace?")
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (split)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (lemma
                                                                                                             "last_append[TraceState]")
                                                                                                            (("1"
                                                                                                              (inst?)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (lemma
                                                                                                           "last_append[TraceState]")
                                                                                                          (("2"
                                                                                                            (inst?)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (flatten)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (lemma
                                                                                                   "DLGE_nth")
                                                                                                  (("2"
                                                                                                    (inst?)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (hide
                                                                                                         -2)
                                                                                                        (("2"
                                                                                                          (lemma
                                                                                                           "DLGE_nth")
                                                                                                          (("2"
                                                                                                            (inst?)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (hide
                                                                                                                 4)
                                                                                                                (("2"
                                                                                                                  (skeep)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (typepred
                                                                                                                       "j")
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         -2
                                                                                                                         "length(trace1)+j")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (lemma
                                                                                                                             "length_append[TraceState]")
                                                                                                                            (("1"
                                                                                                                              (inst?)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (split
                                                                                                                                   -3)
                                                                                                                                  (("1"
                                                                                                                                    (lemma
                                                                                                                                     "nth_append[TraceState]")
                                                                                                                                    (("1"
                                                                                                                                      (inst?)
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (inst
                                                                                                                                           -1
                                                                                                                                           "length(trace1)+j")
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (skeep)
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (typepred
                                                                                                                                         "i!1")
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           3
                                                                                                                                           "i!1")
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            (("2"
                                                                                                                                              (split
                                                                                                                                               -2)
                                                                                                                                              (("1"
                                                                                                                                                (flatten)
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (lemma
                                                                                                                                                     "nth_append[TraceState]")
                                                                                                                                                    (("1"
                                                                                                                                                      (inst?)
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        (("1"
                                                                                                                                                          (inst
                                                                                                                                                           -1
                                                                                                                                                           "length(trace1)+i!1+j")
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            (("1"
                                                                                                                                                              (split
                                                                                                                                                               -3)
                                                                                                                                                              (("1"
                                                                                                                                                                (flatten)
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (flatten)
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (skeep)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst
                                                                                                                                                                       -2
                                                                                                                                                                       "T")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (skeep)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (inst
                                                                                                                                                                           4
                                                                                                                                                                           "t")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("3"
                                                                                                                                                                (flatten)
                                                                                                                                                                (("3"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (flatten)
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  (("2"
                                                                                                                                                    (lemma
                                                                                                                                                     "nth_append[TraceState]")
                                                                                                                                                    (("2"
                                                                                                                                                      (inst?)
                                                                                                                                                      (("2"
                                                                                                                                                        (inst
                                                                                                                                                         -1
                                                                                                                                                         "length(trace1)+i!1+j")
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          (("2"
                                                                                                                                                            (split
                                                                                                                                                             -2)
                                                                                                                                                            (("1"
                                                                                                                                                              (flatten)
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (flatten)
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                (("2"
                                                                                                                                                                  (skeep)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (inst
                                                                                                                                                                     5
                                                                                                                                                                     "t")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("3"
                                                                                                                                                              (flatten)
                                                                                                                                                              (("3"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (lemma
                                                                                                                             "length_append[TraceState]")
                                                                                                                            (("2"
                                                                                                                              (inst?)
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (typepred
                                                                               "trace2")
                                                                              (("2"
                                                                                (typepred
                                                                                 "tr1")
                                                                                (("2"
                                                                                  (expand
                                                                                   "valid_trace?")
                                                                                  (("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (lemma
                                                                                       "last_append[TraceState]")
                                                                                      (("2"
                                                                                        (inst?)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "finite_trace?")
                                                                                            (("2"
                                                                                              (flatten)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (typepred
                                                                       "tr1")
                                                                      (("2"
                                                                        (expand
                                                                         "valid_trace?"
                                                                         -2)
                                                                        (("2"
                                                                          (inst
                                                                           3
                                                                           "tr1")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (expand
                                                                               "SOMERUNS_tr"
                                                                               3)
                                                                              (("1"
                                                                                (inst
                                                                                 -8
                                                                                 "Ilo-1")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "SOMERUNS_tr"
                                                                                     1)
                                                                                    (("1"
                                                                                      (inst
                                                                                       1
                                                                                       "tr1")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (expand
                                                                               "finite_trace?")
                                                                              (("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (typepred
                                                                                   "tr1")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "valid_trace?"
                                                                                     -2)
                                                                                    (("2"
                                                                                      (inst
                                                                                       -10
                                                                                       "Ilo-1")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "SOMERUNS_tr"
                                                                                           1)
                                                                                          (("2"
                                                                                            (inst
                                                                                             1
                                                                                             "tr1")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (inst 3 "trace")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (inst -4 "Ilo-1")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (expand
                                                       "SOMERUNS_tr"
                                                       1)
                                                      (("1"
                                                        (inst
                                                         1
                                                         "trace")
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (inst -4 "Ilo-1")
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (expand
                                                     "SOMERUNS_tr"
                                                     2)
                                                    (("2"
                                                      (inst 2 "trace")
                                                      (("2"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (assert) nil nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (expand "nonempty?" 1)
                    (("2" (expand "empty?" -1)
                      (("2" (inst -1 "i")
                        (("2" (expand "member" 1)
                          (("2" (propax) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Environment type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (DLOR const-decl "bool" bool_expr nil)
    (HP type-decl nil HP_adt nil)
    (SOMERUNS_st const-decl "bool" ltl_expr nil)
    (BSTAR def-decl "HP" bounded_star_semantics nil)
    (TraceState type-decl nil TraceState_adt nil)
    (list type-decl nil list_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (SOMERUNS_tr const-decl "bool" ltl_expr nil)
    (normDLGE const-decl "bool" ltl_expr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (STATE adt-constructor-decl "[Environment -> (state?)]"
     TraceState_adt nil)
    (x!1 skolem-const-decl "[nat -> real]" temporal_logic nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (nth def-decl "T" list_props nil)
    (last const-decl "T" more_list_props structures)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (final_env const-decl "Environment" trace_semantics nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (DLBOOL const-decl "bool" bool_expr nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (length def-decl "nat" list_props nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (init_env const-decl "Environment" trace_semantics nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (< const-decl "bool" reals nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (below type-eq-decl nil naturalnumbers nil)
    (trace_semantic_rel_bounded_star_seq_switch_ge_con formula-decl nil
     trace_bounded_star_semantics nil)
    (i!1 skolem-const-decl
     "below(length(append[TraceState](trace, trace_1)) - 1)"
     temporal_logic nil)
    (last_append formula-decl nil more_list_props structures)
    (DLGE_nth formula-decl nil ltl_expr nil)
    (<= const-decl "bool" reals nil)
    (length_append formula-decl nil list_props nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (hp const-decl "bool" interval_def ODEs)
    (state_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (dd? const-decl "bool" hp_expr nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (closed_interval? const-decl "bool" interval_def ODEs)
    (closed_interval const-decl "(closed_interval?(a, b))" interval_def
     ODEs)
    (D adt-accessor-decl "[(state_diff?) ->
   {D: (dd?) | EXISTS (b: posreal): D = closed_interval(0, b)}]"
     TraceState_adt nil)
    (below type-eq-decl nil nat_types nil)
    (i!1 skolem-const-decl "below(length(trace_1))" temporal_logic nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (nth_append formula-decl nil more_list_props structures)
    (j skolem-const-decl "below(length(append(trace, trace_1)))"
     temporal_logic nil)
    (i!1 skolem-const-decl "below(length(trace) + length(trace_1) - j)"
     temporal_logic nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (car_append formula-decl nil more_list_props structures)
    (trace_1 skolem-const-decl "(valid_trace?)" temporal_logic nil)
    (trace skolem-const-decl "(finite_trace?)" temporal_logic nil)
    (append def-decl "list[T]" list_props nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (min const-decl "{a | S(a) AND (FORALL x: S(x) IMPLIES a <= x)}"
         min_nat nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (nonempty? const-decl "bool" sets nil)
    (set type-eq-decl nil sets nil)
    (max_ci const-decl "{rr: (d) | FORALL (x: (d)): x <= rr}"
     more_ci_props ODEs)
    (odd_minus_odd_is_even application-judgement "even_int" integers
     nil)
    (A skolem-const-decl "HP" temporal_logic nil)
    (P skolem-const-decl "BoolExpr" temporal_logic nil)
    (Q skolem-const-decl "BoolExpr" temporal_logic nil)
    (Ilo skolem-const-decl "{a |
   SOMERUNS_tr(BSTAR(A, a), normDLGE(P, Q))(x!1) AND
    FORALL (x: nat):
      SOMERUNS_tr(BSTAR(A, x), normDLGE(P, Q))(x!1) IMPLIES a <= x}"
     temporal_logic nil)
    (trace skolem-const-decl "(valid_trace?)" temporal_logic nil)
    (tr1 skolem-const-decl "(valid_trace?)" temporal_logic nil)
    (j skolem-const-decl "below(length(trace2))" temporal_logic nil)
    (trace2 skolem-const-decl "Trace" temporal_logic nil)
    (trace1 skolem-const-decl "Trace" temporal_logic nil)
    (trace_semantic_rel_bounded_star_seq_switch_ge formula-decl nil
     trace_bounded_star_semantics nil)
    (empty? const-decl "bool" sets nil)
    (member const-decl "bool" sets nil))
   shostak))
 (dltl_STAREG_dual 0
  (dltl_STAREG_dual-1 nil 3901701318
   ("" (skeep)
    (("" (decompose-equality 1)
      (("" (iff)
        (("" (split 1)
          (("1" (flatten)
            (("1" (lemma "someruns_tr_star")
              (("1" (inst?)
                (("1" (assert)
                  (("1" (hide 2)
                    (("1" (expand "DLOR" -1)
                      (("1" (case "P(x!1)")
                        (("1" (assert)
                          (("1" (inst 1 "0")
                            (("1" (expand "SOMERUNS_tr" 1)
                              (("1"
                                (inst 1 "(:STATE( x!1 ) :)")
                                (("1"
                                  (split 1)
                                  (("1" (grind) nil nil)
                                   ("2"
                                    (hide -2)
                                    (("2"
                                      (grind)
                                      (("2"
                                        (expand "trace_semantic_rel")
                                        (("2" (grind) nil nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("3"
                                    (expand "normDLEG" 1)
                                    (("3"
                                      (split 1)
                                      (("1"
                                        (flatten)
                                        (("1" (grind) nil nil))
                                        nil)
                                       ("2"
                                        (flatten)
                                        (("2" (grind) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2" (grind) nil nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (assert)
                          (("2" (lemma "someruns_st_star")
                            (("2" (inst?)
                              (("2"
                                (assert)
                                (("2"
                                  (lemma "dltl_BSTAREG_dual")
                                  (("2"
                                    (inst?)
                                    (("2"
                                      (decompose-equality -1)
                                      (("2"
                                        (inst -1 "x!1")
                                        (("2"
                                          (iff)
                                          (("2"
                                            (flatten)
                                            (("2"
                                              (split -1)
                                              (("1" (propax) nil nil)
                                               ("2"
                                                (hide 3)
                                                (("2"
                                                  (skeep -2)
                                                  (("2"
                                                    (inst 1 "i")
                                                    (("2"
                                                      (expand "DLOR" 1)
                                                      (("2"
                                                        (propax)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (flatten)
            (("2" (lemma "someruns_st_star")
              (("2" (lemma "someruns_tr_star")
                (("2" (inst? -1)
                  (("2" (assert)
                    (("2" (expand "DLOR" 1)
                      (("2" (flatten)
                        (("2" (assert)
                          (("2" (inst?)
                            (("2" (flatten)
                              (("2"
                                (assert)
                                (("2"
                                  (hide 3)
                                  (("2"
                                    (hide -2)
                                    (("2"
                                      (lemma "dltl_BSTAREG_dual")
                                      (("2"
                                        (inst?)
                                        (("2"
                                          (decompose-equality -1)
                                          (("2"
                                            (inst -1 "x!1")
                                            (("2"
                                              (iff)
                                              (("2"
                                                (flatten)
                                                (("2"
                                                  (split -2)
                                                  (("1"
                                                    (skeep -1)
                                                    (("1"
                                                      (expand
                                                       "DLOR"
                                                       -1)
                                                      (("1"
                                                        (inst 1 "i")
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Environment type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (DLOR const-decl "bool" bool_expr nil)
    (HP type-decl nil HP_adt nil)
    (SOMERUNS_st const-decl "bool" ltl_expr nil)
    (star? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (STAR adt-constructor-decl "[HP -> (star?)]" HP_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (list type-decl nil list_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (SOMERUNS_tr const-decl "bool" ltl_expr nil)
    (normDLEG const-decl "bool" ltl_expr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (someruns_tr_star formula-decl nil trace_bounded_star_semantics
     nil)
    (dltl_BSTAREG_dual formula-decl nil temporal_logic nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (someruns_st_star formula-decl nil trace_bounded_star_semantics
     nil)
    (below type-eq-decl nil naturalnumbers nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (< const-decl "bool" reals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (init_env const-decl "Environment" trace_semantics nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (BSTAR def-decl "HP" bounded_star_semantics nil)
    (DLBOOL const-decl "bool" bool_expr nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (length def-decl "nat" list_props nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (final_env const-decl "Environment" trace_semantics nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (last const-decl "T" more_list_props structures)
    (nth def-decl "T" list_props nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (x!1 skolem-const-decl "[nat -> real]" temporal_logic nil)
    (STATE adt-constructor-decl "[Environment -> (state?)]"
     TraceState_adt nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil))
   shostak))
 (dltl_STARGE_dual 0
  (dltl_STARGE_dual-1 nil 3901701320
   ("" (skeep)
    (("" (decompose-equality 1)
      (("" (iff)
        (("" (split 1)
          (("1" (flatten)
            (("1" (expand "DLOR" -1)
              (("1" (split -1)
                (("1" (expand "SOMERUNS_tr" 1)
                  (("1" (inst 1 "(: STATE( x!1 ) :)")
                    (("1" (split 1)
                      (("1" (grind) nil nil)
                       ("2" (grind)
                        (("2" (expand "trace_semantic_rel" 1)
                          (("2" (flatten)
                            (("2" (hide 2) (("2" (grind) nil nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("3" (grind) nil nil))
                      nil)
                     ("2" (grind) nil nil))
                    nil))
                  nil)
                 ("2" (lemma "someruns_tr_star")
                  (("2" (inst?)
                    (("2" (assert)
                      (("2" (hide 2)
                        (("2" (lemma "someruns_st_star")
                          (("2" (inst?)
                            (("2" (assert)
                              (("2"
                                (hide -2)
                                (("2"
                                  (skeep*)
                                  (("2"
                                    (lemma "dltl_BSTARGE_dual")
                                    (("2"
                                      (inst?)
                                      (("2"
                                        (decompose-equality -1)
                                        (("2"
                                          (inst -1 "x!1")
                                          (("2"
                                            (iff -1)
                                            (("2"
                                              (flatten)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (split -1)
                                                  (("1"
                                                    (propax)
                                                    nil
                                                    nil)
                                                   ("2"
                                                    (hide 2)
                                                    (("2"
                                                      (inst 1 "i")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (expand
                                                           "DLOR"
                                                           1)
                                                          (("2"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (flatten)
            (("2" (lemma "dltl_BSTARGE_dual")
              (("2" (lemma "someruns_st_star")
                (("2" (expand "DLOR" 1)
                  (("2" (flatten)
                    (("2" (inst?)
                      (("2" (assert)
                        (("2" (lemma "someruns_tr_star")
                          (("2" (inst?)
                            (("2" (assert)
                              (("2"
                                (skeep)
                                (("2"
                                  (hide -3)
                                  (("2"
                                    (inst -2 "A" _ _)
                                    (("2"
                                      (inst? -2)
                                      (("2"
                                        (decompose-equality -2)
                                        (("2"
                                          (inst -1 "x!1")
                                          (("2"
                                            (iff -1)
                                            (("2"
                                              (flatten)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (split -2)
                                                  (("1"
                                                    (skeep -1)
                                                    (("1"
                                                      (inst 1 "i!1")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (expand
                                                           "DLOR"
                                                           -1)
                                                          (("1"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Environment type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (DLOR const-decl "bool" bool_expr nil)
    (HP type-decl nil HP_adt nil)
    (SOMERUNS_st const-decl "bool" ltl_expr nil)
    (star? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (STAR adt-constructor-decl "[HP -> (star?)]" HP_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (list type-decl nil list_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (SOMERUNS_tr const-decl "bool" ltl_expr nil)
    (normDLGE const-decl "bool" ltl_expr nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (someruns_tr_star formula-decl nil trace_bounded_star_semantics
     nil)
    (someruns_st_star formula-decl nil trace_bounded_star_semantics
     nil)
    (TRUE const-decl "bool" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (BSTAR def-decl "HP" bounded_star_semantics nil)
    (dltl_BSTARGE_dual formula-decl nil temporal_logic nil)
    (below type-eq-decl nil naturalnumbers nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (< const-decl "bool" reals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (init_env const-decl "Environment" trace_semantics nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (length def-decl "nat" list_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (final_env const-decl "Environment" trace_semantics nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (last const-decl "T" more_list_props structures)
    (nth def-decl "T" list_props nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (x!1 skolem-const-decl "[nat -> real]" temporal_logic nil)
    (STATE adt-constructor-decl "[Environment -> (state?)]"
     TraceState_adt nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil))
   shostak))
 (dltl_STAREG 0
  (dltl_STAREG-1 nil 3889265671
   ("" (skeep)
    (("" (lemma "dltl_STARGE_dual")
      (("" (inst?)
        (("" (inst -1 "DLNOT(P)" "DLNOT(Q)")
          (("" (assert)
            (("" (decompose-equality 1)
              (("" (iff 1)
                (("" (split 1)
                  (("1" (flatten)
                    (("1" (decompose-equality -2)
                      (("1" (inst?)
                        (("1" (iff)
                          (("1" (assert)
                            (("1" (flatten)
                              (("1"
                                (expand "DLAND" -3)
                                (("1"
                                  (flatten)
                                  (("1"
                                    (assert)
                                    (("1"
                                      (split -2)
                                      (("1"
                                        (expand "DLOR" -2)
                                        (("1"
                                          (hide -2)
                                          (("1"
                                            (expand "DLOR")
                                            (("1"
                                              (split -1)
                                              (("1"
                                                (expand "DLNOT" -1)
                                                (("1"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide 1)
                                                (("2"
                                                  (expand
                                                   "ALLRUNS_st"
                                                   -3)
                                                  (("2"
                                                    (expand
                                                     "SOMERUNS_st"
                                                     -1)
                                                    (("2"
                                                      (skeep)
                                                      (("2"
                                                        (inst
                                                         -5
                                                         "trace")
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (expand
                                                             "ALLRUNS_tr")
                                                            (("2"
                                                              (expand
                                                               "SOMERUNS_tr"
                                                               -3)
                                                              (("2"
                                                                (skeep)
                                                                (("2"
                                                                  (inst?)
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (expand
                                                                       "normDLGE")
                                                                      (("2"
                                                                        (expand
                                                                         "normDLEG")
                                                                        (("2"
                                                                          (case
                                                                           "finite_trace?(trace_1)")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (expand
                                                                               "DLNOT")
                                                                              (("1"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (lemma
                                                                               "DLGE_nth")
                                                                              (("2"
                                                                                (inst?)
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (hide
                                                                                     -6)
                                                                                    (("2"
                                                                                      (lemma
                                                                                       "DLEG_nth")
                                                                                      (("2"
                                                                                        (inst?)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (hide
                                                                                             -8)
                                                                                            (("2"
                                                                                              (skeep)
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -2
                                                                                                 "j")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (skeep)
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -1
                                                                                                       "i")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (case
                                                                                                           "state?(nth(trace_1,i+j))")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "DLNOT")
                                                                                                              (("1"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "DLNOT")
                                                                                                              (("2"
                                                                                                                (case
                                                                                                                 "state_diff?(nth(trace_1,i+j))")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (case
                                                                                                                     "i=0")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (skeep)
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -4
                                                                                                                           "T")
                                                                                                                          (("1"
                                                                                                                            (skeep)
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               -3
                                                                                                                               "t")
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (skeep)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -2
                                                                                                                           "t")
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (case
                                                                                                                     "i=0")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (skeep)
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -3
                                                                                                                           "T")
                                                                                                                          (("1"
                                                                                                                            (skeep)
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               -2
                                                                                                                               "t")
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (skeep)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -1
                                                                                                                           "t")
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (assert)
                                        (("2"
                                          (hide -)
                                          (("2"
                                            (expand "ALLRUNS_tr")
                                            (("2"
                                              (expand "SOMERUNS_tr")
                                              (("2"
                                                (skeep)
                                                (("2"
                                                  (inst?)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (expand
                                                       "normDLGE")
                                                      (("2"
                                                        (expand
                                                         "normDLEG")
                                                        (("2"
                                                          (case
                                                           "finite_trace?(trace)")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (expand
                                                               "DLNOT")
                                                              (("1"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (assert)
                                                            (("2"
                                                              (lemma
                                                               "DLEG_nth")
                                                              (("2"
                                                                (inst?)
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (hide
                                                                     4)
                                                                    (("2"
                                                                      (lemma
                                                                       "DLGE_nth")
                                                                      (("2"
                                                                        (inst?)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (skeep)
                                                                            (("2"
                                                                              (inst
                                                                               3
                                                                               "j")
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (skeep)
                                                                                  (("2"
                                                                                    (inst
                                                                                     2
                                                                                     "i")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (case
                                                                                         "error?(nth(trace,i+j))")
                                                                                        (("1"
                                                                                          (typepred
                                                                                           "trace")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "wf_trace?"
                                                                                             -1)
                                                                                            (("1"
                                                                                              (flatten)
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -2
                                                                                                 "i+j")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (case
                                                                                             "state_diff?(nth(trace,i+j))")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (case
                                                                                                 "i=0")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (skeep)
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       6
                                                                                                       "T")
                                                                                                      (("1"
                                                                                                        (skeep)
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           3
                                                                                                           "t")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "DLNOT")
                                                                                                              (("1"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (skeep)
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       4
                                                                                                       "t")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "DLNOT")
                                                                                                          (("2"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (case
                                                                                                 "state?(nth(trace,i+j))")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "DLNOT")
                                                                                                    (("1"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (case
                                                                                                     "i=0")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (skeep)
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           8
                                                                                                           "T")
                                                                                                          (("1"
                                                                                                            (skeep)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               5
                                                                                                               "t")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "DLNOT")
                                                                                                                (("1"
                                                                                                                  (propax)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (skeep)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           6
                                                                                                           "t")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "DLNOT")
                                                                                                            (("2"
                                                                                                              (propax)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (flatten)
                    (("2" (decompose-equality -2)
                      (("2" (inst?)
                        (("2" (assert)
                          (("2" (iff)
                            (("2" (flatten)
                              (("2"
                                (split -1)
                                (("1"
                                  (hide -2)
                                  (("1"
                                    (hide 1)
                                    (("1"
                                      (expand "SOMERUNS_tr")
                                      (("1"
                                        (expand "ALLRUNS_tr")
                                        (("1"
                                          (skeep)
                                          (("1"
                                            (inst?)
                                            (("1"
                                              (expand "normDLEG")
                                              (("1"
                                                (expand "normDLGE")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (case
                                                     " finite_trace?(trace)")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (expand
                                                         "DLNOT")
                                                        (("1"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (assert)
                                                      (("2"
                                                        (lemma
                                                         "DLGE_nth")
                                                        (("2"
                                                          (inst?)
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (hide -4)
                                                              (("2"
                                                                (lemma
                                                                 "DLEG_nth")
                                                                (("2"
                                                                  (inst?)
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (hide
                                                                       -5)
                                                                      (("2"
                                                                        (skeep)
                                                                        (("2"
                                                                          (inst
                                                                           -2
                                                                           "j")
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (skeep)
                                                                              (("2"
                                                                                (inst
                                                                                 -1
                                                                                 "i")
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (case
                                                                                     "state?(nth(trace,i+j))")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "DLNOT")
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (case
                                                                                         "state_diff?(nth(trace,i+j))")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (case
                                                                                             "i=0")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (skeep)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -4
                                                                                                   "T")
                                                                                                  (("1"
                                                                                                    (skeep)
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -3
                                                                                                       "t")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "DLNOT")
                                                                                                        (("1"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (skeep)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -2
                                                                                                   "t")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "DLNOT")
                                                                                                    (("2"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (case
                                                                                             "i=0")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (skeep)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -3
                                                                                                   "T")
                                                                                                  (("1"
                                                                                                    (skeep)
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -2
                                                                                                       "t")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "DLNOT")
                                                                                                        (("1"
                                                                                                          (propax)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (skeep)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -1
                                                                                                   "t")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "DLNOT")
                                                                                                    (("2"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (hide -)
                                  (("2"
                                    (expand "DLOR")
                                    (("2"
                                      (expand "DLAND" 2)
                                      (("2"
                                        (expand "DLNOT" 1)
                                        (("2"
                                          (flatten)
                                          (("2"
                                            (assert)
                                            (("2"
                                              (expand "ALLRUNS_st")
                                              (("2"
                                                (expand
                                                 "SOMERUNS_st"
                                                 1)
                                                (("2"
                                                  (skeep)
                                                  (("2"
                                                    (inst?)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (expand
                                                         "ALLRUNS_tr")
                                                        (("2"
                                                          (expand
                                                           "SOMERUNS_tr"
                                                           1)
                                                          (("2"
                                                            (skeep)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (inst
                                                                 1
                                                                 "trace_1")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (expand
                                                                     "normDLGE")
                                                                    (("2"
                                                                      (expand
                                                                       "normDLEG")
                                                                      (("2"
                                                                        (case
                                                                         "finite_trace?(trace_1)")
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil)
                                                                         ("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (lemma
                                                                             "DLEG_nth")
                                                                            (("2"
                                                                              (inst?)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (hide
                                                                                   4)
                                                                                  (("2"
                                                                                    (lemma
                                                                                     "DLGE_nth")
                                                                                    (("2"
                                                                                      (inst?)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (hide
                                                                                           4)
                                                                                          (("2"
                                                                                            (skeep)
                                                                                            (("2"
                                                                                              (inst
                                                                                               3
                                                                                               "j")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (skeep)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     2
                                                                                                     "i")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (case
                                                                                                         "error?(nth(trace_1,i+j))")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (typepred
                                                                                                             "trace_1")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "wf_trace?"
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (flatten)
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -2
                                                                                                                   "i+j")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (case
                                                                                                             "state_diff?(nth(trace_1,i+j))")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "i=0")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (skeep)
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       6
                                                                                                                       "T")
                                                                                                                      (("1"
                                                                                                                        (skeep)
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           3
                                                                                                                           "t")
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (skeep)
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       4
                                                                                                                       "t")
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (case
                                                                                                                 "state?(nth(trace_1,i+j))")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (case
                                                                                                                     "i=0")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (skeep)
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           8
                                                                                                                           "T")
                                                                                                                          (("1"
                                                                                                                            (skeep)
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               5
                                                                                                                               "t")
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (skeep)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           6
                                                                                                                           "t")
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((dltl_STARGE_dual formula-decl nil temporal_logic nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (Environment type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (DLNOT const-decl "bool" bool_expr nil)
    (DLAND const-decl "bool" bool_expr nil)
    (ALLRUNS_st const-decl "bool" ltl_expr nil)
    (star? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (STAR adt-constructor-decl "[HP -> (star?)]" HP_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (list type-decl nil list_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (ALLRUNS_tr const-decl "bool" ltl_expr nil)
    (normDLEG const-decl "bool" ltl_expr nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (DLOR const-decl "bool" bool_expr nil)
    (SOMERUNS_st const-decl "bool" ltl_expr nil)
    (SOMERUNS_tr const-decl "bool" ltl_expr nil)
    (normDLGE const-decl "bool" ltl_expr nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (DLGE_nth formula-decl nil ltl_expr nil)
    (DLEG_nth formula-decl nil ltl_expr nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (below type-eq-decl nil nat_types nil)
    (nth def-decl "T" list_props nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (hp const-decl "bool" interval_def ODEs)
    (D adt-accessor-decl "[(state_diff?) ->
   {D: (dd?) | EXISTS (b: posreal): D = closed_interval(0, b)}]"
     TraceState_adt nil)
    (closed_interval const-decl "(closed_interval?(a, b))" interval_def
     ODEs)
    (closed_interval? const-decl "bool" interval_def ODEs)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (dd? const-decl "bool" hp_expr nil)
    (state_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (< const-decl "bool" reals nil)
    (length def-decl "nat" list_props nil)
    (below type-eq-decl nil naturalnumbers nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (i skolem-const-decl "below(length(trace) - j)" temporal_logic nil)
    (j skolem-const-decl "below(length(trace))" temporal_logic nil)
    (trace skolem-const-decl "(valid_trace?)" temporal_logic nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (error? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (HP type-decl nil HP_adt nil))
   shostak))
 (dltl_STARGE 0
  (dltl_STARGE-1 nil 3889265672
   ("" (lemma "dltl_STAREG_dual")
    (("" (skeep)
      (("" (inst?)
        (("" (inst -1 "DLNOT(P)" "DLNOT(Q)")
          (("" (decompose-equality 1)
            (("" (decompose-equality -1)
              (("" (inst?)
                (("" (iff)
                  (("" (flatten)
                    (("" (split 1)
                      (("1" (flatten)
                        (("1" (split -3)
                          (("1" (hide -3)
                            (("1" (expand "DLOR")
                              (("1"
                                (expand "DLNOT")
                                (("1"
                                  (expand "DLAND")
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (split -1)
                                      (("1" (propax) nil nil)
                                       ("2"
                                        (assert)
                                        (("2"
                                          (hide 1)
                                          (("2"
                                            (expand "ALLRUNS_st")
                                            (("2"
                                              (expand "SOMERUNS_st" -1)
                                              (("2"
                                                (skeep)
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (inst?)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (expand
                                                         "ALLRUNS_tr"
                                                         -5)
                                                        (("2"
                                                          (expand
                                                           "SOMERUNS_tr"
                                                           -3)
                                                          (("2"
                                                            (skeep)
                                                            (("2"
                                                              (inst
                                                               -7
                                                               "trace_1")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (expand
                                                                   "normDLGE")
                                                                  (("2"
                                                                    (expand
                                                                     "normDLEG")
                                                                    (("2"
                                                                      (case
                                                                       "finite_trace?(trace_1)")
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil)
                                                                       ("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (lemma
                                                                           "DLGE_nth")
                                                                          (("2"
                                                                            (inst?)
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (lemma
                                                                                 "DLEG_nth")
                                                                                (("2"
                                                                                  (inst?)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (hide
                                                                                       -7
                                                                                       -9)
                                                                                      (("2"
                                                                                        (skeep)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -2
                                                                                           "j")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (skeep)
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "i")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (case
                                                                                                     "state?(nth(trace_1,i+j))")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (case
                                                                                                         "state_diff?(nth(trace_1,i+j))")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (case
                                                                                                             "i=0")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (skeep)
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -4
                                                                                                                   "T")
                                                                                                                  (("1"
                                                                                                                    (skeep)
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -3
                                                                                                                       "t")
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (skeep)
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -2
                                                                                                                   "t")
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (case
                                                                                                             "i=0")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (skeep)
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -3
                                                                                                                   "T")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (skeep)
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -2
                                                                                                                         "t")
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (skeep)
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -1
                                                                                                                   "t")
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (assert)
                            (("2" (hide -)
                              (("2"
                                (expand "ALLRUNS_tr")
                                (("2"
                                  (expand "SOMERUNS_tr" 1)
                                  (("2"
                                    (skeep)
                                    (("2"
                                      (inst?)
                                      (("2"
                                        (assert)
                                        (("2"
                                          (expand "normDLEG")
                                          (("2"
                                            (expand "normDLGE")
                                            (("2"
                                              (case
                                               "finite_trace?(trace)")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (expand "DLNOT")
                                                  (("1"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (assert)
                                                (("2"
                                                  (expand "DLNOT")
                                                  (("2"
                                                    (lemma "DLEG_nth")
                                                    (("2"
                                                      (inst?)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (lemma
                                                           "DLGE_nth")
                                                          (("2"
                                                            (inst?)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (hide
                                                                 4
                                                                 5)
                                                                (("2"
                                                                  (skeep)
                                                                  (("2"
                                                                    (inst
                                                                     3
                                                                     "j")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (skeep)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (inst
                                                                             2
                                                                             "i")
                                                                            (("2"
                                                                              (case
                                                                               "error?(nth(trace,i+j))")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (typepred
                                                                                   "trace")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "wf_trace?"
                                                                                     -1)
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (inst
                                                                                         -2
                                                                                         "i+j")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (case
                                                                                   "state_diff?(nth(trace,i+j))")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (case
                                                                                       "i=0")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (skeep)
                                                                                          (("1"
                                                                                            (inst
                                                                                             6
                                                                                             "T")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (skeep)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   3
                                                                                                   "t")
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (skeep)
                                                                                          (("2"
                                                                                            (inst
                                                                                             4
                                                                                             "t")
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (case
                                                                                       "state?(nth(trace,i+j))")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil)
                                                                                       ("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (case
                                                                                           "i=0")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (skeep)
                                                                                              (("1"
                                                                                                (inst
                                                                                                 8
                                                                                                 "T")
                                                                                                (("1"
                                                                                                  (skeep)
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     5
                                                                                                     "t")
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (skeep)
                                                                                              (("2"
                                                                                                (inst
                                                                                                 6
                                                                                                 "t")
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (flatten)
                        (("2" (assert)
                          (("2" (split -2)
                            (("1" (hide -3 1)
                              (("1"
                                (expand "ALLRUNS_tr")
                                (("1"
                                  (expand "SOMERUNS_tr" -1)
                                  (("1"
                                    (skeep)
                                    (("1"
                                      (inst?)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (expand "normDLGE")
                                          (("1"
                                            (expand "normDLEG")
                                            (("1"
                                              (case
                                               "finite_trace?(trace)")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (expand "DLNOT" -4)
                                                  (("1"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (assert)
                                                (("2"
                                                  (lemma "DLGE_nth")
                                                  (("2"
                                                    (inst?)
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (lemma
                                                         "DLEG_nth")
                                                        (("2"
                                                          (inst?)
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (hide
                                                               -5
                                                               -6)
                                                              (("2"
                                                                (skeep)
                                                                (("2"
                                                                  (inst
                                                                   -2
                                                                   "j")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (skeep)
                                                                      (("2"
                                                                        (inst
                                                                         -1
                                                                         "i")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (expand
                                                                               "DLNOT")
                                                                              (("2"
                                                                                (case
                                                                                 "state?(nth(trace,i+j))")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil)
                                                                                 ("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (case
                                                                                     "state_diff?(nth(trace,i+j))")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (case
                                                                                         "i=0")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (skeep)
                                                                                            (("1"
                                                                                              (inst
                                                                                               -4
                                                                                               "T")
                                                                                              (("1"
                                                                                                (skeep)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -3
                                                                                                   "t")
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (skeep)
                                                                                            (("2"
                                                                                              (inst
                                                                                               -2
                                                                                               "t")
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (case
                                                                                       "i=0")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (skeep)
                                                                                          (("1"
                                                                                            (inst
                                                                                             -3
                                                                                             "T")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (skeep)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -2
                                                                                                   "t")
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (skeep)
                                                                                          (("2"
                                                                                            (inst
                                                                                             -1
                                                                                             "t")
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide -)
                              (("2"
                                (expand "DLOR")
                                (("2"
                                  (expand "DLAND")
                                  (("2"
                                    (expand "DLNOT")
                                    (("2"
                                      (flatten)
                                      (("2"
                                        (assert)
                                        (("2"
                                          (expand "ALLRUNS_st")
                                          (("2"
                                            (expand "SOMERUNS_st" 1)
                                            (("2"
                                              (skeep)
                                              (("2"
                                                (inst 1 "trace")
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (expand
                                                     "ALLRUNS_tr")
                                                    (("2"
                                                      (expand
                                                       "SOMERUNS_tr"
                                                       1)
                                                      (("2"
                                                        (skeep)
                                                        (("2"
                                                          (inst?)
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (expand
                                                               "normDLEG")
                                                              (("2"
                                                                (expand
                                                                 "normDLGE")
                                                                (("2"
                                                                  (case
                                                                   "finite_trace?(trace_1)")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil)
                                                                   ("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (lemma
                                                                       "DLEG_nth")
                                                                      (("2"
                                                                        (inst?)
                                                                        (("2"
                                                                          (lemma
                                                                           "DLGE_nth")
                                                                          (("2"
                                                                            (inst?)
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (hide
                                                                                 4
                                                                                 5)
                                                                                (("2"
                                                                                  (skeep)
                                                                                  (("2"
                                                                                    (inst
                                                                                     3
                                                                                     "j")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (skeep)
                                                                                        (("2"
                                                                                          (inst
                                                                                           2
                                                                                           "i")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (case
                                                                                               "state_diff?(nth(trace_1,i+j))")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (case
                                                                                                   "i=0")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (skeep)
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         5
                                                                                                         "T")
                                                                                                        (("1"
                                                                                                          (skeep)
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             2
                                                                                                             "t")
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (skeep)
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         3
                                                                                                         "t")
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (case
                                                                                                   "state?(nth(trace_1,i+j))")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (case
                                                                                                       "error?(nth(trace_1,i+j))")
                                                                                                      (("1"
                                                                                                        (typepred
                                                                                                         "trace_1")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "wf_trace?"
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -2
                                                                                                               "i+j")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (case
                                                                                                           "i=0")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (skeep)
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 8
                                                                                                                 "T")
                                                                                                                (("1"
                                                                                                                  (skeep)
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     5
                                                                                                                     "t")
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (skeep)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 6
                                                                                                                 "t")
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (Environment type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (DLNOT const-decl "bool" bool_expr nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (DLOR const-decl "bool" bool_expr nil)
    (SOMERUNS_st const-decl "bool" ltl_expr nil)
    (SOMERUNS_tr const-decl "bool" ltl_expr nil)
    (normDLEG const-decl "bool" ltl_expr nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (DLGE_nth formula-decl nil ltl_expr nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (below type-eq-decl nil naturalnumbers nil)
    (length def-decl "nat" list_props nil)
    (< const-decl "bool" reals nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (hp const-decl "bool" interval_def ODEs)
    (D adt-accessor-decl "[(state_diff?) ->
   {D: (dd?) | EXISTS (b: posreal): D = closed_interval(0, b)}]"
     TraceState_adt nil)
    (closed_interval const-decl "(closed_interval?(a, b))" interval_def
     ODEs)
    (closed_interval? const-decl "bool" interval_def ODEs)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (dd? const-decl "bool" hp_expr nil)
    (state_diff? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (nth def-decl "T" list_props nil)
    (below type-eq-decl nil nat_types nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (DLEG_nth formula-decl nil ltl_expr nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (error? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (trace_1 skolem-const-decl "(valid_trace?)" temporal_logic nil)
    (j skolem-const-decl "below(length(trace_1))" temporal_logic nil)
    (i skolem-const-decl "below(length(trace_1) - j)" temporal_logic
       nil)
    (normDLGE const-decl "bool" ltl_expr nil)
    (ALLRUNS_tr const-decl "bool" ltl_expr nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (list type-decl nil list_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (STAR adt-constructor-decl "[HP -> (star?)]" HP_adt nil)
    (star? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (ALLRUNS_st const-decl "bool" ltl_expr nil)
    (DLAND const-decl "bool" bool_expr nil)
    (HP type-decl nil HP_adt nil)
    (dltl_STAREG_dual formula-decl nil temporal_logic nil))
   shostak))
 (dltl_STARconcap 0
  (dltl_STARconcap-1 nil 3889265674
   ("" (skeep)
    (("" (rewrite "dlSequent_equiv")
      (("" (expand "dlSequent" 1)
        (("" (skeep)
          (("" (inst -2 "0")
            (("" (expand "nth" -2)
              (("" (expand "DLAND" -2)
                (("" (flatten)
                  (("" (expand "DLEXISTS" -2)
                    (("" (skeep)
                      (("" (inst 1 "0")
                        (("" (expand "nth" 1)
                          (("" (assert)
                            ((""
                              (case "FORALL(i:nat): SOMERUNS_tr(STAR(A), normDLGLOBALLY(qQ(x - i*1), P))(env_1)")
                              (("1"
                                (inst -1 "ceiling(x)+1")
                                (("1"
                                  (assert)
                                  (("1"
                                    (case "NOT x- ceiling(x)-1 < 0")
                                    (("1" (assert) nil nil)
                                     ("2"
                                      (expand "SOMERUNS_tr")
                                      (("2"
                                        (skeep)
                                        (("2"
                                          (inst 1 "trace")
                                          (("2"
                                            (assert)
                                            (("2"
                                              (expand "normDLGLOBALLY")
                                              (("2"
                                                (split 1)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (inst
                                                           1
                                                           "-1-ceiling(x)+x")
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (assert)
                                                  (("2"
                                                    (flatten)
                                                    (("2"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (case "NOT x<=0")
                                  (("1" (assert) nil nil)
                                   ("2"
                                    (expand "SOMERUNS_tr" 2)
                                    (("2"
                                      (inst 2 "(: STATE(env_1) :)")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (split 2)
                                          (("1" (grind) nil nil)
                                           ("2"
                                            (expand
                                             "trace_semantic_rel"
                                             1)
                                            (("2"
                                              (flatten)
                                              (("2" (grind) nil nil))
                                              nil))
                                            nil)
                                           ("3"
                                            (expand "normDLGLOBALLY" 1)
                                            (("3"
                                              (split 1)
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (split 1)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (inst 1 "x")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (grind)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (lemma
                                                       "DLGLOBALLY_FORALL")
                                                      (("2"
                                                        (inst?)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (skeep)
                                                            (("2"
                                                              (typepred
                                                               "i")
                                                              (("2"
                                                                (grind)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (flatten)
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (hide 2)
                                                    (("2"
                                                      (grind)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (hide -1)
                                (("2"
                                  (hide -1)
                                  (("2"
                                    (assert)
                                    (("2"
                                      (reveal -)
                                      (("2"
                                        (hide 2)
                                        (("2"
                                          (induct "i" 1)
                                          (("1"
                                            (expand "SOMERUNS_tr" 1)
                                            (("1"
                                              (inst
                                               1
                                               "(: STATE(env_1) :)")
                                              (("1"
                                                (split 1)
                                                (("1" (grind) nil nil)
                                                 ("2"
                                                  (expand
                                                   "trace_semantic_rel"
                                                   1)
                                                  (("2"
                                                    (flatten)
                                                    (("2"
                                                      (hide 2)
                                                      (("2"
                                                        (grind)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("3"
                                                  (expand
                                                   "normDLGLOBALLY")
                                                  (("3"
                                                    (split 1)
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (split 1)
                                                        (("1"
                                                          (grind)
                                                          nil
                                                          nil)
                                                         ("2"
                                                          (lemma
                                                           "DLGLOBALLY_FORALL")
                                                          (("2"
                                                            (inst?)
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (hide
                                                                 2)
                                                                (("2"
                                                                  (skeep)
                                                                  (("2"
                                                                    (typepred
                                                                     "i")
                                                                    (("2"
                                                                      (expand
                                                                       "length"
                                                                       -1)
                                                                      (("2"
                                                                        (expand
                                                                         "length"
                                                                         -1)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (grind)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (flatten)
                                                      (("2"
                                                        (hide 2)
                                                        (("2"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide -2)
                                                (("2" (grind) nil nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (skeep)
                                            (("2"
                                              (expand "SOMERUNS_tr")
                                              (("2"
                                                (skeep -1)
                                                (("2"
                                                  (inst -5 "x-j")
                                                  (("2"
                                                    (rewrite
                                                     "dlSequent_equiv")
                                                    (("2"
                                                      (expand
                                                       "dlSequent"
                                                       -5)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (expand
                                                           "normDLGLOBALLY"
                                                           -3)
                                                          (("2"
                                                            (split -3)
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (inst
                                                                 -7
                                                                 "final_env(trace)")
                                                                (("1"
                                                                  (split
                                                                   -7)
                                                                  (("1"
                                                                    (skeep)
                                                                    (("1"
                                                                      (typepred
                                                                       "j_1")
                                                                      (("1"
                                                                        (expand
                                                                         "length"
                                                                         -1)
                                                                        (("1"
                                                                          (expand
                                                                           "length"
                                                                           -1)
                                                                          (("1"
                                                                            (expand
                                                                             "nth"
                                                                             -2)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (skeep)
                                                                                (("1"
                                                                                  (lemma
                                                                                   " trace_semantic_rel_star_bounded_star")
                                                                                  (("1"
                                                                                    (inst?)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (skeep)
                                                                                        (("1"
                                                                                          (lemma
                                                                                           "trace_semantic_rel_bounded_star_seq_switch_glob_con")
                                                                                          (("1"
                                                                                            (inst
                                                                                             -1
                                                                                             "A"
                                                                                             "i"
                                                                                             _
                                                                                             _
                                                                                             _)
                                                                                            (("1"
                                                                                              (inst
                                                                                               -1
                                                                                               "append(trace,trace_1)"
                                                                                               _
                                                                                               _)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (inst?)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (split
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (skeep)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             1
                                                                                                             "tr1")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               " init_env"
                                                                                                               -2
                                                                                                               1)
                                                                                                              (("1"
                                                                                                                (lemma
                                                                                                                 "car_append[TraceState]")
                                                                                                                (("1"
                                                                                                                  (inst?)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "init_env"
                                                                                                                       -14)
                                                                                                                      (("1"
                                                                                                                        (lift-if
                                                                                                                         -3)
                                                                                                                        (("1"
                                                                                                                          (case
                                                                                                                           "NOT init_env(tr1) = env_1")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (split
                                                                                                                               -3)
                                                                                                                              (("1"
                                                                                                                                (flatten)
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (flatten)
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (split
                                                                                                                               1)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "trace_semantic_rel"
                                                                                                                                 1)
                                                                                                                                (("1"
                                                                                                                                  (flatten)
                                                                                                                                  (("1"
                                                                                                                                    (lemma
                                                                                                                                     "trace_semantic_rel_star_bounded_star_con")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "trace_semantic_rel"
                                                                                                                                       -4)
                                                                                                                                      (("1"
                                                                                                                                        (split
                                                                                                                                         -4)
                                                                                                                                        (("1"
                                                                                                                                          (skeep)
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (hide
                                                                                                                                               -9)
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "trace_semantic_rel"
                                                                                                                                                 2)
                                                                                                                                                (("1"
                                                                                                                                                  (flatten)
                                                                                                                                                  (("1"
                                                                                                                                                    (inst
                                                                                                                                                     2
                                                                                                                                                     "trace1"
                                                                                                                                                     "trace2")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      (("1"
                                                                                                                                                        (inst
                                                                                                                                                         -6
                                                                                                                                                         "A"
                                                                                                                                                         "trace2"
                                                                                                                                                         "i")
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (flatten)
                                                                                                                                          (("2"
                                                                                                                                            (typepred
                                                                                                                                             "tr1")
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "valid_trace?"
                                                                                                                                               -2)
                                                                                                                                              (("2"
                                                                                                                                                (assert)
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "trace_semantic_rel"
                                                                                                                                                   2)
                                                                                                                                                  (("2"
                                                                                                                                                    (flatten)
                                                                                                                                                    (("2"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (hide
                                                                                                                                   1)
                                                                                                                                  (("2"
                                                                                                                                    (hide
                                                                                                                                     -4)
                                                                                                                                    (("2"
                                                                                                                                      (hide
                                                                                                                                       -16)
                                                                                                                                      (("2"
                                                                                                                                        (hide
                                                                                                                                         -13)
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "normDLGLOBALLY")
                                                                                                                                          (("2"
                                                                                                                                            (case
                                                                                                                                             "NOT DLGLOBALLY(State_Trace(P))(append(trace, trace_1))")
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (case
                                                                                                                                                 "NOT DLGLOBALLY(State_Trace(P))(trace_1)")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (hide
                                                                                                                                                   -10)
                                                                                                                                                  (("2"
                                                                                                                                                    (lemma
                                                                                                                                                     "DLGLOBALLY_append")
                                                                                                                                                    (("2"
                                                                                                                                                      (assert)
                                                                                                                                                      (("2"
                                                                                                                                                        (inst?)
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          (("2"
                                                                                                                                                            (hide
                                                                                                                                                             2)
                                                                                                                                                            (("2"
                                                                                                                                                              (typepred
                                                                                                                                                               "trace"
                                                                                                                                                               "trace_1")
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "wf_trace?")
                                                                                                                                                                (("2"
                                                                                                                                                                  (flatten)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (lemma
                                                                                                                                                                     "length_append[TraceState]")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (inst?)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "length"
                                                                                                                                                                           -1)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (split
                                                                                                                                                                               3)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (hide
                                                                                                                                                                                 -1)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (skeep)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (lemma
                                                                                                                                                                                     "length_append[TraceState]")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (lemma
                                                                                                                                                                                       "nth_append[TraceState]")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (inst?)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (inst?)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (lift-if
                                                                                                                                                                                               -1)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (split
                                                                                                                                                                                                 -1)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (flatten)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (inst
                                                                                                                                                                                                     -5
                                                                                                                                                                                                     "i!1")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "valid_trace?"
                                                                                                                                                                                                         -5)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "finite_trace?"
                                                                                                                                                                                                           -18)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (expand
                                                                                                                                                                                                             "last"
                                                                                                                                                                                                             -18)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (propax)
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil)
                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                  (flatten)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (inst
                                                                                                                                                                                                       -7
                                                                                                                                                                                                       "i!1-length(trace)")
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        nil
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (split
                                                                                                                                                 1)
                                                                                                                                                (("1"
                                                                                                                                                  (flatten)
                                                                                                                                                  (("1"
                                                                                                                                                    (split
                                                                                                                                                     -11)
                                                                                                                                                    (("1"
                                                                                                                                                      (flatten)
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "final_env"
                                                                                                                                                           1)
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "final_env"
                                                                                                                                                             -2)
                                                                                                                                                            (("1"
                                                                                                                                                              (lemma
                                                                                                                                                               "last_append[TraceState]")
                                                                                                                                                              (("1"
                                                                                                                                                                (inst?)
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (split
                                                                                                                                                                     1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (flatten)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (flatten)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (typepred
                                                                                                                                                                   "trace_1")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "wf_trace?"
                                                                                                                                                                     -1)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (flatten)
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "finite_trace?")
                                                                                                                                                          (("2"
                                                                                                                                                            (flatten)
                                                                                                                                                            (("2"
                                                                                                                                                              (lemma
                                                                                                                                                               "last_append[TraceState]")
                                                                                                                                                              (("2"
                                                                                                                                                                (inst?)
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (propax)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("3"
                                                                                                                                              (hide
                                                                                                                                               2)
                                                                                                                                              (("3"
                                                                                                                                                (typepred
                                                                                                                                                 "trace"
                                                                                                                                                 "trace_1")
                                                                                                                                                (("3"
                                                                                                                                                  (expand
                                                                                                                                                   "wf_trace?")
                                                                                                                                                  (("3"
                                                                                                                                                    (lemma
                                                                                                                                                     "length_append[TraceState]")
                                                                                                                                                    (("3"
                                                                                                                                                      (inst?)
                                                                                                                                                      (("3"
                                                                                                                                                        (split
                                                                                                                                                         1)
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "length"
                                                                                                                                                           -1)
                                                                                                                                                          (("1"
                                                                                                                                                            (flatten)
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (flatten)
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("3"
                                                                                                                                                          (skeep)
                                                                                                                                                          (("3"
                                                                                                                                                            (lemma
                                                                                                                                                             "nth_append[TraceState]")
                                                                                                                                                            (("3"
                                                                                                                                                              (inst?)
                                                                                                                                                              (("3"
                                                                                                                                                                (assert)
                                                                                                                                                                (("3"
                                                                                                                                                                  (lift-if
                                                                                                                                                                   -1)
                                                                                                                                                                  (("3"
                                                                                                                                                                    (split
                                                                                                                                                                     -1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (flatten)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (inst
                                                                                                                                                                         -5
                                                                                                                                                                         "i!1")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "finite_trace?"
                                                                                                                                                                           -18)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (expand
                                                                                                                                                                               "last"
                                                                                                                                                                               -18)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (propax)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (flatten)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (inst
                                                                                                                                                                           -7
                                                                                                                                                                           "i!1-length(trace)")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (typepred
                                                                                                                     "trace")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "wf_trace?"
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (flatten)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (expand
                                                                                                         "trace_semantic_rel"
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (flatten)
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             1
                                                                                                             "trace"
                                                                                                             "trace_1")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide
                                                                                                 2)
                                                                                                (("2"
                                                                                                  (typepred
                                                                                                   "trace"
                                                                                                   "trace_1")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "wf_trace?"
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "valid_trace?")
                                                                                                      (("2"
                                                                                                        (lemma
                                                                                                         "length_append[TraceState]")
                                                                                                        (("2"
                                                                                                          (inst?)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (split
                                                                                                               1)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "length"
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "wf_trace?")
                                                                                                                    (("1"
                                                                                                                      (flatten)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (expand
                                                                                                                 "wf_trace?")
                                                                                                                (("2"
                                                                                                                  (flatten)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (lemma
                                                                                                                       "car_append[TraceState]")
                                                                                                                      (("2"
                                                                                                                        (inst?)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("3"
                                                                                                                (skeep)
                                                                                                                (("3"
                                                                                                                  (lemma
                                                                                                                   "nth_append[TraceState]")
                                                                                                                  (("3"
                                                                                                                    (inst?)
                                                                                                                    (("3"
                                                                                                                      (assert)
                                                                                                                      (("3"
                                                                                                                        (lift-if
                                                                                                                         -1)
                                                                                                                        (("3"
                                                                                                                          (split
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (flatten)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "wf_trace?")
                                                                                                                                (("1"
                                                                                                                                  (flatten)
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     -5
                                                                                                                                     "i!1")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "finite_trace?"
                                                                                                                                         -14)
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "last"
                                                                                                                                           -14)
                                                                                                                                          (("2"
                                                                                                                                            (propax)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (flatten)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "wf_trace?")
                                                                                                                                (("2"
                                                                                                                                  (flatten)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       -7
                                                                                                                                       "i!1-length(trace)")
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("4"
                                                                                                                (expand
                                                                                                                 "finite_trace?"
                                                                                                                 1)
                                                                                                                (("4"
                                                                                                                  (expand
                                                                                                                   "finite_trace?"
                                                                                                                   -5)
                                                                                                                  (("4"
                                                                                                                    (flatten)
                                                                                                                    (("4"
                                                                                                                      (assert)
                                                                                                                      (("4"
                                                                                                                        (lemma
                                                                                                                         "last_append[TraceState]")
                                                                                                                        (("4"
                                                                                                                          (inst?)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (expand
                                                                                                                             "wf_trace?")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (skeep)
                                                                    (("2"
                                                                      (typepred
                                                                       "i")
                                                                      (("2"
                                                                        (expand
                                                                         "length"
                                                                         -1)
                                                                        (("2"
                                                                          (expand
                                                                           "length"
                                                                           -1)
                                                                          (("2"
                                                                            (expand
                                                                             "nth"
                                                                             1)
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (flatten)
                                                              (("2"
                                                                (inst
                                                                 2
                                                                 "trace")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (expand
                                                                     "normDLGLOBALLY"
                                                                     2)
                                                                    (("2"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((dlSequent_equiv formula-decl nil dynamic_logic nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (Environment type-eq-decl nil hp_def nil)
    (BoolExpr type-eq-decl nil hp_def nil)
    (list type-decl nil list_adt nil)
    (Formulas type-eq-decl nil bool_expr nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (HP type-decl nil HP_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (TraceBoolExpr type-eq-decl nil ltl_expr nil)
    (SOMERUNS_tr const-decl "bool" ltl_expr nil)
    (star? adt-recognizer-decl "[HP -> boolean]" HP_adt nil)
    (STAR adt-constructor-decl "[HP -> (star?)]" HP_adt nil)
    (normDLGLOBALLY const-decl "bool" ltl_expr nil)
    (<= const-decl "bool" reals nil)
    (nonpos_real nonempty-type-eq-decl nil real_types nil)
    (QBoolExpr type-eq-decl nil hp_def nil)
    (DLAND const-decl "bool" bool_expr nil)
    (DLEXISTS const-decl "bool" bool_expr nil)
    (nth def-decl "T" list_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (state? adt-recognizer-decl "[TraceState -> boolean]"
     TraceState_adt nil)
    (STATE adt-constructor-decl "[Environment -> (state?)]"
     TraceState_adt nil)
    nil (init_env const-decl "Environment" trace_semantics nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (trace_semantic_rel inductive-decl "bool" trace_semantics nil)
    (DLGLOBALLY_FORALL formula-decl nil ltl_expr nil)
    (final_env const-decl "Environment" trace_semantics nil)
    (last const-decl "T" more_list_props structures)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (for_it def-decl
     "{t: T | t = for_def(i, upto, a, ext2int(upfrom, upto, f))}"
     for_iterate structures)
    (for const-decl "T" for_iterate structures)
    (iterate_left const-decl "T" for_iterate structures)
    (max_ci const-decl "{rr: (d) | FORALL (x: (d)): x <= rr}"
     more_ci_props ODEs)
    (State_Trace const-decl "bool" ltl_expr nil)
    (cut_state_diff const-decl
     "{tt: Trace | length(tt) = length(trace)}" ltl_expr nil)
    (cut_inf_diff const-decl "Trace" ltl_expr nil)
    (DLGLOBALLY const-decl "bool" ltl_expr nil)
    (\|- const-decl "bool" dynamic_logic nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (int_times_int_is_int application-judgement "int" integers nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (NOT const-decl "[bool -> bool]" booleans nil) nil
    (ceiling const-decl "{i | x <= i & i < x + 1}" floor_ceil nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (integer nonempty-type-from-decl nil integers nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (pred type-eq-decl nil defined_types nil)
    (nat_induction formula-decl nil naturalnumbers nil)
    (trace_semantic_rel_star_bounded_star formula-decl nil
     trace_bounded_star_semantics nil)
    (trace_semantic_rel_bounded_star_seq_switch_glob_con formula-decl
     nil trace_bounded_star_semantics nil)
    (append def-decl "list[T]" list_props nil) nil nil
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (trace_semantic_rel_star_bounded_star_con formula-decl nil
     trace_bounded_star_semantics nil)
    nil (last_append formula-decl nil more_list_props structures)
    (nth_append formula-decl nil more_list_props structures) nil
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (length_append formula-decl nil list_props nil)
    (DLGLOBALLY_append formula-decl nil ltl_expr nil)
    (car_append formula-decl nil more_list_props structures) nil
    (= const-decl "[T, T -> boolean]" equalities nil)
    (length_singleton formula-decl nil more_list_props structures)
    (< const-decl "bool" reals nil)
    (length def-decl "nat" list_props nil)
    (below type-eq-decl nil naturalnumbers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (dlSequent const-decl "bool" dynamic_logic nil))
   shostak))
 (ALLRUNS_st_imp 0
  (ALLRUNS_st_imp-1 nil 3901379612
   ("" (skeep)
    (("" (expand "ALLRUNS_st")
      (("" (expand "ALLRUNS_tr")
        (("" (skeep)
          (("" (insteep)
            (("1" (assert)
              (("1" (expand "normDLGE") (("1" (propax) nil nil)) nil))
              nil)
             ("2" (typepred "trace")
              (("2" (expand "valid_trace?") (("2" (propax) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((ALLRUNS_st const-decl "bool" ltl_expr nil)
    (normDLGE const-decl "bool" ltl_expr nil)
    (finite_trace? const-decl "bool" trace_semantics nil)
    (valid_trace? const-decl "bool" trace_semantics nil)
    (Trace type-eq-decl nil trace_semantics nil)
    (wf_trace? const-decl "bool" trace_semantics nil)
    (list type-decl nil list_adt nil)
    (TraceState type-decl nil TraceState_adt nil)
    (ALLRUNS_tr const-decl "bool" ltl_expr nil))
   shostak))
 (ALLRUNS_st_finite_equiv 0
  (ALLRUNS_st_finite_equiv-1 nil 3901701334
   ("" (skeep)
    (("" (expand "ALLRUNS_st")
      (("" (expand "normDLGE") (("" (propax) nil nil)) nil)) nil))
    nil)
   ((ALLRUNS_st const-decl "bool" ltl_expr nil)
    (normDLGE const-decl "bool" ltl_expr nil))
   shostak)))