%%
% @theory: continuity_re_props
% @author: lmwhite3
% @date: Tue, 30 Aug 2022 15:08:12 GMT
%%
continuity_re_props: THEORY
  BEGIN 

IMPORTING continuity_re_def

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%| Continuous RealExpr properties including sum,     |% 
%| difference, product, division.                    |%
%| These are used in strategies to check continuity. |%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

  cont_re_val: LEMMA
  FORALL(P:(ddl_dom?),v:dLVar):
  cont_re?(P)(val(v))

  cont_re_cnst: LEMMA
  FORALL(P:(ddl_dom?),r:real):
  cont_re?(P)(cnst(r))

  cont_re_prod: LEMMA
  FORALL(P:(ddl_dom?),re1,re2:(cont_re?(P))):
  cont_re?(P)(re1 * re2)

  cont_re_pow: LEMMA
  FORALL(P:(ddl_dom?),re:(cont_re?(P)),p:nat):
  cont_re?(P)(re ^ p)
  
  cont_re_sum: LEMMA
  FORALL(P:(ddl_dom?),re1,re2:(cont_re?(P))):
  cont_re?(P)(re1 + re2)

  cont_re_diff: LEMMA
  FORALL(P:(ddl_dom?),re1,re2:(cont_re?(P))):
  cont_re?(P)(re1 - re2)

  cont_re_div_aux: LEMMA
  FORALL(P:(ddl_dom?),re1,re2:(cont_re?(P))):
  (FORALL(env:Environment): re2(env) /= 0) IMPLIES
  cont_re?(P)(real_fun_ops./(re1,re2))

  cont_re_div: LEMMA
  FORALL(P:(ddl_dom?),re1,re2:(cont_re?(P))):
  (FORALL(env:Environment): re2(env) /= 0) IMPLIES
  cont_re?(P)(re1 / re2)

  END continuity_re_props
