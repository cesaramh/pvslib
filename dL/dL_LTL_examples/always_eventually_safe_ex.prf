(always_eventually_safe_ex
 (f_TCC1 0
  (f_TCC1-1 nil 3904144099 ("" (subtype-tcc) nil nil)
   ((dd? const-decl "bool" hp_expr dL)) nil
   (f subtype "interval_def.hp(0)" "(hp_expr.dd?)")))
 (f_TCC2 0
  (f_TCC2-1 nil 3904144099 ("" (subtype-tcc) nil nil)
   ((null_MapExprInj name-judgement "MapExprInj" hp_def dL)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (dLVar type-decl nil hp_def dL)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (Environment type-eq-decl nil hp_def dL)
    (RealExpr type-eq-decl nil hp_def dL)
    (MapExpr type-eq-decl nil hp_def dL)
    (list type-decl nil list_adt nil)
    (mapexpr_inj const-decl "bool" hp_def dL)
    (ODEs type-eq-decl nil hp_def dL)
    (dd? const-decl "bool" hp_expr dL)
    (ODEs_s? const-decl "bool" ODEs_equiv dL)
    (hp const-decl "bool" interval_def ODEs)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (ODEs_s? const-decl "bool" ODEs_equiv dL)
    (solution_odes_u? const-decl "bool" hp_expr dL)
    (derivable_odes? const-decl "bool" hp_expr dL)
    (derivable? const-decl "bool" derivatives analysis)
    (derivable? const-decl "bool" derivatives_def analysis)
    (convergent? const-decl "bool" lim_of_functions analysis)
    (convergence const-decl "bool" lim_of_functions analysis)
    (convergence const-decl "bool" convergence_functions analysis)
    (NQ const-decl "real" derivatives_def analysis)
    (restrict const-decl "R" restrict nil)
    (adh const-decl "setof[real]" convergence_functions analysis)
    (fullset const-decl "set" sets nil)
    (solution_odes? const-decl "bool" hp_expr dL)
    (sol_at_t? const-decl "bool" hp_expr dL)
    (deriv const-decl "[T -> real]" derivatives analysis)
    (deriv const-decl "real" derivatives_def analysis)
    (env_at_t? const-decl "bool" hp_expr dL)
    (/= const-decl "boolean" notequal nil)
    (real_plus_real_is_real application-judgement "real" reals nil))
   nil (f subtype "1" "below[length[MapExpr](ff)]")))
 (f_TCC3 0
  (f_TCC3-2 nil 3904144225
   ("" (inst 1 "(: (x,cnst(1)), (y,cnst(1)) :)")
    (("" (expand "length")
      (("" (expand "length")
        (("" (expand "length")
          (("" (expand "nth")
            (("" (expand "nth")
              (("" (split)
                (("1" (dl-mapexpr_inj) (("1" (grind) nil nil)) nil)
                 ("2" (expand "ODEs_s?")
                  (("2" (skeep)
                    (("2" (expand "ODEs_s?")
                      (("2" (use "cnst_lins_sol_u")
                        (("1" (inst -1 "DLTRUE")
                          (("1" (expand "solves_u?")
                            (("1" (inst -1 "envi")
                              (("1"
                                (inst?)
                                (("1"
                                  (assert)
                                  (("1"
                                    (expand "length")
                                    (("1"
                                      (expand "length")
                                      (("1"
                                        (expand "length")
                                        (("1"
                                          (hide -1)
                                          (("1"
                                            (expand "derivable_odes?")
                                            (("1"
                                              (skeep)
                                              (("1"
                                                (typepred "k")
                                                (("1"
                                                  (expand "restrict")
                                                  (("1"
                                                    (expand "Y_sol_ex")
                                                    (("1"
                                                      (case "k=0")
                                                      (("1"
                                                        (expand
                                                         "is_cnst?")
                                                        (("1"
                                                          (expand
                                                           "nth")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (expand
                                                               "cnst")
                                                              (("1"
                                                                (expand
                                                                 "+")
                                                                (("1"
                                                                  (expand
                                                                   "*")
                                                                  (("1"
                                                                    (derivable)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand "nth")
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (expand
                                                             "nth")
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (expand
                                                                 "is_cnst?")
                                                                (("2"
                                                                  (expand
                                                                   "nth")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (expand
                                                                       "nth")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (expand
                                                                           "cnst")
                                                                          (("2"
                                                                            (expand
                                                                             "+")
                                                                            (("2"
                                                                              (expand
                                                                               "*")
                                                                              (("2"
                                                                                (derivable)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (expand "cnst_lins?")
                                  (("2"
                                    (hide -1)
                                    (("2"
                                      (skeep)
                                      (("2"
                                        (skeep)
                                        (("2"
                                          (typepred "i!1")
                                          (("2"
                                            (expand "length")
                                            (("2"
                                              (assert)
                                              (("2"
                                                (case "i!1=0")
                                                (("1"
                                                  (expand "nth")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (inst?)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (expand "nth")
                                                  (("2"
                                                    (expand "nth")
                                                    (("2"
                                                      (inst?)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (expand "DLBOOL")
                                (("2" (propax) nil nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (hide 2)
                          (("2" (split)
                            (("1" (dl-mapexpr_inj)
                              (("1" (grind) nil nil)) nil)
                             ("2" (expand "cnst_lins?")
                              (("2"
                                (skeep)
                                (("2"
                                  (typepred "i")
                                  (("2"
                                    (expand "length")
                                    (("2"
                                      (assert)
                                      (("2"
                                        (case "i=0")
                                        (("1"
                                          (expand "nth")
                                          (("1"
                                            (assert)
                                            (("1" (inst?) nil nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (expand "nth")
                                          (("2"
                                            (expand "nth")
                                            (("2" (inst?) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("3" (inst 1 "1/2")
                  (("3" (skeep)
                    (("3" (expand "cnst") (("3" (assert) nil nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((posrat_div_posrat_is_posrat application-judgement "posrat"
     rationals nil)
    (/= const-decl "boolean" notequal nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (ODEs_s? const-decl "bool" ODEs_equiv dL)
    (DLBOOL const-decl "bool" bool_expr dL)
    (BoolExpr type-eq-decl nil hp_def dL)
    (envi skolem-const-decl "Environment" always_eventually_safe_ex
     nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (length_singleton formula-decl nil more_list_props structures)
    (restrict const-decl "R" restrict nil)
    (* const-decl "[T -> real]" real_fun_ops reals)
    (real_times_real_is_real application-judgement "real" reals nil)
    (derivable_add_lam formula-decl nil derivatives_lam analysis)
    (derivable? const-decl "bool" derivatives analysis)
    (deriv_fun type-eq-decl nil derivatives analysis)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (val const-decl "real" hp_def dL)
    (derivable_const_lam formula-decl nil derivatives_lam analysis)
    (derivable_id_lam formula-decl nil derivatives_lam analysis)
    (id const-decl "(bijective?[T, T])" identity nil)
    (bijective? const-decl "bool" functions nil)
    (deriv_domain? const-decl "bool" deriv_domain_def analysis)
    (not_one_element? const-decl "bool" deriv_domain_def analysis)
    (+ const-decl "[T -> real]" real_fun_ops reals)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (is_cnst? const-decl "bool" dl_solution dL)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (below type-eq-decl nil naturalnumbers nil)
    (derivable_odes? const-decl "bool" hp_expr dL)
    (Y_sol_ex const-decl "[Environment -> real]" dl_solution dL)
    (solves_u? const-decl "bool" dl_solution dL)
    (cnst_lins? const-decl "bool" dl_solution dL)
    (MapExprInj type-eq-decl nil hp_def dL)
    (cnst_lins_sol_u formula-decl nil dl_solution dL)
    (mapexpr_inj_distinct_vars formula-decl nil hp_def dL)
    (map adt-def-decl "list[T1]" list_adt_map nil)
    (TRUE const-decl "bool" booleans nil)
    (distinct_var? def-decl "{b: bool |
   b =
    FORALL (i: below(length(l))):
      NOT dlvar_index(nth(l, i)) = dlvar_index(v)}" hp_def dL)
    (pairwise_distinct_vars? def-decl "{b: bool |
   b =
    FORALL (i, j: below(length(l))):
      i /= j IMPLIES NOT dlvar_index(nth(l, i)) = dlvar_index(nth(l, j))}"
     hp_def dL)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (cnst const-decl "real" hp_def dL)
    (x const-decl "dLVar" always_eventually_safe_ex nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (y const-decl "dLVar" always_eventually_safe_ex nil)
    (nth def-decl "T" list_props nil)
    (below type-eq-decl nil nat_types nil)
    (< const-decl "bool" reals nil)
    (length def-decl "nat" list_props nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (hp const-decl "bool" interval_def ODEs)
    (ODEs_s? const-decl "bool" ODEs_equiv dL)
    (dd? const-decl "bool" hp_expr dL)
    (ODEs type-eq-decl nil hp_def dL)
    (mapexpr_inj const-decl "bool" hp_def dL)
    (list type-decl nil list_adt nil)
    (MapExpr type-eq-decl nil hp_def dL)
    (RealExpr type-eq-decl nil hp_def dL)
    (Environment type-eq-decl nil hp_def dL)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (dLVar type-decl nil hp_def dL)
    (null_MapExprInj name-judgement "MapExprInj" hp_def dL))
   nil
   (f existence ""
    "{ff: (ODEs_equiv.ODEs_s?(interval_def.hp(0))) | booleans.AND(list_props[MapExpr].length(ff) = 2, booleans.AND(list_props[MapExpr].nth(ff, 1)`1 = always_eventually_safe_ex.y, EXISTS (eps: real_types.posreal): FORALL (env: hp_def.Environment): reals.>((list_props[MapExpr].nth(ff, 1)`2)(env), eps)))}"))
  (f_TCC3-1 nil 3904144099 ("" (existence-tcc) nil nil) nil nil
   (f existence ""
    "{ff: (ODEs_equiv.ODEs_s?(interval_def.hp(0))) | booleans.AND(list_props[MapExpr].length(ff) = 2, booleans.AND(list_props[MapExpr].nth(ff, 1)`1 = always_eventually_safe_ex.y, EXISTS (eps: real_types.posreal): FORALL (env: hp_def.Environment): reals.>((list_props[MapExpr].nth(ff, 1)`2)(env), eps)))}")))
 (Always_eventually_safe 0
  (Always_eventually_safe-1 nil 3904144276
   ("" (rewrite "norm_DLEG")
    (("" (rewrite "dltl_SEQtriangleEG" :dir rl)
      (("" (rewrite "dltl_TESTEG_eq" :dir rl)
        ((""
          (case "DLOR(DLNOT((Y >= cnst(0))), (Y >= cnst(0))) = DLTRUE")
          (("1" (replace -1)
            (("1" (rewrite "dltl_DIFFEG_eq" :dir rl)
              (("1" (hide -1)
                (("1" (dl-assert)
                  (("1"
                    (case " SOMERUNS_st(DIFF(f, DLBOOL(TRUE)), ALLRUNS_st(DIFF(f, DLBOOL(TRUE)), (Y >= cnst(0))))")
                    (("1" (dl-grind) nil nil)
                     ("2" (hide 2)
                      (("2" (rewrite "ALLRUNS_eq")
                        (("2" (rewrite "SOMERUNS_eq")
                          (("2" (rewrite "dlSequent_equiv")
                            (("2" (expand "dlSequent")
                              (("2"
                                (skeep)
                                (("2"
                                  (hide -1)
                                  (("2"
                                    (inst 1 "0")
                                    (("2"
                                      (expand "nth")
                                      (("2"
                                        (expand "SOMERUNS")
                                        (("2"
                                          (expand "ALLRUNS")
                                          (("2"
                                            (expand ">=")
                                            (("2"
                                              (expand "Y")
                                              (("2"
                                                (expand "val")
                                                (("2"
                                                  (expand "cnst")
                                                  (("2"
                                                    (expand
                                                     "semantic_rel")
                                                    (("2"
                                                      (expand
                                                       "semantic_rel_diff")
                                                      (("2"
                                                        (expand
                                                         "DLBOOL")
                                                        (("2"
                                                          (typepred
                                                           "f")
                                                          (("2"
                                                            (expand
                                                             "ODEs_s?")
                                                            (("2"
                                                              (inst
                                                               -2
                                                               "env")
                                                              (("2"
                                                                (expand
                                                                 "ODEs_s?")
                                                                (("2"
                                                                  (skeep)
                                                                  (("2"
                                                                    (skeep)
                                                                    (("2"
                                                                      (lemma
                                                                       "positive_derivative[(hp(0))]")
                                                                      (("1"
                                                                        (inst
                                                                         -1
                                                                         "fs(1)")
                                                                        (("1"
                                                                          (expand
                                                                           "restrict")
                                                                          (("1"
                                                                            (expand
                                                                             "solution_odes_u?")
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (hide
                                                                                 -4)
                                                                                (("1"
                                                                                  (expand
                                                                                   "solution_odes?")
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "sol_at_t?")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "restrict")
                                                                                        (("1"
                                                                                          (split
                                                                                           -1)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "strict_increasing?")
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "monotonic_antideriv_gt[(hp(0))]")
                                                                                              (("1"
                                                                                                (hide
                                                                                                 -3
                                                                                                 -6)
                                                                                                (("1"
                                                                                                  (case
                                                                                                   "env(dlvar_index(y)) >=0")
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     1
                                                                                                     "env")
                                                                                                    (("1"
                                                                                                      (skeep)
                                                                                                      (("1"
                                                                                                        (split
                                                                                                         -8)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (skeep*)
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -4
                                                                                                             "0"
                                                                                                             "r")
                                                                                                            (("1"
                                                                                                              (case
                                                                                                               "env_at_t?(f, fs, env, r)(envo_1)")
                                                                                                              (("1"
                                                                                                                (hide
                                                                                                                 -2)
                                                                                                                (("1"
                                                                                                                  (case
                                                                                                                   "r=0")
                                                                                                                  (("1"
                                                                                                                    (typepred
                                                                                                                     "env_at_t(f,fs,env)(0)")
                                                                                                                    (("1"
                                                                                                                      (inst-cp
                                                                                                                       -2
                                                                                                                       "env")
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -2
                                                                                                                         "envo_1")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (typepred
                                                                                                                       "r")
                                                                                                                      (("2"
                                                                                                                        (typepred
                                                                                                                         "D")
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "dd?")
                                                                                                                          (("2"
                                                                                                                            (split)
                                                                                                                            (("1"
                                                                                                                              (skeep)
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "closed_interval")
                                                                                                                                  (("1"
                                                                                                                                    (flatten)
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "env_at_t?")
                                                                                                                                        (("1"
                                                                                                                                          (flatten)
                                                                                                                                          (("1"
                                                                                                                                            (inst
                                                                                                                                             -5
                                                                                                                                             "1")
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               -9
                                                                                                                                               "1")
                                                                                                                                              (("1"
                                                                                                                                                (replace
                                                                                                                                                 -11)
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (expand
                                                                                                                               "hp")
                                                                                                                              (("2"
                                                                                                                                (replace
                                                                                                                                 -1)
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "env_at_t?")
                                                                                                                                    (("2"
                                                                                                                                      (flatten)
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         -4
                                                                                                                                         "1")
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           -8
                                                                                                                                           "1")
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (expand
                                                                                                                 "env_at_t?")
                                                                                                                (("2"
                                                                                                                  (flatten)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (split
                                                                                                                       1)
                                                                                                                      (("1"
                                                                                                                        (propax)
                                                                                                                        nil
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (skeep)
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -2
                                                                                                                           "k")
                                                                                                                          (("2"
                                                                                                                            (reveal
                                                                                                                             -)
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -5
                                                                                                                               "fs!1"
                                                                                                                               "D")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (typepred
                                                                                                                                   "fs!1")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "solution_odes_u?")
                                                                                                                                    (("1"
                                                                                                                                      (flatten)
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (inst
                                                                                                                                           -7
                                                                                                                                           "k"
                                                                                                                                           "r")
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (skeep)
                                                                                                                                (("2"
                                                                                                                                  (hide-all-but
                                                                                                                                   (-1
                                                                                                                                    1))
                                                                                                                                  (("2"
                                                                                                                                    (typepred
                                                                                                                                     "D")
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "dd?")
                                                                                                                                      (("2"
                                                                                                                                        (split)
                                                                                                                                        (("1"
                                                                                                                                          (skeep)
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -1)
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "closed_interval")
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "hp")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (hide-all-but
                                                                                                               1)
                                                                                                              (("2"
                                                                                                                (typepred
                                                                                                                 "r")
                                                                                                                (("2"
                                                                                                                  (typepred
                                                                                                                   "D")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "dd?")
                                                                                                                    (("2"
                                                                                                                      (split)
                                                                                                                      (("1"
                                                                                                                        (skeep)
                                                                                                                        (("1"
                                                                                                                          (replace
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "closed_interval")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "hp")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("3"
                                                                                                              (expand
                                                                                                               "hp")
                                                                                                              (("3"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (inst
                                                                                                     -1
                                                                                                     "0"
                                                                                                     "-env(dlvar_index(y))/eps"
                                                                                                     "fs(1)"
                                                                                                     "LAMBDA(t:(hp(0))): eps*t")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (split
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "restrict")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "env_at_t?")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -3
                                                                                                                 "1")
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -5)
                                                                                                                  (("1"
                                                                                                                    (replace
                                                                                                                     -3)
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (case
                                                                                                                         "fs(1)(-env(dlvar_index(y)) / eps) >0")
                                                                                                                        (("1"
                                                                                                                          (hide
                                                                                                                           -2)
                                                                                                                          (("1"
                                                                                                                            (name
                                                                                                                             "T"
                                                                                                                             "-env(dlvar_index(y)) / eps")
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (hide
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   2
                                                                                                                                   "env_at_t(f,fs,env)(T)")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (split
                                                                                                                                       2)
                                                                                                                                      (("1"
                                                                                                                                        (flatten)
                                                                                                                                        (("1"
                                                                                                                                          (inst
                                                                                                                                           2
                                                                                                                                           "hp(0)"
                                                                                                                                           "T"
                                                                                                                                           "fs")
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (typepred
                                                                                                                                               " env_at_t(f, fs, env)(T)")
                                                                                                                                              (("1"
                                                                                                                                                (hide
                                                                                                                                                 -2)
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "env_at_t?")
                                                                                                                                                  (("1"
                                                                                                                                                    (propax)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (typepred
                                                                                                                                             "fs")
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "solution_odes_u?")
                                                                                                                                                (("2"
                                                                                                                                                  (reveal
                                                                                                                                                   -)
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "solution_odes?")
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        (("2"
                                                                                                                                                          (split
                                                                                                                                                           1)
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "sol_at_t?")
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                (("1"
                                                                                                                                                                  (expand
                                                                                                                                                                   "restrict")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (propax)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (propax)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("3"
                                                                                                                                            (expand
                                                                                                                                             "T")
                                                                                                                                            (("3"
                                                                                                                                              (expand
                                                                                                                                               "hp")
                                                                                                                                              (("3"
                                                                                                                                                (assert)
                                                                                                                                                (("3"
                                                                                                                                                  (mult-by
                                                                                                                                                   1
                                                                                                                                                   "eps")
                                                                                                                                                  (("3"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("4"
                                                                                                                                            (grind)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (skeep)
                                                                                                                                        (("2"
                                                                                                                                          (split
                                                                                                                                           -1)
                                                                                                                                          (("1"
                                                                                                                                            (typepred
                                                                                                                                             " env_at_t(f, fs, env)(T)")
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "env_at_t?")
                                                                                                                                              (("1"
                                                                                                                                                (flatten)
                                                                                                                                                (("1"
                                                                                                                                                  (inst
                                                                                                                                                   -2
                                                                                                                                                   "1")
                                                                                                                                                  (("1"
                                                                                                                                                    (replace
                                                                                                                                                     -9)
                                                                                                                                                    (("1"
                                                                                                                                                      (decompose-equality
                                                                                                                                                       -4)
                                                                                                                                                      (("1"
                                                                                                                                                        (inst
                                                                                                                                                         -1
                                                                                                                                                         "dlvar_index(y)")
                                                                                                                                                        (("1"
                                                                                                                                                          (replace
                                                                                                                                                           -1)
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (skeep*)
                                                                                                                                            (("2"
                                                                                                                                              (typepred
                                                                                                                                               "fs_1")
                                                                                                                                              (("2"
                                                                                                                                                (lemma
                                                                                                                                                 "solution_odes_u_shift")
                                                                                                                                                (("2"
                                                                                                                                                  (inst
                                                                                                                                                   -1
                                                                                                                                                   "f"
                                                                                                                                                   "fs"
                                                                                                                                                   "env"
                                                                                                                                                   "T")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (split
                                                                                                                                                       -1)
                                                                                                                                                      (("1"
                                                                                                                                                        (lemma
                                                                                                                                                         "solution_odes_u_init")
                                                                                                                                                        (("1"
                                                                                                                                                          (inst
                                                                                                                                                           -1
                                                                                                                                                           "f"
                                                                                                                                                           "fs"
                                                                                                                                                           "fs_1"
                                                                                                                                                           "env"
                                                                                                                                                           "D"
                                                                                                                                                           "r"
                                                                                                                                                           "T")
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            (("1"
                                                                                                                                                              (split
                                                                                                                                                               -1)
                                                                                                                                                              (("1"
                                                                                                                                                                (typepred
                                                                                                                                                                 "env_at_t(f, fs_1, env_at_t(f, fs, env)(T))(r)")
                                                                                                                                                                (("1"
                                                                                                                                                                  (inst
                                                                                                                                                                   -2
                                                                                                                                                                   "envo_1")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (replace
                                                                                                                                                                     -2)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (inst
                                                                                                                                                                       -9
                                                                                                                                                                       "T"
                                                                                                                                                                       "r+T")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (case
                                                                                                                                                                           "r=0")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (replace
                                                                                                                                                                             -1)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (replace
                                                                                                                                                                                 -4)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (typepred
                                                                                                                                                                                   " env_at_t(f, fs, env)(T)")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "env_at_t?")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (flatten)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (inst
                                                                                                                                                                                         -2
                                                                                                                                                                                         "1")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (split
                                                                                                                                                                               -9)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (typepred
                                                                                                                                                                                   "env_at_t(f, fs, env)(T + r)")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "env_at_t?")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (flatten)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (inst
                                                                                                                                                                                         -2
                                                                                                                                                                                         "1")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (typepred
                                                                                                                                                                                   "r")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (typepred
                                                                                                                                                                                     "D")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "dd?")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (split)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (skeep)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (replace
                                                                                                                                                                                             -1)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "closed_interval")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (propax)
                                                                                                                                                                                                nil
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil)
                                                                                                                                                                                         ("2"
                                                                                                                                                                                          (replace
                                                                                                                                                                                           -1)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "hp")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "hp")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (case
                                                                                                                                                                           "T>=0 AND r>=0")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (flatten)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (split
                                                                                                                                                                             1)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (expand
                                                                                                                                                                               "T")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (mult-by
                                                                                                                                                                                 1
                                                                                                                                                                                 "eps")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (typepred
                                                                                                                                                                               "r")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (typepred
                                                                                                                                                                                 "D")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "dd?")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (split)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (skeep)
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (replace
                                                                                                                                                                                         -1)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "closed_interval")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil)
                                                                                                                                                                                     ("2"
                                                                                                                                                                                      (replace
                                                                                                                                                                                       -1)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "hp")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (propax)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("3"
                                                                                                                                                                        (expand
                                                                                                                                                                         "hp")
                                                                                                                                                                        (("3"
                                                                                                                                                                          (expand
                                                                                                                                                                           "T")
                                                                                                                                                                          (("3"
                                                                                                                                                                            (mult-by
                                                                                                                                                                             1
                                                                                                                                                                             "eps")
                                                                                                                                                                            (("3"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (typepred
                                                                                                                                                                       "env_at_t(f, fs_1, env_at_t(f, fs, env)(T))(r)")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "env_at_t?"
                                                                                                                                                                         1)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (split
                                                                                                                                                                             1)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (propax)
                                                                                                                                                                              nil
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (propax)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "solution_odes_u?")
                                                                                                                                                                (("2"
                                                                                                                                                                  (reveal
                                                                                                                                                                   -)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "solution_odes?")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "sol_at_t?")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "restrict")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (split
                                                                                                                                                                             1)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (propax)
                                                                                                                                                                              nil
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (propax)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (expand
                                                                                                                                                             "hp")
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "T")
                                                                                                                                                              (("2"
                                                                                                                                                                (mult-by
                                                                                                                                                                 1
                                                                                                                                                                 "eps")
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (typepred
                                                                                                                                                         "fs")
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "solution_odes_u?")
                                                                                                                                                          (("2"
                                                                                                                                                            (expand
                                                                                                                                                             "solution_odes?")
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "sol_at_t?")
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "restrict")
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (reveal
                                                                                                                                                                     -)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (split
                                                                                                                                                                         1)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (propax)
                                                                                                                                                                          nil
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (flatten)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (expand
                                                                                                                                                                               "solution_odes?")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (hide-all-but
                                                                                                                                                                                   (-8
                                                                                                                                                                                    1))
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "sol_at_t?")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "restrict")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (propax)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (expand
                                                                                                                                                     "hp")
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "T")
                                                                                                                                                      (("2"
                                                                                                                                                        (mult-by
                                                                                                                                                         1
                                                                                                                                                         "eps")
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (expand
                                                                                                           "restrict")
                                                                                                          (("2"
                                                                                                            (skeep)
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -3
                                                                                                               "x!1"
                                                                                                               "env_at_t(f,fs,env)(x!1)")
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -3
                                                                                                                 "1")
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -5
                                                                                                                   "env_at_t(f, fs, env)(x!1)")
                                                                                                                  (("2"
                                                                                                                    (lemma
                                                                                                                     "deriv_prod[(hp(0))]")
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -1
                                                                                                                       "LAMBDA(t:(hp(0))): t"
                                                                                                                       "LAMBDA(t:(hp(0))): eps"
                                                                                                                       "x!1")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (split
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "*")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "deriv"
                                                                                                                                 1
                                                                                                                                 2)
                                                                                                                                (("1"
                                                                                                                                  (replace
                                                                                                                                   -1)
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (lemma
                                                                                                                                       "deriv_const[(hp(0))]")
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "const_fun")
                                                                                                                                        (("1"
                                                                                                                                          (inst?)
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -1)
                                                                                                                                            (("1"
                                                                                                                                              (lemma
                                                                                                                                               "deriv_identity[(hp(0))]")
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "I")
                                                                                                                                                (("1"
                                                                                                                                                  (inst?)
                                                                                                                                                  (("1"
                                                                                                                                                    (replace
                                                                                                                                                     -1)
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (lemma
                                                                                                                             "identity_derivable[(hp(0))]")
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "I")
                                                                                                                              (("2"
                                                                                                                                (inst?)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("3"
                                                                                                                            (lemma
                                                                                                                             "const_derivable[(hp(0))]")
                                                                                                                            (("3"
                                                                                                                              (inst?)
                                                                                                                              (("3"
                                                                                                                                (expand
                                                                                                                                 "const_fun")
                                                                                                                                (("3"
                                                                                                                                  (assert)
                                                                                                                                  (("3"
                                                                                                                                    (inst?)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (use
                                                                                                                       "dd_deriv_domain")
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         -1
                                                                                                                         "hp(0)")
                                                                                                                        (("2"
                                                                                                                          (grind)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("3"
                                                                                                          (hide-all-but
                                                                                                           (1
                                                                                                            2))
                                                                                                          (("3"
                                                                                                            (mult-by
                                                                                                             1
                                                                                                             "eps")
                                                                                                            (("3"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (lemma
                                                                                                       "prod_derivable[(hp(0))]")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "derivable?"
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (skeep)
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -1
                                                                                                             "LAMBDA(t:(hp(0))): t"
                                                                                                             "LAMBDA(t:(hp(0))): eps"
                                                                                                             "x!1")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (lemma
                                                                                                                 "identity_derivable[(hp(0))]")
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "I")
                                                                                                                  (("1"
                                                                                                                    (inst?)
                                                                                                                    (("1"
                                                                                                                      (lemma
                                                                                                                       "const_derivable[(hp(0))]")
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "const_fun")
                                                                                                                        (("1"
                                                                                                                          (inst?)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "*")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (lemma
                                                                                                         "dd_deriv_domain")
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -1
                                                                                                           "hp(0)")
                                                                                                          (("2"
                                                                                                            (grind)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("3"
                                                                                                      (hide
                                                                                                       2
                                                                                                       3)
                                                                                                      (("3"
                                                                                                        (typepred
                                                                                                         "fs")
                                                                                                        (("3"
                                                                                                          (expand
                                                                                                           "derivable_odes?"
                                                                                                           -1)
                                                                                                          (("3"
                                                                                                            (inst?)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("4"
                                                                                                      (expand
                                                                                                       "hp")
                                                                                                      (("4"
                                                                                                        (mult-by
                                                                                                         1
                                                                                                         "eps")
                                                                                                        (("4"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("5"
                                                                                                      (expand
                                                                                                       "hp")
                                                                                                      (("5"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (skeep)
                                                                                            (("2"
                                                                                              (inst
                                                                                               -3
                                                                                               "x!1"
                                                                                               "env_at_t(f,fs,env)(x!1)")
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -3
                                                                                                 "1")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -6
                                                                                                     "env_at_t(f, fs, env)(x!1)")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "deriv"
                                                                                                         -3)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide
                                                                           2)
                                                                          (("2"
                                                                            (expand
                                                                             "solution_odes_u?")
                                                                            (("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (hide
                                                                                 -3)
                                                                                (("2"
                                                                                  (typepred
                                                                                   "fs")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "derivable_odes?")
                                                                                    (("2"
                                                                                      (inst?)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (lemma
                                                                         "dd_noe")
                                                                        (("2"
                                                                          (inst?)
                                                                          nil
                                                                          nil))
                                                                        nil)
                                                                       ("3"
                                                                        (use
                                                                         "dd_con")
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (hide 2)
            (("2" (expand "DLOR")
              (("2" (expand "DLNOT")
                (("2" (expand ">=")
                  (("2" (expand "cnst")
                    (("2" (expand "Y")
                      (("2" (expand "val")
                        (("2" (assert)
                          (("2" (decompose-equality)
                            (("2" (expand "DLBOOL")
                              (("2" (flatten) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((dltl_SEQtriangleEG formula-decl nil temporal_logic dL)
    (HP type-decl nil HP_adt dL) (dLVar type-decl nil hp_def dL)
    (MapExpr type-eq-decl nil hp_def dL)
    (list type-decl nil list_adt nil)
    (mapexpr_inj const-decl "bool" hp_def dL)
    (ODEs type-eq-decl nil hp_def dL)
    (diff? adt-recognizer-decl "[HP -> boolean]" HP_adt dL)
    (DIFF adt-constructor-decl "[[ODEs, BoolExpr] -> (diff?)]" HP_adt
     dL)
    (dd? const-decl "bool" hp_expr dL)
    (ODEs_s? const-decl "bool" ODEs_equiv dL)
    (hp const-decl "bool" interval_def ODEs)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (length def-decl "nat" list_props nil)
    (< const-decl "bool" reals nil)
    (below type-eq-decl nil nat_types nil)
    (nth def-decl "T" list_props nil)
    (y const-decl "dLVar" always_eventually_safe_ex nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (f const-decl "{ff: (ODEs_s?(hp(0))) |
   length(ff) = 2 AND
    nth(ff, 1)`1 = y AND
     EXISTS (eps: posreal):
       FORALL (env: Environment): (nth(ff, 1)`2)(env) > eps}"
     always_eventually_safe_ex nil)
    (DLBOOL const-decl "bool" bool_expr dL)
    (TRUE const-decl "bool" booleans nil)
    (test? adt-recognizer-decl "[HP -> boolean]" HP_adt dL)
    (TEST adt-constructor-decl "[BoolExpr -> (test?)]" HP_adt dL)
    (null_MapExprInj name-judgement "MapExprInj" hp_def dL)
    (DLOR const-decl "bool" bool_expr dL)
    (DLNOT const-decl "bool" bool_expr dL)
    (dltl_DIFFEG_eq formula-decl nil temporal_logic dL)
    (dl_not_true formula-decl nil bool_expr dL)
    (dl_or_true formula-decl nil bool_expr dL)
    (FALSE const-decl "bool" booleans nil)
    (dl_true_and formula-decl nil bool_expr dL)
    (ALLRUNS_st const-decl "bool" ltl_expr dL)
    (bijective? const-decl "bool" functions nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (null? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (null adt-constructor-decl "(null?)" list_adt nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (DLAND const-decl "bool" bool_expr dL)
    (SOMERUNS_st const-decl "bool" ltl_expr dL)
    (ALLRUNS const-decl "bool" bool_expr dL)
    (SOMERUNS_eq formula-decl nil ltl_expr dL)
    (dlSequent const-decl "bool" dynamic_logic dL)
    (semantic_rel_diff const-decl "bool" hp_expr dL)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (positive_derivative formula-decl nil derivative_props analysis)
    (connected? const-decl "bool" deriv_domain_def analysis)
    (not_one_element? const-decl "bool" deriv_domain_def analysis)
    (solution_odes? const-decl "bool" hp_expr dL)
    (sol_at_t? const-decl "bool" hp_expr dL)
    (monotonic_antideriv_gt formula-decl nil derivative_props analysis)
    (dlvar_index adt-accessor-decl "[dLVar -> nat]" hp_def dL)
    (env_at_t? const-decl "bool" hp_expr dL)
    (env skolem-const-decl "Environment" always_eventually_safe_ex nil)
    (envo_1 skolem-const-decl "Environment" always_eventually_safe_ex
     nil)
    (env_at_t const-decl "{env: (env_at_t?(odes, fs, envi, t)) |
   FORALL (env2: (env_at_t?(odes, fs, envi, t))): env = env2}" hp_expr
     dL)
    (closed_interval const-decl "(closed_interval?(a, b))" interval_def
     ODEs)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (r skolem-const-decl "(D)" always_eventually_safe_ex nil)
    (D skolem-const-decl "(dd?)" always_eventually_safe_ex nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (prod_derivable formula-decl nil derivatives_def analysis)
    (both_sides_times_pos_ge1_imp formula-decl nil extra_real_props
     nil)
    (dd_deriv_domain formula-decl nil hp_expr dL)
    (deriv_const formula-decl nil derivatives_def analysis)
    (deriv_identity formula-decl nil derivatives_def analysis)
    (I const-decl "(bijective?[T, T])" identity nil)
    (const_fun const-decl "[T -> real]" real_fun_ops reals)
    (deriv const-decl "[T -> real]" derivatives analysis)
    (* const-decl "[T -> real]" real_fun_ops reals)
    (identity_derivable formula-decl nil derivatives_def analysis)
    (const_derivable formula-decl nil derivatives_def analysis)
    (deriv_domain? const-decl "bool" deriv_domain_def analysis)
    (deriv_prod formula-decl nil derivatives_def analysis)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (T skolem-const-decl "real" always_eventually_safe_ex nil)
    (both_sides_times_pos_ge1 formula-decl nil real_props nil)
    (div_cancel2 formula-decl nil real_props nil)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (D skolem-const-decl "(dd?)" always_eventually_safe_ex nil)
    (fs_1 skolem-const-decl
     "(solution_odes_u?(D, f, env_at_t(f, fs, env)(T)))"
     always_eventually_safe_ex nil)
    (r skolem-const-decl "(D)" always_eventually_safe_ex nil)
    (envo_1 skolem-const-decl "Environment" always_eventually_safe_ex
     nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (solution_odes_u_init formula-decl nil solution_odes_props dL)
    (solution_odes_u_shift formula-decl nil solution_odes_props dL)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (eps skolem-const-decl "posreal" always_eventually_safe_ex nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/= const-decl "boolean" notequal nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (strict_increasing? const-decl "bool" real_fun_preds reals)
    (solution_odes_u? const-decl "bool" hp_expr dL)
    (deriv_fun type-eq-decl nil derivatives analysis)
    (fs skolem-const-decl "(derivable_odes?(hp(0), length(f)))"
     always_eventually_safe_ex nil)
    (derivable_odes? const-decl "bool" hp_expr dL)
    (restrict const-decl "R" restrict nil)
    (derivable? const-decl "bool" derivatives analysis)
    (dd_noe formula-decl nil hp_expr dL)
    (dd_con formula-decl nil hp_expr dL)
    (ODEs_s? const-decl "bool" ODEs_equiv dL)
    (semantic_rel inductive-decl "bool" hp_expr dL)
    (length_singleton formula-decl nil more_list_props structures)
    (below type-eq-decl nil naturalnumbers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (dlSequent_equiv formula-decl nil dynamic_logic dL)
    (SOMERUNS const-decl "bool" bool_expr dL)
    (ALLRUNS_eq formula-decl nil ltl_expr dL)
    (gamma__27 skolem-const-decl "(null?)" always_eventually_safe_ex
     nil)
    (dl_orR formula-decl nil dynamic_logic dL)
    (delta__28 skolem-const-decl "(null?)" always_eventually_safe_ex
     nil)
    (delta__26 skolem-const-decl "(null?)" always_eventually_safe_ex
     nil)
    (dl_andR formula-decl nil dynamic_logic dL)
    (gamma__25 skolem-const-decl "(null?)" always_eventually_safe_ex
     nil)
    (last const-decl "T" more_list_props structures)
    (for_it def-decl
     "{t: T | t = for_def(i, upto, a, ext2int(upfrom, upto, f))}"
     for_iterate structures)
    (for const-decl "T" for_iterate structures)
    (iterate_left const-decl "T" for_iterate structures)
    (val const-decl "real" hp_def dL)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (\|- const-decl "bool" dynamic_logic dL)
    (Formulas type-eq-decl nil bool_expr dL)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (dltl_TESTEG_eq formula-decl nil temporal_logic dL)
    (cnst const-decl "real" hp_def dL)
    (Y const-decl "RealExpr" always_eventually_safe_ex nil)
    (>= const-decl "BoolExpr" bool_expr dL)
    (RealExpr type-eq-decl nil hp_def dL)
    (BoolExpr type-eq-decl nil hp_def dL)
    (Environment type-eq-decl nil hp_def dL)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (norm_DLEG formula-decl nil temporal_logic dL))
   nil)))